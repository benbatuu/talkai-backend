
/**
 * Client
**/

import * as runtime from './runtime/library.js';
import $Types = runtime.Types // general types
import $Public = runtime.Types.Public
import $Utils = runtime.Types.Utils
import $Extensions = runtime.Types.Extensions
import $Result = runtime.Types.Result

export type PrismaPromise<T> = $Public.PrismaPromise<T>


/**
 * Model packageFeature
 * 
 */
export type packageFeature = $Result.DefaultSelection<Prisma.$packageFeaturePayload>
/**
 * Model packages
 * 
 */
export type packages = $Result.DefaultSelection<Prisma.$packagesPayload>
/**
 * Model price
 * 
 */
export type price = $Result.DefaultSelection<Prisma.$pricePayload>
/**
 * Model subscription
 * 
 */
export type subscription = $Result.DefaultSelection<Prisma.$subscriptionPayload>
/**
 * Model chatRoom
 * 
 */
export type chatRoom = $Result.DefaultSelection<Prisma.$chatRoomPayload>
/**
 * Model chat
 * 
 */
export type chat = $Result.DefaultSelection<Prisma.$chatPayload>
/**
 * Model learningProgress
 * 
 */
export type learningProgress = $Result.DefaultSelection<Prisma.$learningProgressPayload>
/**
 * Model languages
 * 
 */
export type languages = $Result.DefaultSelection<Prisma.$languagesPayload>
/**
 * Model entrance
 * 
 */
export type entrance = $Result.DefaultSelection<Prisma.$entrancePayload>
/**
 * Model apiclient
 * 
 */
export type apiclient = $Result.DefaultSelection<Prisma.$apiclientPayload>
/**
 * Model refreshtoken
 * 
 */
export type refreshtoken = $Result.DefaultSelection<Prisma.$refreshtokenPayload>
/**
 * Model revokedtoken
 * 
 */
export type revokedtoken = $Result.DefaultSelection<Prisma.$revokedtokenPayload>
/**
 * Model role
 * 
 */
export type role = $Result.DefaultSelection<Prisma.$rolePayload>
/**
 * Model notification
 * 
 */
export type notification = $Result.DefaultSelection<Prisma.$notificationPayload>
/**
 * Model permission
 * 
 */
export type permission = $Result.DefaultSelection<Prisma.$permissionPayload>
/**
 * Model rolepermission
 * 
 */
export type rolepermission = $Result.DefaultSelection<Prisma.$rolepermissionPayload>
/**
 * Model user
 * 
 */
export type user = $Result.DefaultSelection<Prisma.$userPayload>
/**
 * Model userpermission
 * 
 */
export type userpermission = $Result.DefaultSelection<Prisma.$userpermissionPayload>
/**
 * Model userrole
 * 
 */
export type userrole = $Result.DefaultSelection<Prisma.$userrolePayload>

/**
 * Enums
 */
export namespace $Enums {
  export const duration: {
  MONTHLY: 'MONTHLY',
  YEARLY: 'YEARLY',
  LIFETIME: 'LIFETIME'
};

export type duration = (typeof duration)[keyof typeof duration]


export const Currency: {
  USD: 'USD',
  EUR: 'EUR',
  TRY: 'TRY'
};

export type Currency = (typeof Currency)[keyof typeof Currency]


export const SubscriptionStatus: {
  ACTIVE: 'ACTIVE',
  INACTIVE: 'INACTIVE',
  PENDING: 'PENDING',
  FAILED: 'FAILED'
};

export type SubscriptionStatus = (typeof SubscriptionStatus)[keyof typeof SubscriptionStatus]

}

export type duration = $Enums.duration

export const duration: typeof $Enums.duration

export type Currency = $Enums.Currency

export const Currency: typeof $Enums.Currency

export type SubscriptionStatus = $Enums.SubscriptionStatus

export const SubscriptionStatus: typeof $Enums.SubscriptionStatus

/**
 * ##  Prisma Client ʲˢ
 *
 * Type-safe database client for TypeScript & Node.js
 * @example
 * ```
 * const prisma = new PrismaClient()
 * // Fetch zero or more PackageFeatures
 * const packageFeatures = await prisma.packageFeature.findMany()
 * ```
 *
 *
 * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
 */
export class PrismaClient<
  ClientOptions extends Prisma.PrismaClientOptions = Prisma.PrismaClientOptions,
  U = 'log' extends keyof ClientOptions ? ClientOptions['log'] extends Array<Prisma.LogLevel | Prisma.LogDefinition> ? Prisma.GetEvents<ClientOptions['log']> : never : never,
  ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs
> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['other'] }

    /**
   * ##  Prisma Client ʲˢ
   *
   * Type-safe database client for TypeScript & Node.js
   * @example
   * ```
   * const prisma = new PrismaClient()
   * // Fetch zero or more PackageFeatures
   * const packageFeatures = await prisma.packageFeature.findMany()
   * ```
   *
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
   */

  constructor(optionsArg ?: Prisma.Subset<ClientOptions, Prisma.PrismaClientOptions>);
  $on<V extends U>(eventType: V, callback: (event: V extends 'query' ? Prisma.QueryEvent : Prisma.LogEvent) => void): PrismaClient;

  /**
   * Connect with the database
   */
  $connect(): $Utils.JsPromise<void>;

  /**
   * Disconnect from the database
   */
  $disconnect(): $Utils.JsPromise<void>;

  /**
   * Add a middleware
   * @deprecated since 4.16.0. For new code, prefer client extensions instead.
   * @see https://pris.ly/d/extensions
   */
  $use(cb: Prisma.Middleware): void

/**
   * Executes a prepared raw query and returns the number of affected rows.
   * @example
   * ```
   * const result = await prisma.$executeRaw`UPDATE User SET cool = ${true} WHERE email = ${'user@email.com'};`
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Executes a raw query and returns the number of affected rows.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$executeRawUnsafe('UPDATE User SET cool = $1 WHERE email = $2 ;', true, 'user@email.com')
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Performs a prepared raw query and returns the `SELECT` data.
   * @example
   * ```
   * const result = await prisma.$queryRaw`SELECT * FROM User WHERE id = ${1} OR email = ${'user@email.com'};`
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<T>;

  /**
   * Performs a raw query and returns the `SELECT` data.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$queryRawUnsafe('SELECT * FROM User WHERE id = $1 OR email = $2;', 1, 'user@email.com')
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<T>;


  /**
   * Allows the running of a sequence of read/write operations that are guaranteed to either succeed or fail as a whole.
   * @example
   * ```
   * const [george, bob, alice] = await prisma.$transaction([
   *   prisma.user.create({ data: { name: 'George' } }),
   *   prisma.user.create({ data: { name: 'Bob' } }),
   *   prisma.user.create({ data: { name: 'Alice' } }),
   * ])
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/concepts/components/prisma-client/transactions).
   */
  $transaction<P extends Prisma.PrismaPromise<any>[]>(arg: [...P], options?: { isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<runtime.Types.Utils.UnwrapTuple<P>>

  $transaction<R>(fn: (prisma: Omit<PrismaClient, runtime.ITXClientDenyList>) => $Utils.JsPromise<R>, options?: { maxWait?: number, timeout?: number, isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<R>


  $extends: $Extensions.ExtendsHook<"extends", Prisma.TypeMapCb<ClientOptions>, ExtArgs, $Utils.Call<Prisma.TypeMapCb<ClientOptions>, {
    extArgs: ExtArgs
  }>>

      /**
   * `prisma.packageFeature`: Exposes CRUD operations for the **packageFeature** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more PackageFeatures
    * const packageFeatures = await prisma.packageFeature.findMany()
    * ```
    */
  get packageFeature(): Prisma.packageFeatureDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.packages`: Exposes CRUD operations for the **packages** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Packages
    * const packages = await prisma.packages.findMany()
    * ```
    */
  get packages(): Prisma.packagesDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.price`: Exposes CRUD operations for the **price** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Prices
    * const prices = await prisma.price.findMany()
    * ```
    */
  get price(): Prisma.priceDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.subscription`: Exposes CRUD operations for the **subscription** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Subscriptions
    * const subscriptions = await prisma.subscription.findMany()
    * ```
    */
  get subscription(): Prisma.subscriptionDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.chatRoom`: Exposes CRUD operations for the **chatRoom** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more ChatRooms
    * const chatRooms = await prisma.chatRoom.findMany()
    * ```
    */
  get chatRoom(): Prisma.chatRoomDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.chat`: Exposes CRUD operations for the **chat** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Chats
    * const chats = await prisma.chat.findMany()
    * ```
    */
  get chat(): Prisma.chatDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.learningProgress`: Exposes CRUD operations for the **learningProgress** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more LearningProgresses
    * const learningProgresses = await prisma.learningProgress.findMany()
    * ```
    */
  get learningProgress(): Prisma.learningProgressDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.languages`: Exposes CRUD operations for the **languages** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Languages
    * const languages = await prisma.languages.findMany()
    * ```
    */
  get languages(): Prisma.languagesDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.entrance`: Exposes CRUD operations for the **entrance** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Entrances
    * const entrances = await prisma.entrance.findMany()
    * ```
    */
  get entrance(): Prisma.entranceDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.apiclient`: Exposes CRUD operations for the **apiclient** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Apiclients
    * const apiclients = await prisma.apiclient.findMany()
    * ```
    */
  get apiclient(): Prisma.apiclientDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.refreshtoken`: Exposes CRUD operations for the **refreshtoken** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Refreshtokens
    * const refreshtokens = await prisma.refreshtoken.findMany()
    * ```
    */
  get refreshtoken(): Prisma.refreshtokenDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.revokedtoken`: Exposes CRUD operations for the **revokedtoken** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Revokedtokens
    * const revokedtokens = await prisma.revokedtoken.findMany()
    * ```
    */
  get revokedtoken(): Prisma.revokedtokenDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.role`: Exposes CRUD operations for the **role** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Roles
    * const roles = await prisma.role.findMany()
    * ```
    */
  get role(): Prisma.roleDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.notification`: Exposes CRUD operations for the **notification** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Notifications
    * const notifications = await prisma.notification.findMany()
    * ```
    */
  get notification(): Prisma.notificationDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.permission`: Exposes CRUD operations for the **permission** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Permissions
    * const permissions = await prisma.permission.findMany()
    * ```
    */
  get permission(): Prisma.permissionDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.rolepermission`: Exposes CRUD operations for the **rolepermission** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Rolepermissions
    * const rolepermissions = await prisma.rolepermission.findMany()
    * ```
    */
  get rolepermission(): Prisma.rolepermissionDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.user`: Exposes CRUD operations for the **user** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Users
    * const users = await prisma.user.findMany()
    * ```
    */
  get user(): Prisma.userDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.userpermission`: Exposes CRUD operations for the **userpermission** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Userpermissions
    * const userpermissions = await prisma.userpermission.findMany()
    * ```
    */
  get userpermission(): Prisma.userpermissionDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.userrole`: Exposes CRUD operations for the **userrole** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Userroles
    * const userroles = await prisma.userrole.findMany()
    * ```
    */
  get userrole(): Prisma.userroleDelegate<ExtArgs, ClientOptions>;
}

export namespace Prisma {
  export import DMMF = runtime.DMMF

  export type PrismaPromise<T> = $Public.PrismaPromise<T>

  /**
   * Validator
   */
  export import validator = runtime.Public.validator

  /**
   * Prisma Errors
   */
  export import PrismaClientKnownRequestError = runtime.PrismaClientKnownRequestError
  export import PrismaClientUnknownRequestError = runtime.PrismaClientUnknownRequestError
  export import PrismaClientRustPanicError = runtime.PrismaClientRustPanicError
  export import PrismaClientInitializationError = runtime.PrismaClientInitializationError
  export import PrismaClientValidationError = runtime.PrismaClientValidationError

  /**
   * Re-export of sql-template-tag
   */
  export import sql = runtime.sqltag
  export import empty = runtime.empty
  export import join = runtime.join
  export import raw = runtime.raw
  export import Sql = runtime.Sql



  /**
   * Decimal.js
   */
  export import Decimal = runtime.Decimal

  export type DecimalJsLike = runtime.DecimalJsLike

  /**
   * Metrics
   */
  export type Metrics = runtime.Metrics
  export type Metric<T> = runtime.Metric<T>
  export type MetricHistogram = runtime.MetricHistogram
  export type MetricHistogramBucket = runtime.MetricHistogramBucket

  /**
  * Extensions
  */
  export import Extension = $Extensions.UserArgs
  export import getExtensionContext = runtime.Extensions.getExtensionContext
  export import Args = $Public.Args
  export import Payload = $Public.Payload
  export import Result = $Public.Result
  export import Exact = $Public.Exact

  /**
   * Prisma Client JS version: 6.9.0
   * Query Engine version: 81e4af48011447c3cc503a190e86995b66d2a28e
   */
  export type PrismaVersion = {
    client: string
  }

  export const prismaVersion: PrismaVersion

  /**
   * Utility Types
   */


  export import JsonObject = runtime.JsonObject
  export import JsonArray = runtime.JsonArray
  export import JsonValue = runtime.JsonValue
  export import InputJsonObject = runtime.InputJsonObject
  export import InputJsonArray = runtime.InputJsonArray
  export import InputJsonValue = runtime.InputJsonValue

  /**
   * Types of the values used to represent different kinds of `null` values when working with JSON fields.
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  namespace NullTypes {
    /**
    * Type of `Prisma.DbNull`.
    *
    * You cannot use other instances of this class. Please use the `Prisma.DbNull` value.
    *
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class DbNull {
      private DbNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.JsonNull`.
    *
    * You cannot use other instances of this class. Please use the `Prisma.JsonNull` value.
    *
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class JsonNull {
      private JsonNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.AnyNull`.
    *
    * You cannot use other instances of this class. Please use the `Prisma.AnyNull` value.
    *
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class AnyNull {
      private AnyNull: never
      private constructor()
    }
  }

  /**
   * Helper for filtering JSON entries that have `null` on the database (empty on the db)
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const DbNull: NullTypes.DbNull

  /**
   * Helper for filtering JSON entries that have JSON `null` values (not empty on the db)
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const JsonNull: NullTypes.JsonNull

  /**
   * Helper for filtering JSON entries that are `Prisma.DbNull` or `Prisma.JsonNull`
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const AnyNull: NullTypes.AnyNull

  type SelectAndInclude = {
    select: any
    include: any
  }

  type SelectAndOmit = {
    select: any
    omit: any
  }

  /**
   * Get the type of the value, that the Promise holds.
   */
  export type PromiseType<T extends PromiseLike<any>> = T extends PromiseLike<infer U> ? U : T;

  /**
   * Get the return type of a function which returns a Promise.
   */
  export type PromiseReturnType<T extends (...args: any) => $Utils.JsPromise<any>> = PromiseType<ReturnType<T>>

  /**
   * From T, pick a set of properties whose keys are in the union K
   */
  type Prisma__Pick<T, K extends keyof T> = {
      [P in K]: T[P];
  };


  export type Enumerable<T> = T | Array<T>;

  export type RequiredKeys<T> = {
    [K in keyof T]-?: {} extends Prisma__Pick<T, K> ? never : K
  }[keyof T]

  export type TruthyKeys<T> = keyof {
    [K in keyof T as T[K] extends false | undefined | null ? never : K]: K
  }

  export type TrueKeys<T> = TruthyKeys<Prisma__Pick<T, RequiredKeys<T>>>

  /**
   * Subset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection
   */
  export type Subset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never;
  };

  /**
   * SelectSubset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection.
   * Additionally, it validates, if both select and include are present. If the case, it errors.
   */
  export type SelectSubset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    (T extends SelectAndInclude
      ? 'Please either choose `select` or `include`.'
      : T extends SelectAndOmit
        ? 'Please either choose `select` or `omit`.'
        : {})

  /**
   * Subset + Intersection
   * @desc From `T` pick properties that exist in `U` and intersect `K`
   */
  export type SubsetIntersection<T, U, K> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    K

  type Without<T, U> = { [P in Exclude<keyof T, keyof U>]?: never };

  /**
   * XOR is needed to have a real mutually exclusive union type
   * https://stackoverflow.com/questions/42123407/does-typescript-support-mutually-exclusive-types
   */
  type XOR<T, U> =
    T extends object ?
    U extends object ?
      (Without<T, U> & U) | (Without<U, T> & T)
    : U : T


  /**
   * Is T a Record?
   */
  type IsObject<T extends any> = T extends Array<any>
  ? False
  : T extends Date
  ? False
  : T extends Uint8Array
  ? False
  : T extends BigInt
  ? False
  : T extends object
  ? True
  : False


  /**
   * If it's T[], return T
   */
  export type UnEnumerate<T extends unknown> = T extends Array<infer U> ? U : T

  /**
   * From ts-toolbelt
   */

  type __Either<O extends object, K extends Key> = Omit<O, K> &
    {
      // Merge all but K
      [P in K]: Prisma__Pick<O, P & keyof O> // With K possibilities
    }[K]

  type EitherStrict<O extends object, K extends Key> = Strict<__Either<O, K>>

  type EitherLoose<O extends object, K extends Key> = ComputeRaw<__Either<O, K>>

  type _Either<
    O extends object,
    K extends Key,
    strict extends Boolean
  > = {
    1: EitherStrict<O, K>
    0: EitherLoose<O, K>
  }[strict]

  type Either<
    O extends object,
    K extends Key,
    strict extends Boolean = 1
  > = O extends unknown ? _Either<O, K, strict> : never

  export type Union = any

  type PatchUndefined<O extends object, O1 extends object> = {
    [K in keyof O]: O[K] extends undefined ? At<O1, K> : O[K]
  } & {}

  /** Helper Types for "Merge" **/
  export type IntersectOf<U extends Union> = (
    U extends unknown ? (k: U) => void : never
  ) extends (k: infer I) => void
    ? I
    : never

  export type Overwrite<O extends object, O1 extends object> = {
      [K in keyof O]: K extends keyof O1 ? O1[K] : O[K];
  } & {};

  type _Merge<U extends object> = IntersectOf<Overwrite<U, {
      [K in keyof U]-?: At<U, K>;
  }>>;

  type Key = string | number | symbol;
  type AtBasic<O extends object, K extends Key> = K extends keyof O ? O[K] : never;
  type AtStrict<O extends object, K extends Key> = O[K & keyof O];
  type AtLoose<O extends object, K extends Key> = O extends unknown ? AtStrict<O, K> : never;
  export type At<O extends object, K extends Key, strict extends Boolean = 1> = {
      1: AtStrict<O, K>;
      0: AtLoose<O, K>;
  }[strict];

  export type ComputeRaw<A extends any> = A extends Function ? A : {
    [K in keyof A]: A[K];
  } & {};

  export type OptionalFlat<O> = {
    [K in keyof O]?: O[K];
  } & {};

  type _Record<K extends keyof any, T> = {
    [P in K]: T;
  };

  // cause typescript not to expand types and preserve names
  type NoExpand<T> = T extends unknown ? T : never;

  // this type assumes the passed object is entirely optional
  type AtLeast<O extends object, K extends string> = NoExpand<
    O extends unknown
    ? | (K extends keyof O ? { [P in K]: O[P] } & O : O)
      | {[P in keyof O as P extends K ? P : never]-?: O[P]} & O
    : never>;

  type _Strict<U, _U = U> = U extends unknown ? U & OptionalFlat<_Record<Exclude<Keys<_U>, keyof U>, never>> : never;

  export type Strict<U extends object> = ComputeRaw<_Strict<U>>;
  /** End Helper Types for "Merge" **/

  export type Merge<U extends object> = ComputeRaw<_Merge<Strict<U>>>;

  /**
  A [[Boolean]]
  */
  export type Boolean = True | False

  // /**
  // 1
  // */
  export type True = 1

  /**
  0
  */
  export type False = 0

  export type Not<B extends Boolean> = {
    0: 1
    1: 0
  }[B]

  export type Extends<A1 extends any, A2 extends any> = [A1] extends [never]
    ? 0 // anything `never` is false
    : A1 extends A2
    ? 1
    : 0

  export type Has<U extends Union, U1 extends Union> = Not<
    Extends<Exclude<U1, U>, U1>
  >

  export type Or<B1 extends Boolean, B2 extends Boolean> = {
    0: {
      0: 0
      1: 1
    }
    1: {
      0: 1
      1: 1
    }
  }[B1][B2]

  export type Keys<U extends Union> = U extends unknown ? keyof U : never

  type Cast<A, B> = A extends B ? A : B;

  export const type: unique symbol;



  /**
   * Used by group by
   */

  export type GetScalarType<T, O> = O extends object ? {
    [P in keyof T]: P extends keyof O
      ? O[P]
      : never
  } : never

  type FieldPaths<
    T,
    U = Omit<T, '_avg' | '_sum' | '_count' | '_min' | '_max'>
  > = IsObject<T> extends True ? U : T

  type GetHavingFields<T> = {
    [K in keyof T]: Or<
      Or<Extends<'OR', K>, Extends<'AND', K>>,
      Extends<'NOT', K>
    > extends True
      ? // infer is only needed to not hit TS limit
        // based on the brilliant idea of Pierre-Antoine Mills
        // https://github.com/microsoft/TypeScript/issues/30188#issuecomment-478938437
        T[K] extends infer TK
        ? GetHavingFields<UnEnumerate<TK> extends object ? Merge<UnEnumerate<TK>> : never>
        : never
      : {} extends FieldPaths<T[K]>
      ? never
      : K
  }[keyof T]

  /**
   * Convert tuple to union
   */
  type _TupleToUnion<T> = T extends (infer E)[] ? E : never
  type TupleToUnion<K extends readonly any[]> = _TupleToUnion<K>
  type MaybeTupleToUnion<T> = T extends any[] ? TupleToUnion<T> : T

  /**
   * Like `Pick`, but additionally can also accept an array of keys
   */
  type PickEnumerable<T, K extends Enumerable<keyof T> | keyof T> = Prisma__Pick<T, MaybeTupleToUnion<K>>

  /**
   * Exclude all keys with underscores
   */
  type ExcludeUnderscoreKeys<T extends string> = T extends `_${string}` ? never : T


  export type FieldRef<Model, FieldType> = runtime.FieldRef<Model, FieldType>

  type FieldRefInputType<Model, FieldType> = Model extends never ? never : FieldRef<Model, FieldType>


  export const ModelName: {
    packageFeature: 'packageFeature',
    packages: 'packages',
    price: 'price',
    subscription: 'subscription',
    chatRoom: 'chatRoom',
    chat: 'chat',
    learningProgress: 'learningProgress',
    languages: 'languages',
    entrance: 'entrance',
    apiclient: 'apiclient',
    refreshtoken: 'refreshtoken',
    revokedtoken: 'revokedtoken',
    role: 'role',
    notification: 'notification',
    permission: 'permission',
    rolepermission: 'rolepermission',
    user: 'user',
    userpermission: 'userpermission',
    userrole: 'userrole'
  };

  export type ModelName = (typeof ModelName)[keyof typeof ModelName]


  export type Datasources = {
    db?: Datasource
  }

  interface TypeMapCb<ClientOptions = {}> extends $Utils.Fn<{extArgs: $Extensions.InternalArgs }, $Utils.Record<string, any>> {
    returns: Prisma.TypeMap<this['params']['extArgs'], ClientOptions extends { omit: infer OmitOptions } ? OmitOptions : {}>
  }

  export type TypeMap<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> = {
    globalOmitOptions: {
      omit: GlobalOmitOptions
    }
    meta: {
      modelProps: "packageFeature" | "packages" | "price" | "subscription" | "chatRoom" | "chat" | "learningProgress" | "languages" | "entrance" | "apiclient" | "refreshtoken" | "revokedtoken" | "role" | "notification" | "permission" | "rolepermission" | "user" | "userpermission" | "userrole"
      txIsolationLevel: Prisma.TransactionIsolationLevel
    }
    model: {
      packageFeature: {
        payload: Prisma.$packageFeaturePayload<ExtArgs>
        fields: Prisma.packageFeatureFieldRefs
        operations: {
          findUnique: {
            args: Prisma.packageFeatureFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$packageFeaturePayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.packageFeatureFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$packageFeaturePayload>
          }
          findFirst: {
            args: Prisma.packageFeatureFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$packageFeaturePayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.packageFeatureFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$packageFeaturePayload>
          }
          findMany: {
            args: Prisma.packageFeatureFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$packageFeaturePayload>[]
          }
          create: {
            args: Prisma.packageFeatureCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$packageFeaturePayload>
          }
          createMany: {
            args: Prisma.packageFeatureCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.packageFeatureCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$packageFeaturePayload>[]
          }
          delete: {
            args: Prisma.packageFeatureDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$packageFeaturePayload>
          }
          update: {
            args: Prisma.packageFeatureUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$packageFeaturePayload>
          }
          deleteMany: {
            args: Prisma.packageFeatureDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.packageFeatureUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.packageFeatureUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$packageFeaturePayload>[]
          }
          upsert: {
            args: Prisma.packageFeatureUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$packageFeaturePayload>
          }
          aggregate: {
            args: Prisma.PackageFeatureAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregatePackageFeature>
          }
          groupBy: {
            args: Prisma.packageFeatureGroupByArgs<ExtArgs>
            result: $Utils.Optional<PackageFeatureGroupByOutputType>[]
          }
          count: {
            args: Prisma.packageFeatureCountArgs<ExtArgs>
            result: $Utils.Optional<PackageFeatureCountAggregateOutputType> | number
          }
        }
      }
      packages: {
        payload: Prisma.$packagesPayload<ExtArgs>
        fields: Prisma.packagesFieldRefs
        operations: {
          findUnique: {
            args: Prisma.packagesFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$packagesPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.packagesFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$packagesPayload>
          }
          findFirst: {
            args: Prisma.packagesFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$packagesPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.packagesFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$packagesPayload>
          }
          findMany: {
            args: Prisma.packagesFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$packagesPayload>[]
          }
          create: {
            args: Prisma.packagesCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$packagesPayload>
          }
          createMany: {
            args: Prisma.packagesCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.packagesCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$packagesPayload>[]
          }
          delete: {
            args: Prisma.packagesDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$packagesPayload>
          }
          update: {
            args: Prisma.packagesUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$packagesPayload>
          }
          deleteMany: {
            args: Prisma.packagesDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.packagesUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.packagesUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$packagesPayload>[]
          }
          upsert: {
            args: Prisma.packagesUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$packagesPayload>
          }
          aggregate: {
            args: Prisma.PackagesAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregatePackages>
          }
          groupBy: {
            args: Prisma.packagesGroupByArgs<ExtArgs>
            result: $Utils.Optional<PackagesGroupByOutputType>[]
          }
          count: {
            args: Prisma.packagesCountArgs<ExtArgs>
            result: $Utils.Optional<PackagesCountAggregateOutputType> | number
          }
        }
      }
      price: {
        payload: Prisma.$pricePayload<ExtArgs>
        fields: Prisma.priceFieldRefs
        operations: {
          findUnique: {
            args: Prisma.priceFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$pricePayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.priceFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$pricePayload>
          }
          findFirst: {
            args: Prisma.priceFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$pricePayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.priceFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$pricePayload>
          }
          findMany: {
            args: Prisma.priceFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$pricePayload>[]
          }
          create: {
            args: Prisma.priceCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$pricePayload>
          }
          createMany: {
            args: Prisma.priceCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.priceCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$pricePayload>[]
          }
          delete: {
            args: Prisma.priceDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$pricePayload>
          }
          update: {
            args: Prisma.priceUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$pricePayload>
          }
          deleteMany: {
            args: Prisma.priceDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.priceUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.priceUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$pricePayload>[]
          }
          upsert: {
            args: Prisma.priceUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$pricePayload>
          }
          aggregate: {
            args: Prisma.PriceAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregatePrice>
          }
          groupBy: {
            args: Prisma.priceGroupByArgs<ExtArgs>
            result: $Utils.Optional<PriceGroupByOutputType>[]
          }
          count: {
            args: Prisma.priceCountArgs<ExtArgs>
            result: $Utils.Optional<PriceCountAggregateOutputType> | number
          }
        }
      }
      subscription: {
        payload: Prisma.$subscriptionPayload<ExtArgs>
        fields: Prisma.subscriptionFieldRefs
        operations: {
          findUnique: {
            args: Prisma.subscriptionFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$subscriptionPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.subscriptionFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$subscriptionPayload>
          }
          findFirst: {
            args: Prisma.subscriptionFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$subscriptionPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.subscriptionFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$subscriptionPayload>
          }
          findMany: {
            args: Prisma.subscriptionFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$subscriptionPayload>[]
          }
          create: {
            args: Prisma.subscriptionCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$subscriptionPayload>
          }
          createMany: {
            args: Prisma.subscriptionCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.subscriptionCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$subscriptionPayload>[]
          }
          delete: {
            args: Prisma.subscriptionDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$subscriptionPayload>
          }
          update: {
            args: Prisma.subscriptionUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$subscriptionPayload>
          }
          deleteMany: {
            args: Prisma.subscriptionDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.subscriptionUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.subscriptionUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$subscriptionPayload>[]
          }
          upsert: {
            args: Prisma.subscriptionUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$subscriptionPayload>
          }
          aggregate: {
            args: Prisma.SubscriptionAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateSubscription>
          }
          groupBy: {
            args: Prisma.subscriptionGroupByArgs<ExtArgs>
            result: $Utils.Optional<SubscriptionGroupByOutputType>[]
          }
          count: {
            args: Prisma.subscriptionCountArgs<ExtArgs>
            result: $Utils.Optional<SubscriptionCountAggregateOutputType> | number
          }
        }
      }
      chatRoom: {
        payload: Prisma.$chatRoomPayload<ExtArgs>
        fields: Prisma.chatRoomFieldRefs
        operations: {
          findUnique: {
            args: Prisma.chatRoomFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$chatRoomPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.chatRoomFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$chatRoomPayload>
          }
          findFirst: {
            args: Prisma.chatRoomFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$chatRoomPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.chatRoomFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$chatRoomPayload>
          }
          findMany: {
            args: Prisma.chatRoomFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$chatRoomPayload>[]
          }
          create: {
            args: Prisma.chatRoomCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$chatRoomPayload>
          }
          createMany: {
            args: Prisma.chatRoomCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.chatRoomCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$chatRoomPayload>[]
          }
          delete: {
            args: Prisma.chatRoomDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$chatRoomPayload>
          }
          update: {
            args: Prisma.chatRoomUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$chatRoomPayload>
          }
          deleteMany: {
            args: Prisma.chatRoomDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.chatRoomUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.chatRoomUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$chatRoomPayload>[]
          }
          upsert: {
            args: Prisma.chatRoomUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$chatRoomPayload>
          }
          aggregate: {
            args: Prisma.ChatRoomAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateChatRoom>
          }
          groupBy: {
            args: Prisma.chatRoomGroupByArgs<ExtArgs>
            result: $Utils.Optional<ChatRoomGroupByOutputType>[]
          }
          count: {
            args: Prisma.chatRoomCountArgs<ExtArgs>
            result: $Utils.Optional<ChatRoomCountAggregateOutputType> | number
          }
        }
      }
      chat: {
        payload: Prisma.$chatPayload<ExtArgs>
        fields: Prisma.chatFieldRefs
        operations: {
          findUnique: {
            args: Prisma.chatFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$chatPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.chatFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$chatPayload>
          }
          findFirst: {
            args: Prisma.chatFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$chatPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.chatFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$chatPayload>
          }
          findMany: {
            args: Prisma.chatFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$chatPayload>[]
          }
          create: {
            args: Prisma.chatCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$chatPayload>
          }
          createMany: {
            args: Prisma.chatCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.chatCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$chatPayload>[]
          }
          delete: {
            args: Prisma.chatDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$chatPayload>
          }
          update: {
            args: Prisma.chatUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$chatPayload>
          }
          deleteMany: {
            args: Prisma.chatDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.chatUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.chatUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$chatPayload>[]
          }
          upsert: {
            args: Prisma.chatUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$chatPayload>
          }
          aggregate: {
            args: Prisma.ChatAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateChat>
          }
          groupBy: {
            args: Prisma.chatGroupByArgs<ExtArgs>
            result: $Utils.Optional<ChatGroupByOutputType>[]
          }
          count: {
            args: Prisma.chatCountArgs<ExtArgs>
            result: $Utils.Optional<ChatCountAggregateOutputType> | number
          }
        }
      }
      learningProgress: {
        payload: Prisma.$learningProgressPayload<ExtArgs>
        fields: Prisma.learningProgressFieldRefs
        operations: {
          findUnique: {
            args: Prisma.learningProgressFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$learningProgressPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.learningProgressFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$learningProgressPayload>
          }
          findFirst: {
            args: Prisma.learningProgressFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$learningProgressPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.learningProgressFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$learningProgressPayload>
          }
          findMany: {
            args: Prisma.learningProgressFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$learningProgressPayload>[]
          }
          create: {
            args: Prisma.learningProgressCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$learningProgressPayload>
          }
          createMany: {
            args: Prisma.learningProgressCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.learningProgressCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$learningProgressPayload>[]
          }
          delete: {
            args: Prisma.learningProgressDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$learningProgressPayload>
          }
          update: {
            args: Prisma.learningProgressUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$learningProgressPayload>
          }
          deleteMany: {
            args: Prisma.learningProgressDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.learningProgressUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.learningProgressUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$learningProgressPayload>[]
          }
          upsert: {
            args: Prisma.learningProgressUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$learningProgressPayload>
          }
          aggregate: {
            args: Prisma.LearningProgressAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateLearningProgress>
          }
          groupBy: {
            args: Prisma.learningProgressGroupByArgs<ExtArgs>
            result: $Utils.Optional<LearningProgressGroupByOutputType>[]
          }
          count: {
            args: Prisma.learningProgressCountArgs<ExtArgs>
            result: $Utils.Optional<LearningProgressCountAggregateOutputType> | number
          }
        }
      }
      languages: {
        payload: Prisma.$languagesPayload<ExtArgs>
        fields: Prisma.languagesFieldRefs
        operations: {
          findUnique: {
            args: Prisma.languagesFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$languagesPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.languagesFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$languagesPayload>
          }
          findFirst: {
            args: Prisma.languagesFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$languagesPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.languagesFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$languagesPayload>
          }
          findMany: {
            args: Prisma.languagesFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$languagesPayload>[]
          }
          create: {
            args: Prisma.languagesCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$languagesPayload>
          }
          createMany: {
            args: Prisma.languagesCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.languagesCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$languagesPayload>[]
          }
          delete: {
            args: Prisma.languagesDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$languagesPayload>
          }
          update: {
            args: Prisma.languagesUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$languagesPayload>
          }
          deleteMany: {
            args: Prisma.languagesDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.languagesUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.languagesUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$languagesPayload>[]
          }
          upsert: {
            args: Prisma.languagesUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$languagesPayload>
          }
          aggregate: {
            args: Prisma.LanguagesAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateLanguages>
          }
          groupBy: {
            args: Prisma.languagesGroupByArgs<ExtArgs>
            result: $Utils.Optional<LanguagesGroupByOutputType>[]
          }
          count: {
            args: Prisma.languagesCountArgs<ExtArgs>
            result: $Utils.Optional<LanguagesCountAggregateOutputType> | number
          }
        }
      }
      entrance: {
        payload: Prisma.$entrancePayload<ExtArgs>
        fields: Prisma.entranceFieldRefs
        operations: {
          findUnique: {
            args: Prisma.entranceFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$entrancePayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.entranceFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$entrancePayload>
          }
          findFirst: {
            args: Prisma.entranceFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$entrancePayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.entranceFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$entrancePayload>
          }
          findMany: {
            args: Prisma.entranceFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$entrancePayload>[]
          }
          create: {
            args: Prisma.entranceCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$entrancePayload>
          }
          createMany: {
            args: Prisma.entranceCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.entranceCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$entrancePayload>[]
          }
          delete: {
            args: Prisma.entranceDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$entrancePayload>
          }
          update: {
            args: Prisma.entranceUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$entrancePayload>
          }
          deleteMany: {
            args: Prisma.entranceDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.entranceUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.entranceUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$entrancePayload>[]
          }
          upsert: {
            args: Prisma.entranceUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$entrancePayload>
          }
          aggregate: {
            args: Prisma.EntranceAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateEntrance>
          }
          groupBy: {
            args: Prisma.entranceGroupByArgs<ExtArgs>
            result: $Utils.Optional<EntranceGroupByOutputType>[]
          }
          count: {
            args: Prisma.entranceCountArgs<ExtArgs>
            result: $Utils.Optional<EntranceCountAggregateOutputType> | number
          }
        }
      }
      apiclient: {
        payload: Prisma.$apiclientPayload<ExtArgs>
        fields: Prisma.apiclientFieldRefs
        operations: {
          findUnique: {
            args: Prisma.apiclientFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$apiclientPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.apiclientFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$apiclientPayload>
          }
          findFirst: {
            args: Prisma.apiclientFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$apiclientPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.apiclientFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$apiclientPayload>
          }
          findMany: {
            args: Prisma.apiclientFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$apiclientPayload>[]
          }
          create: {
            args: Prisma.apiclientCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$apiclientPayload>
          }
          createMany: {
            args: Prisma.apiclientCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.apiclientCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$apiclientPayload>[]
          }
          delete: {
            args: Prisma.apiclientDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$apiclientPayload>
          }
          update: {
            args: Prisma.apiclientUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$apiclientPayload>
          }
          deleteMany: {
            args: Prisma.apiclientDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.apiclientUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.apiclientUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$apiclientPayload>[]
          }
          upsert: {
            args: Prisma.apiclientUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$apiclientPayload>
          }
          aggregate: {
            args: Prisma.ApiclientAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateApiclient>
          }
          groupBy: {
            args: Prisma.apiclientGroupByArgs<ExtArgs>
            result: $Utils.Optional<ApiclientGroupByOutputType>[]
          }
          count: {
            args: Prisma.apiclientCountArgs<ExtArgs>
            result: $Utils.Optional<ApiclientCountAggregateOutputType> | number
          }
        }
      }
      refreshtoken: {
        payload: Prisma.$refreshtokenPayload<ExtArgs>
        fields: Prisma.refreshtokenFieldRefs
        operations: {
          findUnique: {
            args: Prisma.refreshtokenFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$refreshtokenPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.refreshtokenFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$refreshtokenPayload>
          }
          findFirst: {
            args: Prisma.refreshtokenFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$refreshtokenPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.refreshtokenFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$refreshtokenPayload>
          }
          findMany: {
            args: Prisma.refreshtokenFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$refreshtokenPayload>[]
          }
          create: {
            args: Prisma.refreshtokenCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$refreshtokenPayload>
          }
          createMany: {
            args: Prisma.refreshtokenCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.refreshtokenCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$refreshtokenPayload>[]
          }
          delete: {
            args: Prisma.refreshtokenDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$refreshtokenPayload>
          }
          update: {
            args: Prisma.refreshtokenUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$refreshtokenPayload>
          }
          deleteMany: {
            args: Prisma.refreshtokenDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.refreshtokenUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.refreshtokenUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$refreshtokenPayload>[]
          }
          upsert: {
            args: Prisma.refreshtokenUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$refreshtokenPayload>
          }
          aggregate: {
            args: Prisma.RefreshtokenAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateRefreshtoken>
          }
          groupBy: {
            args: Prisma.refreshtokenGroupByArgs<ExtArgs>
            result: $Utils.Optional<RefreshtokenGroupByOutputType>[]
          }
          count: {
            args: Prisma.refreshtokenCountArgs<ExtArgs>
            result: $Utils.Optional<RefreshtokenCountAggregateOutputType> | number
          }
        }
      }
      revokedtoken: {
        payload: Prisma.$revokedtokenPayload<ExtArgs>
        fields: Prisma.revokedtokenFieldRefs
        operations: {
          findUnique: {
            args: Prisma.revokedtokenFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$revokedtokenPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.revokedtokenFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$revokedtokenPayload>
          }
          findFirst: {
            args: Prisma.revokedtokenFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$revokedtokenPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.revokedtokenFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$revokedtokenPayload>
          }
          findMany: {
            args: Prisma.revokedtokenFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$revokedtokenPayload>[]
          }
          create: {
            args: Prisma.revokedtokenCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$revokedtokenPayload>
          }
          createMany: {
            args: Prisma.revokedtokenCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.revokedtokenCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$revokedtokenPayload>[]
          }
          delete: {
            args: Prisma.revokedtokenDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$revokedtokenPayload>
          }
          update: {
            args: Prisma.revokedtokenUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$revokedtokenPayload>
          }
          deleteMany: {
            args: Prisma.revokedtokenDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.revokedtokenUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.revokedtokenUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$revokedtokenPayload>[]
          }
          upsert: {
            args: Prisma.revokedtokenUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$revokedtokenPayload>
          }
          aggregate: {
            args: Prisma.RevokedtokenAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateRevokedtoken>
          }
          groupBy: {
            args: Prisma.revokedtokenGroupByArgs<ExtArgs>
            result: $Utils.Optional<RevokedtokenGroupByOutputType>[]
          }
          count: {
            args: Prisma.revokedtokenCountArgs<ExtArgs>
            result: $Utils.Optional<RevokedtokenCountAggregateOutputType> | number
          }
        }
      }
      role: {
        payload: Prisma.$rolePayload<ExtArgs>
        fields: Prisma.roleFieldRefs
        operations: {
          findUnique: {
            args: Prisma.roleFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$rolePayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.roleFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$rolePayload>
          }
          findFirst: {
            args: Prisma.roleFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$rolePayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.roleFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$rolePayload>
          }
          findMany: {
            args: Prisma.roleFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$rolePayload>[]
          }
          create: {
            args: Prisma.roleCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$rolePayload>
          }
          createMany: {
            args: Prisma.roleCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.roleCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$rolePayload>[]
          }
          delete: {
            args: Prisma.roleDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$rolePayload>
          }
          update: {
            args: Prisma.roleUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$rolePayload>
          }
          deleteMany: {
            args: Prisma.roleDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.roleUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.roleUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$rolePayload>[]
          }
          upsert: {
            args: Prisma.roleUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$rolePayload>
          }
          aggregate: {
            args: Prisma.RoleAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateRole>
          }
          groupBy: {
            args: Prisma.roleGroupByArgs<ExtArgs>
            result: $Utils.Optional<RoleGroupByOutputType>[]
          }
          count: {
            args: Prisma.roleCountArgs<ExtArgs>
            result: $Utils.Optional<RoleCountAggregateOutputType> | number
          }
        }
      }
      notification: {
        payload: Prisma.$notificationPayload<ExtArgs>
        fields: Prisma.notificationFieldRefs
        operations: {
          findUnique: {
            args: Prisma.notificationFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$notificationPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.notificationFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$notificationPayload>
          }
          findFirst: {
            args: Prisma.notificationFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$notificationPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.notificationFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$notificationPayload>
          }
          findMany: {
            args: Prisma.notificationFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$notificationPayload>[]
          }
          create: {
            args: Prisma.notificationCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$notificationPayload>
          }
          createMany: {
            args: Prisma.notificationCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.notificationCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$notificationPayload>[]
          }
          delete: {
            args: Prisma.notificationDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$notificationPayload>
          }
          update: {
            args: Prisma.notificationUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$notificationPayload>
          }
          deleteMany: {
            args: Prisma.notificationDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.notificationUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.notificationUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$notificationPayload>[]
          }
          upsert: {
            args: Prisma.notificationUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$notificationPayload>
          }
          aggregate: {
            args: Prisma.NotificationAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateNotification>
          }
          groupBy: {
            args: Prisma.notificationGroupByArgs<ExtArgs>
            result: $Utils.Optional<NotificationGroupByOutputType>[]
          }
          count: {
            args: Prisma.notificationCountArgs<ExtArgs>
            result: $Utils.Optional<NotificationCountAggregateOutputType> | number
          }
        }
      }
      permission: {
        payload: Prisma.$permissionPayload<ExtArgs>
        fields: Prisma.permissionFieldRefs
        operations: {
          findUnique: {
            args: Prisma.permissionFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$permissionPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.permissionFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$permissionPayload>
          }
          findFirst: {
            args: Prisma.permissionFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$permissionPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.permissionFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$permissionPayload>
          }
          findMany: {
            args: Prisma.permissionFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$permissionPayload>[]
          }
          create: {
            args: Prisma.permissionCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$permissionPayload>
          }
          createMany: {
            args: Prisma.permissionCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.permissionCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$permissionPayload>[]
          }
          delete: {
            args: Prisma.permissionDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$permissionPayload>
          }
          update: {
            args: Prisma.permissionUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$permissionPayload>
          }
          deleteMany: {
            args: Prisma.permissionDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.permissionUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.permissionUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$permissionPayload>[]
          }
          upsert: {
            args: Prisma.permissionUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$permissionPayload>
          }
          aggregate: {
            args: Prisma.PermissionAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregatePermission>
          }
          groupBy: {
            args: Prisma.permissionGroupByArgs<ExtArgs>
            result: $Utils.Optional<PermissionGroupByOutputType>[]
          }
          count: {
            args: Prisma.permissionCountArgs<ExtArgs>
            result: $Utils.Optional<PermissionCountAggregateOutputType> | number
          }
        }
      }
      rolepermission: {
        payload: Prisma.$rolepermissionPayload<ExtArgs>
        fields: Prisma.rolepermissionFieldRefs
        operations: {
          findUnique: {
            args: Prisma.rolepermissionFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$rolepermissionPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.rolepermissionFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$rolepermissionPayload>
          }
          findFirst: {
            args: Prisma.rolepermissionFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$rolepermissionPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.rolepermissionFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$rolepermissionPayload>
          }
          findMany: {
            args: Prisma.rolepermissionFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$rolepermissionPayload>[]
          }
          create: {
            args: Prisma.rolepermissionCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$rolepermissionPayload>
          }
          createMany: {
            args: Prisma.rolepermissionCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.rolepermissionCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$rolepermissionPayload>[]
          }
          delete: {
            args: Prisma.rolepermissionDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$rolepermissionPayload>
          }
          update: {
            args: Prisma.rolepermissionUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$rolepermissionPayload>
          }
          deleteMany: {
            args: Prisma.rolepermissionDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.rolepermissionUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.rolepermissionUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$rolepermissionPayload>[]
          }
          upsert: {
            args: Prisma.rolepermissionUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$rolepermissionPayload>
          }
          aggregate: {
            args: Prisma.RolepermissionAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateRolepermission>
          }
          groupBy: {
            args: Prisma.rolepermissionGroupByArgs<ExtArgs>
            result: $Utils.Optional<RolepermissionGroupByOutputType>[]
          }
          count: {
            args: Prisma.rolepermissionCountArgs<ExtArgs>
            result: $Utils.Optional<RolepermissionCountAggregateOutputType> | number
          }
        }
      }
      user: {
        payload: Prisma.$userPayload<ExtArgs>
        fields: Prisma.userFieldRefs
        operations: {
          findUnique: {
            args: Prisma.userFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$userPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.userFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$userPayload>
          }
          findFirst: {
            args: Prisma.userFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$userPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.userFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$userPayload>
          }
          findMany: {
            args: Prisma.userFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$userPayload>[]
          }
          create: {
            args: Prisma.userCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$userPayload>
          }
          createMany: {
            args: Prisma.userCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.userCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$userPayload>[]
          }
          delete: {
            args: Prisma.userDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$userPayload>
          }
          update: {
            args: Prisma.userUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$userPayload>
          }
          deleteMany: {
            args: Prisma.userDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.userUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.userUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$userPayload>[]
          }
          upsert: {
            args: Prisma.userUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$userPayload>
          }
          aggregate: {
            args: Prisma.UserAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateUser>
          }
          groupBy: {
            args: Prisma.userGroupByArgs<ExtArgs>
            result: $Utils.Optional<UserGroupByOutputType>[]
          }
          count: {
            args: Prisma.userCountArgs<ExtArgs>
            result: $Utils.Optional<UserCountAggregateOutputType> | number
          }
        }
      }
      userpermission: {
        payload: Prisma.$userpermissionPayload<ExtArgs>
        fields: Prisma.userpermissionFieldRefs
        operations: {
          findUnique: {
            args: Prisma.userpermissionFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$userpermissionPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.userpermissionFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$userpermissionPayload>
          }
          findFirst: {
            args: Prisma.userpermissionFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$userpermissionPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.userpermissionFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$userpermissionPayload>
          }
          findMany: {
            args: Prisma.userpermissionFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$userpermissionPayload>[]
          }
          create: {
            args: Prisma.userpermissionCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$userpermissionPayload>
          }
          createMany: {
            args: Prisma.userpermissionCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.userpermissionCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$userpermissionPayload>[]
          }
          delete: {
            args: Prisma.userpermissionDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$userpermissionPayload>
          }
          update: {
            args: Prisma.userpermissionUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$userpermissionPayload>
          }
          deleteMany: {
            args: Prisma.userpermissionDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.userpermissionUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.userpermissionUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$userpermissionPayload>[]
          }
          upsert: {
            args: Prisma.userpermissionUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$userpermissionPayload>
          }
          aggregate: {
            args: Prisma.UserpermissionAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateUserpermission>
          }
          groupBy: {
            args: Prisma.userpermissionGroupByArgs<ExtArgs>
            result: $Utils.Optional<UserpermissionGroupByOutputType>[]
          }
          count: {
            args: Prisma.userpermissionCountArgs<ExtArgs>
            result: $Utils.Optional<UserpermissionCountAggregateOutputType> | number
          }
        }
      }
      userrole: {
        payload: Prisma.$userrolePayload<ExtArgs>
        fields: Prisma.userroleFieldRefs
        operations: {
          findUnique: {
            args: Prisma.userroleFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$userrolePayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.userroleFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$userrolePayload>
          }
          findFirst: {
            args: Prisma.userroleFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$userrolePayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.userroleFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$userrolePayload>
          }
          findMany: {
            args: Prisma.userroleFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$userrolePayload>[]
          }
          create: {
            args: Prisma.userroleCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$userrolePayload>
          }
          createMany: {
            args: Prisma.userroleCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.userroleCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$userrolePayload>[]
          }
          delete: {
            args: Prisma.userroleDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$userrolePayload>
          }
          update: {
            args: Prisma.userroleUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$userrolePayload>
          }
          deleteMany: {
            args: Prisma.userroleDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.userroleUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.userroleUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$userrolePayload>[]
          }
          upsert: {
            args: Prisma.userroleUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$userrolePayload>
          }
          aggregate: {
            args: Prisma.UserroleAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateUserrole>
          }
          groupBy: {
            args: Prisma.userroleGroupByArgs<ExtArgs>
            result: $Utils.Optional<UserroleGroupByOutputType>[]
          }
          count: {
            args: Prisma.userroleCountArgs<ExtArgs>
            result: $Utils.Optional<UserroleCountAggregateOutputType> | number
          }
        }
      }
    }
  } & {
    other: {
      payload: any
      operations: {
        $executeRaw: {
          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],
          result: any
        }
        $executeRawUnsafe: {
          args: [query: string, ...values: any[]],
          result: any
        }
        $queryRaw: {
          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],
          result: any
        }
        $queryRawUnsafe: {
          args: [query: string, ...values: any[]],
          result: any
        }
      }
    }
  }
  export const defineExtension: $Extensions.ExtendsHook<"define", Prisma.TypeMapCb, $Extensions.DefaultArgs>
  export type DefaultPrismaClient = PrismaClient
  export type ErrorFormat = 'pretty' | 'colorless' | 'minimal'
  export interface PrismaClientOptions {
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasources?: Datasources
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasourceUrl?: string
    /**
     * @default "colorless"
     */
    errorFormat?: ErrorFormat
    /**
     * @example
     * ```
     * // Defaults to stdout
     * log: ['query', 'info', 'warn', 'error']
     * 
     * // Emit as events
     * log: [
     *   { emit: 'stdout', level: 'query' },
     *   { emit: 'stdout', level: 'info' },
     *   { emit: 'stdout', level: 'warn' }
     *   { emit: 'stdout', level: 'error' }
     * ]
     * ```
     * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/logging#the-log-option).
     */
    log?: (LogLevel | LogDefinition)[]
    /**
     * The default values for transactionOptions
     * maxWait ?= 2000
     * timeout ?= 5000
     */
    transactionOptions?: {
      maxWait?: number
      timeout?: number
      isolationLevel?: Prisma.TransactionIsolationLevel
    }
    /**
     * Global configuration for omitting model fields by default.
     * 
     * @example
     * ```
     * const prisma = new PrismaClient({
     *   omit: {
     *     user: {
     *       password: true
     *     }
     *   }
     * })
     * ```
     */
    omit?: Prisma.GlobalOmitConfig
  }
  export type GlobalOmitConfig = {
    packageFeature?: packageFeatureOmit
    packages?: packagesOmit
    price?: priceOmit
    subscription?: subscriptionOmit
    chatRoom?: chatRoomOmit
    chat?: chatOmit
    learningProgress?: learningProgressOmit
    languages?: languagesOmit
    entrance?: entranceOmit
    apiclient?: apiclientOmit
    refreshtoken?: refreshtokenOmit
    revokedtoken?: revokedtokenOmit
    role?: roleOmit
    notification?: notificationOmit
    permission?: permissionOmit
    rolepermission?: rolepermissionOmit
    user?: userOmit
    userpermission?: userpermissionOmit
    userrole?: userroleOmit
  }

  /* Types for Logging */
  export type LogLevel = 'info' | 'query' | 'warn' | 'error'
  export type LogDefinition = {
    level: LogLevel
    emit: 'stdout' | 'event'
  }

  export type GetLogType<T extends LogLevel | LogDefinition> = T extends LogDefinition ? T['emit'] extends 'event' ? T['level'] : never : never
  export type GetEvents<T extends any> = T extends Array<LogLevel | LogDefinition> ?
    GetLogType<T[0]> | GetLogType<T[1]> | GetLogType<T[2]> | GetLogType<T[3]>
    : never

  export type QueryEvent = {
    timestamp: Date
    query: string
    params: string
    duration: number
    target: string
  }

  export type LogEvent = {
    timestamp: Date
    message: string
    target: string
  }
  /* End Types for Logging */


  export type PrismaAction =
    | 'findUnique'
    | 'findUniqueOrThrow'
    | 'findMany'
    | 'findFirst'
    | 'findFirstOrThrow'
    | 'create'
    | 'createMany'
    | 'createManyAndReturn'
    | 'update'
    | 'updateMany'
    | 'updateManyAndReturn'
    | 'upsert'
    | 'delete'
    | 'deleteMany'
    | 'executeRaw'
    | 'queryRaw'
    | 'aggregate'
    | 'count'
    | 'runCommandRaw'
    | 'findRaw'
    | 'groupBy'

  /**
   * These options are being passed into the middleware as "params"
   */
  export type MiddlewareParams = {
    model?: ModelName
    action: PrismaAction
    args: any
    dataPath: string[]
    runInTransaction: boolean
  }

  /**
   * The `T` type makes sure, that the `return proceed` is not forgotten in the middleware implementation
   */
  export type Middleware<T = any> = (
    params: MiddlewareParams,
    next: (params: MiddlewareParams) => $Utils.JsPromise<T>,
  ) => $Utils.JsPromise<T>

  // tested in getLogLevel.test.ts
  export function getLogLevel(log: Array<LogLevel | LogDefinition>): LogLevel | undefined;

  /**
   * `PrismaClient` proxy available in interactive transactions.
   */
  export type TransactionClient = Omit<Prisma.DefaultPrismaClient, runtime.ITXClientDenyList>

  export type Datasource = {
    url?: string
  }

  /**
   * Count Types
   */


  /**
   * Count Type PackagesCountOutputType
   */

  export type PackagesCountOutputType = {
    features: number
    prices: number
    subscriptions: number
  }

  export type PackagesCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    features?: boolean | PackagesCountOutputTypeCountFeaturesArgs
    prices?: boolean | PackagesCountOutputTypeCountPricesArgs
    subscriptions?: boolean | PackagesCountOutputTypeCountSubscriptionsArgs
  }

  // Custom InputTypes
  /**
   * PackagesCountOutputType without action
   */
  export type PackagesCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PackagesCountOutputType
     */
    select?: PackagesCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * PackagesCountOutputType without action
   */
  export type PackagesCountOutputTypeCountFeaturesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: packageFeatureWhereInput
  }

  /**
   * PackagesCountOutputType without action
   */
  export type PackagesCountOutputTypeCountPricesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: priceWhereInput
  }

  /**
   * PackagesCountOutputType without action
   */
  export type PackagesCountOutputTypeCountSubscriptionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: subscriptionWhereInput
  }


  /**
   * Count Type ChatRoomCountOutputType
   */

  export type ChatRoomCountOutputType = {
    messages: number
  }

  export type ChatRoomCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    messages?: boolean | ChatRoomCountOutputTypeCountMessagesArgs
  }

  // Custom InputTypes
  /**
   * ChatRoomCountOutputType without action
   */
  export type ChatRoomCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ChatRoomCountOutputType
     */
    select?: ChatRoomCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * ChatRoomCountOutputType without action
   */
  export type ChatRoomCountOutputTypeCountMessagesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: chatWhereInput
  }


  /**
   * Count Type LanguagesCountOutputType
   */

  export type LanguagesCountOutputType = {
    learningProgress: number
    user: number
  }

  export type LanguagesCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    learningProgress?: boolean | LanguagesCountOutputTypeCountLearningProgressArgs
    user?: boolean | LanguagesCountOutputTypeCountUserArgs
  }

  // Custom InputTypes
  /**
   * LanguagesCountOutputType without action
   */
  export type LanguagesCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the LanguagesCountOutputType
     */
    select?: LanguagesCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * LanguagesCountOutputType without action
   */
  export type LanguagesCountOutputTypeCountLearningProgressArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: learningProgressWhereInput
  }

  /**
   * LanguagesCountOutputType without action
   */
  export type LanguagesCountOutputTypeCountUserArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: userWhereInput
  }


  /**
   * Count Type RoleCountOutputType
   */

  export type RoleCountOutputType = {
    rolepermissions: number
    userroles: number
  }

  export type RoleCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    rolepermissions?: boolean | RoleCountOutputTypeCountRolepermissionsArgs
    userroles?: boolean | RoleCountOutputTypeCountUserrolesArgs
  }

  // Custom InputTypes
  /**
   * RoleCountOutputType without action
   */
  export type RoleCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RoleCountOutputType
     */
    select?: RoleCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * RoleCountOutputType without action
   */
  export type RoleCountOutputTypeCountRolepermissionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: rolepermissionWhereInput
  }

  /**
   * RoleCountOutputType without action
   */
  export type RoleCountOutputTypeCountUserrolesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: userroleWhereInput
  }


  /**
   * Count Type PermissionCountOutputType
   */

  export type PermissionCountOutputType = {
    rolepermissions: number
    userpermissions: number
  }

  export type PermissionCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    rolepermissions?: boolean | PermissionCountOutputTypeCountRolepermissionsArgs
    userpermissions?: boolean | PermissionCountOutputTypeCountUserpermissionsArgs
  }

  // Custom InputTypes
  /**
   * PermissionCountOutputType without action
   */
  export type PermissionCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PermissionCountOutputType
     */
    select?: PermissionCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * PermissionCountOutputType without action
   */
  export type PermissionCountOutputTypeCountRolepermissionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: rolepermissionWhereInput
  }

  /**
   * PermissionCountOutputType without action
   */
  export type PermissionCountOutputTypeCountUserpermissionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: userpermissionWhereInput
  }


  /**
   * Count Type UserCountOutputType
   */

  export type UserCountOutputType = {
    notificationuser: number
    createdapiclients: number
    updatedapiclients: number
    createdpermissions: number
    updatedpermissions: number
    refreshtokens: number
    createdroles: number
    updatedroles: number
    createdrolepermissions: number
    updatedrolepermissions: number
    createdusers: number
    updatedusers: number
    createduserpermissions: number
    updateduserpermissions: number
    userpermissions: number
    createduserroles: number
    updateduserroles: number
    userroles: number
    language: number
    learningProgress: number
    chats: number
    chatRooms: number
    subscriptions: number
  }

  export type UserCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    notificationuser?: boolean | UserCountOutputTypeCountNotificationuserArgs
    createdapiclients?: boolean | UserCountOutputTypeCountCreatedapiclientsArgs
    updatedapiclients?: boolean | UserCountOutputTypeCountUpdatedapiclientsArgs
    createdpermissions?: boolean | UserCountOutputTypeCountCreatedpermissionsArgs
    updatedpermissions?: boolean | UserCountOutputTypeCountUpdatedpermissionsArgs
    refreshtokens?: boolean | UserCountOutputTypeCountRefreshtokensArgs
    createdroles?: boolean | UserCountOutputTypeCountCreatedrolesArgs
    updatedroles?: boolean | UserCountOutputTypeCountUpdatedrolesArgs
    createdrolepermissions?: boolean | UserCountOutputTypeCountCreatedrolepermissionsArgs
    updatedrolepermissions?: boolean | UserCountOutputTypeCountUpdatedrolepermissionsArgs
    createdusers?: boolean | UserCountOutputTypeCountCreatedusersArgs
    updatedusers?: boolean | UserCountOutputTypeCountUpdatedusersArgs
    createduserpermissions?: boolean | UserCountOutputTypeCountCreateduserpermissionsArgs
    updateduserpermissions?: boolean | UserCountOutputTypeCountUpdateduserpermissionsArgs
    userpermissions?: boolean | UserCountOutputTypeCountUserpermissionsArgs
    createduserroles?: boolean | UserCountOutputTypeCountCreateduserrolesArgs
    updateduserroles?: boolean | UserCountOutputTypeCountUpdateduserrolesArgs
    userroles?: boolean | UserCountOutputTypeCountUserrolesArgs
    language?: boolean | UserCountOutputTypeCountLanguageArgs
    learningProgress?: boolean | UserCountOutputTypeCountLearningProgressArgs
    chats?: boolean | UserCountOutputTypeCountChatsArgs
    chatRooms?: boolean | UserCountOutputTypeCountChatRoomsArgs
    subscriptions?: boolean | UserCountOutputTypeCountSubscriptionsArgs
  }

  // Custom InputTypes
  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserCountOutputType
     */
    select?: UserCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountNotificationuserArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: notificationWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountCreatedapiclientsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: apiclientWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountUpdatedapiclientsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: apiclientWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountCreatedpermissionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: permissionWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountUpdatedpermissionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: permissionWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountRefreshtokensArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: refreshtokenWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountCreatedrolesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: roleWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountUpdatedrolesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: roleWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountCreatedrolepermissionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: rolepermissionWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountUpdatedrolepermissionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: rolepermissionWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountCreatedusersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: userWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountUpdatedusersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: userWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountCreateduserpermissionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: userpermissionWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountUpdateduserpermissionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: userpermissionWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountUserpermissionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: userpermissionWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountCreateduserrolesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: userroleWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountUpdateduserrolesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: userroleWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountUserrolesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: userroleWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountLanguageArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: languagesWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountLearningProgressArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: learningProgressWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountChatsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: chatWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountChatRoomsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: chatRoomWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountSubscriptionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: subscriptionWhereInput
  }


  /**
   * Models
   */

  /**
   * Model packageFeature
   */

  export type AggregatePackageFeature = {
    _count: PackageFeatureCountAggregateOutputType | null
    _min: PackageFeatureMinAggregateOutputType | null
    _max: PackageFeatureMaxAggregateOutputType | null
  }

  export type PackageFeatureMinAggregateOutputType = {
    id: string | null
    feature: string | null
    available: boolean | null
    packageId: string | null
  }

  export type PackageFeatureMaxAggregateOutputType = {
    id: string | null
    feature: string | null
    available: boolean | null
    packageId: string | null
  }

  export type PackageFeatureCountAggregateOutputType = {
    id: number
    feature: number
    available: number
    packageId: number
    _all: number
  }


  export type PackageFeatureMinAggregateInputType = {
    id?: true
    feature?: true
    available?: true
    packageId?: true
  }

  export type PackageFeatureMaxAggregateInputType = {
    id?: true
    feature?: true
    available?: true
    packageId?: true
  }

  export type PackageFeatureCountAggregateInputType = {
    id?: true
    feature?: true
    available?: true
    packageId?: true
    _all?: true
  }

  export type PackageFeatureAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which packageFeature to aggregate.
     */
    where?: packageFeatureWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of packageFeatures to fetch.
     */
    orderBy?: packageFeatureOrderByWithRelationInput | packageFeatureOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: packageFeatureWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` packageFeatures from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` packageFeatures.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned packageFeatures
    **/
    _count?: true | PackageFeatureCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: PackageFeatureMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: PackageFeatureMaxAggregateInputType
  }

  export type GetPackageFeatureAggregateType<T extends PackageFeatureAggregateArgs> = {
        [P in keyof T & keyof AggregatePackageFeature]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregatePackageFeature[P]>
      : GetScalarType<T[P], AggregatePackageFeature[P]>
  }




  export type packageFeatureGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: packageFeatureWhereInput
    orderBy?: packageFeatureOrderByWithAggregationInput | packageFeatureOrderByWithAggregationInput[]
    by: PackageFeatureScalarFieldEnum[] | PackageFeatureScalarFieldEnum
    having?: packageFeatureScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: PackageFeatureCountAggregateInputType | true
    _min?: PackageFeatureMinAggregateInputType
    _max?: PackageFeatureMaxAggregateInputType
  }

  export type PackageFeatureGroupByOutputType = {
    id: string
    feature: string
    available: boolean
    packageId: string
    _count: PackageFeatureCountAggregateOutputType | null
    _min: PackageFeatureMinAggregateOutputType | null
    _max: PackageFeatureMaxAggregateOutputType | null
  }

  type GetPackageFeatureGroupByPayload<T extends packageFeatureGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<PackageFeatureGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof PackageFeatureGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], PackageFeatureGroupByOutputType[P]>
            : GetScalarType<T[P], PackageFeatureGroupByOutputType[P]>
        }
      >
    >


  export type packageFeatureSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    feature?: boolean
    available?: boolean
    packageId?: boolean
    package?: boolean | packagesDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["packageFeature"]>

  export type packageFeatureSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    feature?: boolean
    available?: boolean
    packageId?: boolean
    package?: boolean | packagesDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["packageFeature"]>

  export type packageFeatureSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    feature?: boolean
    available?: boolean
    packageId?: boolean
    package?: boolean | packagesDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["packageFeature"]>

  export type packageFeatureSelectScalar = {
    id?: boolean
    feature?: boolean
    available?: boolean
    packageId?: boolean
  }

  export type packageFeatureOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "feature" | "available" | "packageId", ExtArgs["result"]["packageFeature"]>
  export type packageFeatureInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    package?: boolean | packagesDefaultArgs<ExtArgs>
  }
  export type packageFeatureIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    package?: boolean | packagesDefaultArgs<ExtArgs>
  }
  export type packageFeatureIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    package?: boolean | packagesDefaultArgs<ExtArgs>
  }

  export type $packageFeaturePayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "packageFeature"
    objects: {
      package: Prisma.$packagesPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      feature: string
      available: boolean
      packageId: string
    }, ExtArgs["result"]["packageFeature"]>
    composites: {}
  }

  type packageFeatureGetPayload<S extends boolean | null | undefined | packageFeatureDefaultArgs> = $Result.GetResult<Prisma.$packageFeaturePayload, S>

  type packageFeatureCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<packageFeatureFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: PackageFeatureCountAggregateInputType | true
    }

  export interface packageFeatureDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['packageFeature'], meta: { name: 'packageFeature' } }
    /**
     * Find zero or one PackageFeature that matches the filter.
     * @param {packageFeatureFindUniqueArgs} args - Arguments to find a PackageFeature
     * @example
     * // Get one PackageFeature
     * const packageFeature = await prisma.packageFeature.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends packageFeatureFindUniqueArgs>(args: SelectSubset<T, packageFeatureFindUniqueArgs<ExtArgs>>): Prisma__packageFeatureClient<$Result.GetResult<Prisma.$packageFeaturePayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one PackageFeature that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {packageFeatureFindUniqueOrThrowArgs} args - Arguments to find a PackageFeature
     * @example
     * // Get one PackageFeature
     * const packageFeature = await prisma.packageFeature.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends packageFeatureFindUniqueOrThrowArgs>(args: SelectSubset<T, packageFeatureFindUniqueOrThrowArgs<ExtArgs>>): Prisma__packageFeatureClient<$Result.GetResult<Prisma.$packageFeaturePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first PackageFeature that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {packageFeatureFindFirstArgs} args - Arguments to find a PackageFeature
     * @example
     * // Get one PackageFeature
     * const packageFeature = await prisma.packageFeature.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends packageFeatureFindFirstArgs>(args?: SelectSubset<T, packageFeatureFindFirstArgs<ExtArgs>>): Prisma__packageFeatureClient<$Result.GetResult<Prisma.$packageFeaturePayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first PackageFeature that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {packageFeatureFindFirstOrThrowArgs} args - Arguments to find a PackageFeature
     * @example
     * // Get one PackageFeature
     * const packageFeature = await prisma.packageFeature.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends packageFeatureFindFirstOrThrowArgs>(args?: SelectSubset<T, packageFeatureFindFirstOrThrowArgs<ExtArgs>>): Prisma__packageFeatureClient<$Result.GetResult<Prisma.$packageFeaturePayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more PackageFeatures that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {packageFeatureFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all PackageFeatures
     * const packageFeatures = await prisma.packageFeature.findMany()
     * 
     * // Get first 10 PackageFeatures
     * const packageFeatures = await prisma.packageFeature.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const packageFeatureWithIdOnly = await prisma.packageFeature.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends packageFeatureFindManyArgs>(args?: SelectSubset<T, packageFeatureFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$packageFeaturePayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a PackageFeature.
     * @param {packageFeatureCreateArgs} args - Arguments to create a PackageFeature.
     * @example
     * // Create one PackageFeature
     * const PackageFeature = await prisma.packageFeature.create({
     *   data: {
     *     // ... data to create a PackageFeature
     *   }
     * })
     * 
     */
    create<T extends packageFeatureCreateArgs>(args: SelectSubset<T, packageFeatureCreateArgs<ExtArgs>>): Prisma__packageFeatureClient<$Result.GetResult<Prisma.$packageFeaturePayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many PackageFeatures.
     * @param {packageFeatureCreateManyArgs} args - Arguments to create many PackageFeatures.
     * @example
     * // Create many PackageFeatures
     * const packageFeature = await prisma.packageFeature.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends packageFeatureCreateManyArgs>(args?: SelectSubset<T, packageFeatureCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many PackageFeatures and returns the data saved in the database.
     * @param {packageFeatureCreateManyAndReturnArgs} args - Arguments to create many PackageFeatures.
     * @example
     * // Create many PackageFeatures
     * const packageFeature = await prisma.packageFeature.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many PackageFeatures and only return the `id`
     * const packageFeatureWithIdOnly = await prisma.packageFeature.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends packageFeatureCreateManyAndReturnArgs>(args?: SelectSubset<T, packageFeatureCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$packageFeaturePayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a PackageFeature.
     * @param {packageFeatureDeleteArgs} args - Arguments to delete one PackageFeature.
     * @example
     * // Delete one PackageFeature
     * const PackageFeature = await prisma.packageFeature.delete({
     *   where: {
     *     // ... filter to delete one PackageFeature
     *   }
     * })
     * 
     */
    delete<T extends packageFeatureDeleteArgs>(args: SelectSubset<T, packageFeatureDeleteArgs<ExtArgs>>): Prisma__packageFeatureClient<$Result.GetResult<Prisma.$packageFeaturePayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one PackageFeature.
     * @param {packageFeatureUpdateArgs} args - Arguments to update one PackageFeature.
     * @example
     * // Update one PackageFeature
     * const packageFeature = await prisma.packageFeature.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends packageFeatureUpdateArgs>(args: SelectSubset<T, packageFeatureUpdateArgs<ExtArgs>>): Prisma__packageFeatureClient<$Result.GetResult<Prisma.$packageFeaturePayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more PackageFeatures.
     * @param {packageFeatureDeleteManyArgs} args - Arguments to filter PackageFeatures to delete.
     * @example
     * // Delete a few PackageFeatures
     * const { count } = await prisma.packageFeature.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends packageFeatureDeleteManyArgs>(args?: SelectSubset<T, packageFeatureDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more PackageFeatures.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {packageFeatureUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many PackageFeatures
     * const packageFeature = await prisma.packageFeature.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends packageFeatureUpdateManyArgs>(args: SelectSubset<T, packageFeatureUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more PackageFeatures and returns the data updated in the database.
     * @param {packageFeatureUpdateManyAndReturnArgs} args - Arguments to update many PackageFeatures.
     * @example
     * // Update many PackageFeatures
     * const packageFeature = await prisma.packageFeature.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more PackageFeatures and only return the `id`
     * const packageFeatureWithIdOnly = await prisma.packageFeature.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends packageFeatureUpdateManyAndReturnArgs>(args: SelectSubset<T, packageFeatureUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$packageFeaturePayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one PackageFeature.
     * @param {packageFeatureUpsertArgs} args - Arguments to update or create a PackageFeature.
     * @example
     * // Update or create a PackageFeature
     * const packageFeature = await prisma.packageFeature.upsert({
     *   create: {
     *     // ... data to create a PackageFeature
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the PackageFeature we want to update
     *   }
     * })
     */
    upsert<T extends packageFeatureUpsertArgs>(args: SelectSubset<T, packageFeatureUpsertArgs<ExtArgs>>): Prisma__packageFeatureClient<$Result.GetResult<Prisma.$packageFeaturePayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of PackageFeatures.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {packageFeatureCountArgs} args - Arguments to filter PackageFeatures to count.
     * @example
     * // Count the number of PackageFeatures
     * const count = await prisma.packageFeature.count({
     *   where: {
     *     // ... the filter for the PackageFeatures we want to count
     *   }
     * })
    **/
    count<T extends packageFeatureCountArgs>(
      args?: Subset<T, packageFeatureCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], PackageFeatureCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a PackageFeature.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PackageFeatureAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends PackageFeatureAggregateArgs>(args: Subset<T, PackageFeatureAggregateArgs>): Prisma.PrismaPromise<GetPackageFeatureAggregateType<T>>

    /**
     * Group by PackageFeature.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {packageFeatureGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends packageFeatureGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: packageFeatureGroupByArgs['orderBy'] }
        : { orderBy?: packageFeatureGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, packageFeatureGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetPackageFeatureGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the packageFeature model
   */
  readonly fields: packageFeatureFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for packageFeature.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__packageFeatureClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    package<T extends packagesDefaultArgs<ExtArgs> = {}>(args?: Subset<T, packagesDefaultArgs<ExtArgs>>): Prisma__packagesClient<$Result.GetResult<Prisma.$packagesPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the packageFeature model
   */
  interface packageFeatureFieldRefs {
    readonly id: FieldRef<"packageFeature", 'String'>
    readonly feature: FieldRef<"packageFeature", 'String'>
    readonly available: FieldRef<"packageFeature", 'Boolean'>
    readonly packageId: FieldRef<"packageFeature", 'String'>
  }
    

  // Custom InputTypes
  /**
   * packageFeature findUnique
   */
  export type packageFeatureFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the packageFeature
     */
    select?: packageFeatureSelect<ExtArgs> | null
    /**
     * Omit specific fields from the packageFeature
     */
    omit?: packageFeatureOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: packageFeatureInclude<ExtArgs> | null
    /**
     * Filter, which packageFeature to fetch.
     */
    where: packageFeatureWhereUniqueInput
  }

  /**
   * packageFeature findUniqueOrThrow
   */
  export type packageFeatureFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the packageFeature
     */
    select?: packageFeatureSelect<ExtArgs> | null
    /**
     * Omit specific fields from the packageFeature
     */
    omit?: packageFeatureOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: packageFeatureInclude<ExtArgs> | null
    /**
     * Filter, which packageFeature to fetch.
     */
    where: packageFeatureWhereUniqueInput
  }

  /**
   * packageFeature findFirst
   */
  export type packageFeatureFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the packageFeature
     */
    select?: packageFeatureSelect<ExtArgs> | null
    /**
     * Omit specific fields from the packageFeature
     */
    omit?: packageFeatureOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: packageFeatureInclude<ExtArgs> | null
    /**
     * Filter, which packageFeature to fetch.
     */
    where?: packageFeatureWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of packageFeatures to fetch.
     */
    orderBy?: packageFeatureOrderByWithRelationInput | packageFeatureOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for packageFeatures.
     */
    cursor?: packageFeatureWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` packageFeatures from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` packageFeatures.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of packageFeatures.
     */
    distinct?: PackageFeatureScalarFieldEnum | PackageFeatureScalarFieldEnum[]
  }

  /**
   * packageFeature findFirstOrThrow
   */
  export type packageFeatureFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the packageFeature
     */
    select?: packageFeatureSelect<ExtArgs> | null
    /**
     * Omit specific fields from the packageFeature
     */
    omit?: packageFeatureOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: packageFeatureInclude<ExtArgs> | null
    /**
     * Filter, which packageFeature to fetch.
     */
    where?: packageFeatureWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of packageFeatures to fetch.
     */
    orderBy?: packageFeatureOrderByWithRelationInput | packageFeatureOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for packageFeatures.
     */
    cursor?: packageFeatureWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` packageFeatures from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` packageFeatures.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of packageFeatures.
     */
    distinct?: PackageFeatureScalarFieldEnum | PackageFeatureScalarFieldEnum[]
  }

  /**
   * packageFeature findMany
   */
  export type packageFeatureFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the packageFeature
     */
    select?: packageFeatureSelect<ExtArgs> | null
    /**
     * Omit specific fields from the packageFeature
     */
    omit?: packageFeatureOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: packageFeatureInclude<ExtArgs> | null
    /**
     * Filter, which packageFeatures to fetch.
     */
    where?: packageFeatureWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of packageFeatures to fetch.
     */
    orderBy?: packageFeatureOrderByWithRelationInput | packageFeatureOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing packageFeatures.
     */
    cursor?: packageFeatureWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` packageFeatures from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` packageFeatures.
     */
    skip?: number
    distinct?: PackageFeatureScalarFieldEnum | PackageFeatureScalarFieldEnum[]
  }

  /**
   * packageFeature create
   */
  export type packageFeatureCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the packageFeature
     */
    select?: packageFeatureSelect<ExtArgs> | null
    /**
     * Omit specific fields from the packageFeature
     */
    omit?: packageFeatureOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: packageFeatureInclude<ExtArgs> | null
    /**
     * The data needed to create a packageFeature.
     */
    data: XOR<packageFeatureCreateInput, packageFeatureUncheckedCreateInput>
  }

  /**
   * packageFeature createMany
   */
  export type packageFeatureCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many packageFeatures.
     */
    data: packageFeatureCreateManyInput | packageFeatureCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * packageFeature createManyAndReturn
   */
  export type packageFeatureCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the packageFeature
     */
    select?: packageFeatureSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the packageFeature
     */
    omit?: packageFeatureOmit<ExtArgs> | null
    /**
     * The data used to create many packageFeatures.
     */
    data: packageFeatureCreateManyInput | packageFeatureCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: packageFeatureIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * packageFeature update
   */
  export type packageFeatureUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the packageFeature
     */
    select?: packageFeatureSelect<ExtArgs> | null
    /**
     * Omit specific fields from the packageFeature
     */
    omit?: packageFeatureOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: packageFeatureInclude<ExtArgs> | null
    /**
     * The data needed to update a packageFeature.
     */
    data: XOR<packageFeatureUpdateInput, packageFeatureUncheckedUpdateInput>
    /**
     * Choose, which packageFeature to update.
     */
    where: packageFeatureWhereUniqueInput
  }

  /**
   * packageFeature updateMany
   */
  export type packageFeatureUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update packageFeatures.
     */
    data: XOR<packageFeatureUpdateManyMutationInput, packageFeatureUncheckedUpdateManyInput>
    /**
     * Filter which packageFeatures to update
     */
    where?: packageFeatureWhereInput
    /**
     * Limit how many packageFeatures to update.
     */
    limit?: number
  }

  /**
   * packageFeature updateManyAndReturn
   */
  export type packageFeatureUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the packageFeature
     */
    select?: packageFeatureSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the packageFeature
     */
    omit?: packageFeatureOmit<ExtArgs> | null
    /**
     * The data used to update packageFeatures.
     */
    data: XOR<packageFeatureUpdateManyMutationInput, packageFeatureUncheckedUpdateManyInput>
    /**
     * Filter which packageFeatures to update
     */
    where?: packageFeatureWhereInput
    /**
     * Limit how many packageFeatures to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: packageFeatureIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * packageFeature upsert
   */
  export type packageFeatureUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the packageFeature
     */
    select?: packageFeatureSelect<ExtArgs> | null
    /**
     * Omit specific fields from the packageFeature
     */
    omit?: packageFeatureOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: packageFeatureInclude<ExtArgs> | null
    /**
     * The filter to search for the packageFeature to update in case it exists.
     */
    where: packageFeatureWhereUniqueInput
    /**
     * In case the packageFeature found by the `where` argument doesn't exist, create a new packageFeature with this data.
     */
    create: XOR<packageFeatureCreateInput, packageFeatureUncheckedCreateInput>
    /**
     * In case the packageFeature was found with the provided `where` argument, update it with this data.
     */
    update: XOR<packageFeatureUpdateInput, packageFeatureUncheckedUpdateInput>
  }

  /**
   * packageFeature delete
   */
  export type packageFeatureDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the packageFeature
     */
    select?: packageFeatureSelect<ExtArgs> | null
    /**
     * Omit specific fields from the packageFeature
     */
    omit?: packageFeatureOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: packageFeatureInclude<ExtArgs> | null
    /**
     * Filter which packageFeature to delete.
     */
    where: packageFeatureWhereUniqueInput
  }

  /**
   * packageFeature deleteMany
   */
  export type packageFeatureDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which packageFeatures to delete
     */
    where?: packageFeatureWhereInput
    /**
     * Limit how many packageFeatures to delete.
     */
    limit?: number
  }

  /**
   * packageFeature without action
   */
  export type packageFeatureDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the packageFeature
     */
    select?: packageFeatureSelect<ExtArgs> | null
    /**
     * Omit specific fields from the packageFeature
     */
    omit?: packageFeatureOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: packageFeatureInclude<ExtArgs> | null
  }


  /**
   * Model packages
   */

  export type AggregatePackages = {
    _count: PackagesCountAggregateOutputType | null
    _min: PackagesMinAggregateOutputType | null
    _max: PackagesMaxAggregateOutputType | null
  }

  export type PackagesMinAggregateOutputType = {
    id: string | null
    name: string | null
    description: string | null
    icon: string | null
    duration: $Enums.duration | null
    popular: boolean | null
    highlightColor: string | null
    savings: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type PackagesMaxAggregateOutputType = {
    id: string | null
    name: string | null
    description: string | null
    icon: string | null
    duration: $Enums.duration | null
    popular: boolean | null
    highlightColor: string | null
    savings: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type PackagesCountAggregateOutputType = {
    id: number
    name: number
    description: number
    icon: number
    duration: number
    popular: number
    highlightColor: number
    savings: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type PackagesMinAggregateInputType = {
    id?: true
    name?: true
    description?: true
    icon?: true
    duration?: true
    popular?: true
    highlightColor?: true
    savings?: true
    createdAt?: true
    updatedAt?: true
  }

  export type PackagesMaxAggregateInputType = {
    id?: true
    name?: true
    description?: true
    icon?: true
    duration?: true
    popular?: true
    highlightColor?: true
    savings?: true
    createdAt?: true
    updatedAt?: true
  }

  export type PackagesCountAggregateInputType = {
    id?: true
    name?: true
    description?: true
    icon?: true
    duration?: true
    popular?: true
    highlightColor?: true
    savings?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type PackagesAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which packages to aggregate.
     */
    where?: packagesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of packages to fetch.
     */
    orderBy?: packagesOrderByWithRelationInput | packagesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: packagesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` packages from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` packages.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned packages
    **/
    _count?: true | PackagesCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: PackagesMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: PackagesMaxAggregateInputType
  }

  export type GetPackagesAggregateType<T extends PackagesAggregateArgs> = {
        [P in keyof T & keyof AggregatePackages]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregatePackages[P]>
      : GetScalarType<T[P], AggregatePackages[P]>
  }




  export type packagesGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: packagesWhereInput
    orderBy?: packagesOrderByWithAggregationInput | packagesOrderByWithAggregationInput[]
    by: PackagesScalarFieldEnum[] | PackagesScalarFieldEnum
    having?: packagesScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: PackagesCountAggregateInputType | true
    _min?: PackagesMinAggregateInputType
    _max?: PackagesMaxAggregateInputType
  }

  export type PackagesGroupByOutputType = {
    id: string
    name: string
    description: string
    icon: string
    duration: $Enums.duration
    popular: boolean
    highlightColor: string | null
    savings: string | null
    createdAt: Date
    updatedAt: Date
    _count: PackagesCountAggregateOutputType | null
    _min: PackagesMinAggregateOutputType | null
    _max: PackagesMaxAggregateOutputType | null
  }

  type GetPackagesGroupByPayload<T extends packagesGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<PackagesGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof PackagesGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], PackagesGroupByOutputType[P]>
            : GetScalarType<T[P], PackagesGroupByOutputType[P]>
        }
      >
    >


  export type packagesSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    description?: boolean
    icon?: boolean
    duration?: boolean
    popular?: boolean
    highlightColor?: boolean
    savings?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    features?: boolean | packages$featuresArgs<ExtArgs>
    prices?: boolean | packages$pricesArgs<ExtArgs>
    subscriptions?: boolean | packages$subscriptionsArgs<ExtArgs>
    _count?: boolean | PackagesCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["packages"]>

  export type packagesSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    description?: boolean
    icon?: boolean
    duration?: boolean
    popular?: boolean
    highlightColor?: boolean
    savings?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }, ExtArgs["result"]["packages"]>

  export type packagesSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    description?: boolean
    icon?: boolean
    duration?: boolean
    popular?: boolean
    highlightColor?: boolean
    savings?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }, ExtArgs["result"]["packages"]>

  export type packagesSelectScalar = {
    id?: boolean
    name?: boolean
    description?: boolean
    icon?: boolean
    duration?: boolean
    popular?: boolean
    highlightColor?: boolean
    savings?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type packagesOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "name" | "description" | "icon" | "duration" | "popular" | "highlightColor" | "savings" | "createdAt" | "updatedAt", ExtArgs["result"]["packages"]>
  export type packagesInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    features?: boolean | packages$featuresArgs<ExtArgs>
    prices?: boolean | packages$pricesArgs<ExtArgs>
    subscriptions?: boolean | packages$subscriptionsArgs<ExtArgs>
    _count?: boolean | PackagesCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type packagesIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}
  export type packagesIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}

  export type $packagesPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "packages"
    objects: {
      features: Prisma.$packageFeaturePayload<ExtArgs>[]
      prices: Prisma.$pricePayload<ExtArgs>[]
      subscriptions: Prisma.$subscriptionPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      name: string
      description: string
      icon: string
      duration: $Enums.duration
      popular: boolean
      highlightColor: string | null
      savings: string | null
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["packages"]>
    composites: {}
  }

  type packagesGetPayload<S extends boolean | null | undefined | packagesDefaultArgs> = $Result.GetResult<Prisma.$packagesPayload, S>

  type packagesCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<packagesFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: PackagesCountAggregateInputType | true
    }

  export interface packagesDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['packages'], meta: { name: 'packages' } }
    /**
     * Find zero or one Packages that matches the filter.
     * @param {packagesFindUniqueArgs} args - Arguments to find a Packages
     * @example
     * // Get one Packages
     * const packages = await prisma.packages.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends packagesFindUniqueArgs>(args: SelectSubset<T, packagesFindUniqueArgs<ExtArgs>>): Prisma__packagesClient<$Result.GetResult<Prisma.$packagesPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Packages that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {packagesFindUniqueOrThrowArgs} args - Arguments to find a Packages
     * @example
     * // Get one Packages
     * const packages = await prisma.packages.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends packagesFindUniqueOrThrowArgs>(args: SelectSubset<T, packagesFindUniqueOrThrowArgs<ExtArgs>>): Prisma__packagesClient<$Result.GetResult<Prisma.$packagesPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Packages that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {packagesFindFirstArgs} args - Arguments to find a Packages
     * @example
     * // Get one Packages
     * const packages = await prisma.packages.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends packagesFindFirstArgs>(args?: SelectSubset<T, packagesFindFirstArgs<ExtArgs>>): Prisma__packagesClient<$Result.GetResult<Prisma.$packagesPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Packages that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {packagesFindFirstOrThrowArgs} args - Arguments to find a Packages
     * @example
     * // Get one Packages
     * const packages = await prisma.packages.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends packagesFindFirstOrThrowArgs>(args?: SelectSubset<T, packagesFindFirstOrThrowArgs<ExtArgs>>): Prisma__packagesClient<$Result.GetResult<Prisma.$packagesPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Packages that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {packagesFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Packages
     * const packages = await prisma.packages.findMany()
     * 
     * // Get first 10 Packages
     * const packages = await prisma.packages.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const packagesWithIdOnly = await prisma.packages.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends packagesFindManyArgs>(args?: SelectSubset<T, packagesFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$packagesPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Packages.
     * @param {packagesCreateArgs} args - Arguments to create a Packages.
     * @example
     * // Create one Packages
     * const Packages = await prisma.packages.create({
     *   data: {
     *     // ... data to create a Packages
     *   }
     * })
     * 
     */
    create<T extends packagesCreateArgs>(args: SelectSubset<T, packagesCreateArgs<ExtArgs>>): Prisma__packagesClient<$Result.GetResult<Prisma.$packagesPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Packages.
     * @param {packagesCreateManyArgs} args - Arguments to create many Packages.
     * @example
     * // Create many Packages
     * const packages = await prisma.packages.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends packagesCreateManyArgs>(args?: SelectSubset<T, packagesCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Packages and returns the data saved in the database.
     * @param {packagesCreateManyAndReturnArgs} args - Arguments to create many Packages.
     * @example
     * // Create many Packages
     * const packages = await prisma.packages.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Packages and only return the `id`
     * const packagesWithIdOnly = await prisma.packages.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends packagesCreateManyAndReturnArgs>(args?: SelectSubset<T, packagesCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$packagesPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Packages.
     * @param {packagesDeleteArgs} args - Arguments to delete one Packages.
     * @example
     * // Delete one Packages
     * const Packages = await prisma.packages.delete({
     *   where: {
     *     // ... filter to delete one Packages
     *   }
     * })
     * 
     */
    delete<T extends packagesDeleteArgs>(args: SelectSubset<T, packagesDeleteArgs<ExtArgs>>): Prisma__packagesClient<$Result.GetResult<Prisma.$packagesPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Packages.
     * @param {packagesUpdateArgs} args - Arguments to update one Packages.
     * @example
     * // Update one Packages
     * const packages = await prisma.packages.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends packagesUpdateArgs>(args: SelectSubset<T, packagesUpdateArgs<ExtArgs>>): Prisma__packagesClient<$Result.GetResult<Prisma.$packagesPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Packages.
     * @param {packagesDeleteManyArgs} args - Arguments to filter Packages to delete.
     * @example
     * // Delete a few Packages
     * const { count } = await prisma.packages.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends packagesDeleteManyArgs>(args?: SelectSubset<T, packagesDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Packages.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {packagesUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Packages
     * const packages = await prisma.packages.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends packagesUpdateManyArgs>(args: SelectSubset<T, packagesUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Packages and returns the data updated in the database.
     * @param {packagesUpdateManyAndReturnArgs} args - Arguments to update many Packages.
     * @example
     * // Update many Packages
     * const packages = await prisma.packages.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Packages and only return the `id`
     * const packagesWithIdOnly = await prisma.packages.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends packagesUpdateManyAndReturnArgs>(args: SelectSubset<T, packagesUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$packagesPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Packages.
     * @param {packagesUpsertArgs} args - Arguments to update or create a Packages.
     * @example
     * // Update or create a Packages
     * const packages = await prisma.packages.upsert({
     *   create: {
     *     // ... data to create a Packages
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Packages we want to update
     *   }
     * })
     */
    upsert<T extends packagesUpsertArgs>(args: SelectSubset<T, packagesUpsertArgs<ExtArgs>>): Prisma__packagesClient<$Result.GetResult<Prisma.$packagesPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Packages.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {packagesCountArgs} args - Arguments to filter Packages to count.
     * @example
     * // Count the number of Packages
     * const count = await prisma.packages.count({
     *   where: {
     *     // ... the filter for the Packages we want to count
     *   }
     * })
    **/
    count<T extends packagesCountArgs>(
      args?: Subset<T, packagesCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], PackagesCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Packages.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PackagesAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends PackagesAggregateArgs>(args: Subset<T, PackagesAggregateArgs>): Prisma.PrismaPromise<GetPackagesAggregateType<T>>

    /**
     * Group by Packages.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {packagesGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends packagesGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: packagesGroupByArgs['orderBy'] }
        : { orderBy?: packagesGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, packagesGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetPackagesGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the packages model
   */
  readonly fields: packagesFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for packages.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__packagesClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    features<T extends packages$featuresArgs<ExtArgs> = {}>(args?: Subset<T, packages$featuresArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$packageFeaturePayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    prices<T extends packages$pricesArgs<ExtArgs> = {}>(args?: Subset<T, packages$pricesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$pricePayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    subscriptions<T extends packages$subscriptionsArgs<ExtArgs> = {}>(args?: Subset<T, packages$subscriptionsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$subscriptionPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the packages model
   */
  interface packagesFieldRefs {
    readonly id: FieldRef<"packages", 'String'>
    readonly name: FieldRef<"packages", 'String'>
    readonly description: FieldRef<"packages", 'String'>
    readonly icon: FieldRef<"packages", 'String'>
    readonly duration: FieldRef<"packages", 'duration'>
    readonly popular: FieldRef<"packages", 'Boolean'>
    readonly highlightColor: FieldRef<"packages", 'String'>
    readonly savings: FieldRef<"packages", 'String'>
    readonly createdAt: FieldRef<"packages", 'DateTime'>
    readonly updatedAt: FieldRef<"packages", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * packages findUnique
   */
  export type packagesFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the packages
     */
    select?: packagesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the packages
     */
    omit?: packagesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: packagesInclude<ExtArgs> | null
    /**
     * Filter, which packages to fetch.
     */
    where: packagesWhereUniqueInput
  }

  /**
   * packages findUniqueOrThrow
   */
  export type packagesFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the packages
     */
    select?: packagesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the packages
     */
    omit?: packagesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: packagesInclude<ExtArgs> | null
    /**
     * Filter, which packages to fetch.
     */
    where: packagesWhereUniqueInput
  }

  /**
   * packages findFirst
   */
  export type packagesFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the packages
     */
    select?: packagesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the packages
     */
    omit?: packagesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: packagesInclude<ExtArgs> | null
    /**
     * Filter, which packages to fetch.
     */
    where?: packagesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of packages to fetch.
     */
    orderBy?: packagesOrderByWithRelationInput | packagesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for packages.
     */
    cursor?: packagesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` packages from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` packages.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of packages.
     */
    distinct?: PackagesScalarFieldEnum | PackagesScalarFieldEnum[]
  }

  /**
   * packages findFirstOrThrow
   */
  export type packagesFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the packages
     */
    select?: packagesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the packages
     */
    omit?: packagesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: packagesInclude<ExtArgs> | null
    /**
     * Filter, which packages to fetch.
     */
    where?: packagesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of packages to fetch.
     */
    orderBy?: packagesOrderByWithRelationInput | packagesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for packages.
     */
    cursor?: packagesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` packages from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` packages.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of packages.
     */
    distinct?: PackagesScalarFieldEnum | PackagesScalarFieldEnum[]
  }

  /**
   * packages findMany
   */
  export type packagesFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the packages
     */
    select?: packagesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the packages
     */
    omit?: packagesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: packagesInclude<ExtArgs> | null
    /**
     * Filter, which packages to fetch.
     */
    where?: packagesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of packages to fetch.
     */
    orderBy?: packagesOrderByWithRelationInput | packagesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing packages.
     */
    cursor?: packagesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` packages from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` packages.
     */
    skip?: number
    distinct?: PackagesScalarFieldEnum | PackagesScalarFieldEnum[]
  }

  /**
   * packages create
   */
  export type packagesCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the packages
     */
    select?: packagesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the packages
     */
    omit?: packagesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: packagesInclude<ExtArgs> | null
    /**
     * The data needed to create a packages.
     */
    data: XOR<packagesCreateInput, packagesUncheckedCreateInput>
  }

  /**
   * packages createMany
   */
  export type packagesCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many packages.
     */
    data: packagesCreateManyInput | packagesCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * packages createManyAndReturn
   */
  export type packagesCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the packages
     */
    select?: packagesSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the packages
     */
    omit?: packagesOmit<ExtArgs> | null
    /**
     * The data used to create many packages.
     */
    data: packagesCreateManyInput | packagesCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * packages update
   */
  export type packagesUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the packages
     */
    select?: packagesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the packages
     */
    omit?: packagesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: packagesInclude<ExtArgs> | null
    /**
     * The data needed to update a packages.
     */
    data: XOR<packagesUpdateInput, packagesUncheckedUpdateInput>
    /**
     * Choose, which packages to update.
     */
    where: packagesWhereUniqueInput
  }

  /**
   * packages updateMany
   */
  export type packagesUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update packages.
     */
    data: XOR<packagesUpdateManyMutationInput, packagesUncheckedUpdateManyInput>
    /**
     * Filter which packages to update
     */
    where?: packagesWhereInput
    /**
     * Limit how many packages to update.
     */
    limit?: number
  }

  /**
   * packages updateManyAndReturn
   */
  export type packagesUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the packages
     */
    select?: packagesSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the packages
     */
    omit?: packagesOmit<ExtArgs> | null
    /**
     * The data used to update packages.
     */
    data: XOR<packagesUpdateManyMutationInput, packagesUncheckedUpdateManyInput>
    /**
     * Filter which packages to update
     */
    where?: packagesWhereInput
    /**
     * Limit how many packages to update.
     */
    limit?: number
  }

  /**
   * packages upsert
   */
  export type packagesUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the packages
     */
    select?: packagesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the packages
     */
    omit?: packagesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: packagesInclude<ExtArgs> | null
    /**
     * The filter to search for the packages to update in case it exists.
     */
    where: packagesWhereUniqueInput
    /**
     * In case the packages found by the `where` argument doesn't exist, create a new packages with this data.
     */
    create: XOR<packagesCreateInput, packagesUncheckedCreateInput>
    /**
     * In case the packages was found with the provided `where` argument, update it with this data.
     */
    update: XOR<packagesUpdateInput, packagesUncheckedUpdateInput>
  }

  /**
   * packages delete
   */
  export type packagesDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the packages
     */
    select?: packagesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the packages
     */
    omit?: packagesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: packagesInclude<ExtArgs> | null
    /**
     * Filter which packages to delete.
     */
    where: packagesWhereUniqueInput
  }

  /**
   * packages deleteMany
   */
  export type packagesDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which packages to delete
     */
    where?: packagesWhereInput
    /**
     * Limit how many packages to delete.
     */
    limit?: number
  }

  /**
   * packages.features
   */
  export type packages$featuresArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the packageFeature
     */
    select?: packageFeatureSelect<ExtArgs> | null
    /**
     * Omit specific fields from the packageFeature
     */
    omit?: packageFeatureOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: packageFeatureInclude<ExtArgs> | null
    where?: packageFeatureWhereInput
    orderBy?: packageFeatureOrderByWithRelationInput | packageFeatureOrderByWithRelationInput[]
    cursor?: packageFeatureWhereUniqueInput
    take?: number
    skip?: number
    distinct?: PackageFeatureScalarFieldEnum | PackageFeatureScalarFieldEnum[]
  }

  /**
   * packages.prices
   */
  export type packages$pricesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the price
     */
    select?: priceSelect<ExtArgs> | null
    /**
     * Omit specific fields from the price
     */
    omit?: priceOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: priceInclude<ExtArgs> | null
    where?: priceWhereInput
    orderBy?: priceOrderByWithRelationInput | priceOrderByWithRelationInput[]
    cursor?: priceWhereUniqueInput
    take?: number
    skip?: number
    distinct?: PriceScalarFieldEnum | PriceScalarFieldEnum[]
  }

  /**
   * packages.subscriptions
   */
  export type packages$subscriptionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the subscription
     */
    select?: subscriptionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the subscription
     */
    omit?: subscriptionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: subscriptionInclude<ExtArgs> | null
    where?: subscriptionWhereInput
    orderBy?: subscriptionOrderByWithRelationInput | subscriptionOrderByWithRelationInput[]
    cursor?: subscriptionWhereUniqueInput
    take?: number
    skip?: number
    distinct?: SubscriptionScalarFieldEnum | SubscriptionScalarFieldEnum[]
  }

  /**
   * packages without action
   */
  export type packagesDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the packages
     */
    select?: packagesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the packages
     */
    omit?: packagesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: packagesInclude<ExtArgs> | null
  }


  /**
   * Model price
   */

  export type AggregatePrice = {
    _count: PriceCountAggregateOutputType | null
    _avg: PriceAvgAggregateOutputType | null
    _sum: PriceSumAggregateOutputType | null
    _min: PriceMinAggregateOutputType | null
    _max: PriceMaxAggregateOutputType | null
  }

  export type PriceAvgAggregateOutputType = {
    amount: Decimal | null
  }

  export type PriceSumAggregateOutputType = {
    amount: Decimal | null
  }

  export type PriceMinAggregateOutputType = {
    id: string | null
    currency: $Enums.Currency | null
    amount: Decimal | null
    packageId: string | null
  }

  export type PriceMaxAggregateOutputType = {
    id: string | null
    currency: $Enums.Currency | null
    amount: Decimal | null
    packageId: string | null
  }

  export type PriceCountAggregateOutputType = {
    id: number
    currency: number
    amount: number
    packageId: number
    _all: number
  }


  export type PriceAvgAggregateInputType = {
    amount?: true
  }

  export type PriceSumAggregateInputType = {
    amount?: true
  }

  export type PriceMinAggregateInputType = {
    id?: true
    currency?: true
    amount?: true
    packageId?: true
  }

  export type PriceMaxAggregateInputType = {
    id?: true
    currency?: true
    amount?: true
    packageId?: true
  }

  export type PriceCountAggregateInputType = {
    id?: true
    currency?: true
    amount?: true
    packageId?: true
    _all?: true
  }

  export type PriceAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which price to aggregate.
     */
    where?: priceWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of prices to fetch.
     */
    orderBy?: priceOrderByWithRelationInput | priceOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: priceWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` prices from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` prices.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned prices
    **/
    _count?: true | PriceCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: PriceAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: PriceSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: PriceMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: PriceMaxAggregateInputType
  }

  export type GetPriceAggregateType<T extends PriceAggregateArgs> = {
        [P in keyof T & keyof AggregatePrice]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregatePrice[P]>
      : GetScalarType<T[P], AggregatePrice[P]>
  }




  export type priceGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: priceWhereInput
    orderBy?: priceOrderByWithAggregationInput | priceOrderByWithAggregationInput[]
    by: PriceScalarFieldEnum[] | PriceScalarFieldEnum
    having?: priceScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: PriceCountAggregateInputType | true
    _avg?: PriceAvgAggregateInputType
    _sum?: PriceSumAggregateInputType
    _min?: PriceMinAggregateInputType
    _max?: PriceMaxAggregateInputType
  }

  export type PriceGroupByOutputType = {
    id: string
    currency: $Enums.Currency
    amount: Decimal
    packageId: string
    _count: PriceCountAggregateOutputType | null
    _avg: PriceAvgAggregateOutputType | null
    _sum: PriceSumAggregateOutputType | null
    _min: PriceMinAggregateOutputType | null
    _max: PriceMaxAggregateOutputType | null
  }

  type GetPriceGroupByPayload<T extends priceGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<PriceGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof PriceGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], PriceGroupByOutputType[P]>
            : GetScalarType<T[P], PriceGroupByOutputType[P]>
        }
      >
    >


  export type priceSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    currency?: boolean
    amount?: boolean
    packageId?: boolean
    package?: boolean | packagesDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["price"]>

  export type priceSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    currency?: boolean
    amount?: boolean
    packageId?: boolean
    package?: boolean | packagesDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["price"]>

  export type priceSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    currency?: boolean
    amount?: boolean
    packageId?: boolean
    package?: boolean | packagesDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["price"]>

  export type priceSelectScalar = {
    id?: boolean
    currency?: boolean
    amount?: boolean
    packageId?: boolean
  }

  export type priceOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "currency" | "amount" | "packageId", ExtArgs["result"]["price"]>
  export type priceInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    package?: boolean | packagesDefaultArgs<ExtArgs>
  }
  export type priceIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    package?: boolean | packagesDefaultArgs<ExtArgs>
  }
  export type priceIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    package?: boolean | packagesDefaultArgs<ExtArgs>
  }

  export type $pricePayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "price"
    objects: {
      package: Prisma.$packagesPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      currency: $Enums.Currency
      amount: Prisma.Decimal
      packageId: string
    }, ExtArgs["result"]["price"]>
    composites: {}
  }

  type priceGetPayload<S extends boolean | null | undefined | priceDefaultArgs> = $Result.GetResult<Prisma.$pricePayload, S>

  type priceCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<priceFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: PriceCountAggregateInputType | true
    }

  export interface priceDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['price'], meta: { name: 'price' } }
    /**
     * Find zero or one Price that matches the filter.
     * @param {priceFindUniqueArgs} args - Arguments to find a Price
     * @example
     * // Get one Price
     * const price = await prisma.price.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends priceFindUniqueArgs>(args: SelectSubset<T, priceFindUniqueArgs<ExtArgs>>): Prisma__priceClient<$Result.GetResult<Prisma.$pricePayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Price that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {priceFindUniqueOrThrowArgs} args - Arguments to find a Price
     * @example
     * // Get one Price
     * const price = await prisma.price.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends priceFindUniqueOrThrowArgs>(args: SelectSubset<T, priceFindUniqueOrThrowArgs<ExtArgs>>): Prisma__priceClient<$Result.GetResult<Prisma.$pricePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Price that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {priceFindFirstArgs} args - Arguments to find a Price
     * @example
     * // Get one Price
     * const price = await prisma.price.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends priceFindFirstArgs>(args?: SelectSubset<T, priceFindFirstArgs<ExtArgs>>): Prisma__priceClient<$Result.GetResult<Prisma.$pricePayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Price that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {priceFindFirstOrThrowArgs} args - Arguments to find a Price
     * @example
     * // Get one Price
     * const price = await prisma.price.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends priceFindFirstOrThrowArgs>(args?: SelectSubset<T, priceFindFirstOrThrowArgs<ExtArgs>>): Prisma__priceClient<$Result.GetResult<Prisma.$pricePayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Prices that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {priceFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Prices
     * const prices = await prisma.price.findMany()
     * 
     * // Get first 10 Prices
     * const prices = await prisma.price.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const priceWithIdOnly = await prisma.price.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends priceFindManyArgs>(args?: SelectSubset<T, priceFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$pricePayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Price.
     * @param {priceCreateArgs} args - Arguments to create a Price.
     * @example
     * // Create one Price
     * const Price = await prisma.price.create({
     *   data: {
     *     // ... data to create a Price
     *   }
     * })
     * 
     */
    create<T extends priceCreateArgs>(args: SelectSubset<T, priceCreateArgs<ExtArgs>>): Prisma__priceClient<$Result.GetResult<Prisma.$pricePayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Prices.
     * @param {priceCreateManyArgs} args - Arguments to create many Prices.
     * @example
     * // Create many Prices
     * const price = await prisma.price.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends priceCreateManyArgs>(args?: SelectSubset<T, priceCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Prices and returns the data saved in the database.
     * @param {priceCreateManyAndReturnArgs} args - Arguments to create many Prices.
     * @example
     * // Create many Prices
     * const price = await prisma.price.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Prices and only return the `id`
     * const priceWithIdOnly = await prisma.price.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends priceCreateManyAndReturnArgs>(args?: SelectSubset<T, priceCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$pricePayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Price.
     * @param {priceDeleteArgs} args - Arguments to delete one Price.
     * @example
     * // Delete one Price
     * const Price = await prisma.price.delete({
     *   where: {
     *     // ... filter to delete one Price
     *   }
     * })
     * 
     */
    delete<T extends priceDeleteArgs>(args: SelectSubset<T, priceDeleteArgs<ExtArgs>>): Prisma__priceClient<$Result.GetResult<Prisma.$pricePayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Price.
     * @param {priceUpdateArgs} args - Arguments to update one Price.
     * @example
     * // Update one Price
     * const price = await prisma.price.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends priceUpdateArgs>(args: SelectSubset<T, priceUpdateArgs<ExtArgs>>): Prisma__priceClient<$Result.GetResult<Prisma.$pricePayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Prices.
     * @param {priceDeleteManyArgs} args - Arguments to filter Prices to delete.
     * @example
     * // Delete a few Prices
     * const { count } = await prisma.price.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends priceDeleteManyArgs>(args?: SelectSubset<T, priceDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Prices.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {priceUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Prices
     * const price = await prisma.price.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends priceUpdateManyArgs>(args: SelectSubset<T, priceUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Prices and returns the data updated in the database.
     * @param {priceUpdateManyAndReturnArgs} args - Arguments to update many Prices.
     * @example
     * // Update many Prices
     * const price = await prisma.price.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Prices and only return the `id`
     * const priceWithIdOnly = await prisma.price.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends priceUpdateManyAndReturnArgs>(args: SelectSubset<T, priceUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$pricePayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Price.
     * @param {priceUpsertArgs} args - Arguments to update or create a Price.
     * @example
     * // Update or create a Price
     * const price = await prisma.price.upsert({
     *   create: {
     *     // ... data to create a Price
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Price we want to update
     *   }
     * })
     */
    upsert<T extends priceUpsertArgs>(args: SelectSubset<T, priceUpsertArgs<ExtArgs>>): Prisma__priceClient<$Result.GetResult<Prisma.$pricePayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Prices.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {priceCountArgs} args - Arguments to filter Prices to count.
     * @example
     * // Count the number of Prices
     * const count = await prisma.price.count({
     *   where: {
     *     // ... the filter for the Prices we want to count
     *   }
     * })
    **/
    count<T extends priceCountArgs>(
      args?: Subset<T, priceCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], PriceCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Price.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PriceAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends PriceAggregateArgs>(args: Subset<T, PriceAggregateArgs>): Prisma.PrismaPromise<GetPriceAggregateType<T>>

    /**
     * Group by Price.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {priceGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends priceGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: priceGroupByArgs['orderBy'] }
        : { orderBy?: priceGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, priceGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetPriceGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the price model
   */
  readonly fields: priceFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for price.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__priceClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    package<T extends packagesDefaultArgs<ExtArgs> = {}>(args?: Subset<T, packagesDefaultArgs<ExtArgs>>): Prisma__packagesClient<$Result.GetResult<Prisma.$packagesPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the price model
   */
  interface priceFieldRefs {
    readonly id: FieldRef<"price", 'String'>
    readonly currency: FieldRef<"price", 'Currency'>
    readonly amount: FieldRef<"price", 'Decimal'>
    readonly packageId: FieldRef<"price", 'String'>
  }
    

  // Custom InputTypes
  /**
   * price findUnique
   */
  export type priceFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the price
     */
    select?: priceSelect<ExtArgs> | null
    /**
     * Omit specific fields from the price
     */
    omit?: priceOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: priceInclude<ExtArgs> | null
    /**
     * Filter, which price to fetch.
     */
    where: priceWhereUniqueInput
  }

  /**
   * price findUniqueOrThrow
   */
  export type priceFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the price
     */
    select?: priceSelect<ExtArgs> | null
    /**
     * Omit specific fields from the price
     */
    omit?: priceOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: priceInclude<ExtArgs> | null
    /**
     * Filter, which price to fetch.
     */
    where: priceWhereUniqueInput
  }

  /**
   * price findFirst
   */
  export type priceFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the price
     */
    select?: priceSelect<ExtArgs> | null
    /**
     * Omit specific fields from the price
     */
    omit?: priceOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: priceInclude<ExtArgs> | null
    /**
     * Filter, which price to fetch.
     */
    where?: priceWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of prices to fetch.
     */
    orderBy?: priceOrderByWithRelationInput | priceOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for prices.
     */
    cursor?: priceWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` prices from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` prices.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of prices.
     */
    distinct?: PriceScalarFieldEnum | PriceScalarFieldEnum[]
  }

  /**
   * price findFirstOrThrow
   */
  export type priceFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the price
     */
    select?: priceSelect<ExtArgs> | null
    /**
     * Omit specific fields from the price
     */
    omit?: priceOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: priceInclude<ExtArgs> | null
    /**
     * Filter, which price to fetch.
     */
    where?: priceWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of prices to fetch.
     */
    orderBy?: priceOrderByWithRelationInput | priceOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for prices.
     */
    cursor?: priceWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` prices from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` prices.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of prices.
     */
    distinct?: PriceScalarFieldEnum | PriceScalarFieldEnum[]
  }

  /**
   * price findMany
   */
  export type priceFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the price
     */
    select?: priceSelect<ExtArgs> | null
    /**
     * Omit specific fields from the price
     */
    omit?: priceOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: priceInclude<ExtArgs> | null
    /**
     * Filter, which prices to fetch.
     */
    where?: priceWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of prices to fetch.
     */
    orderBy?: priceOrderByWithRelationInput | priceOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing prices.
     */
    cursor?: priceWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` prices from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` prices.
     */
    skip?: number
    distinct?: PriceScalarFieldEnum | PriceScalarFieldEnum[]
  }

  /**
   * price create
   */
  export type priceCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the price
     */
    select?: priceSelect<ExtArgs> | null
    /**
     * Omit specific fields from the price
     */
    omit?: priceOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: priceInclude<ExtArgs> | null
    /**
     * The data needed to create a price.
     */
    data: XOR<priceCreateInput, priceUncheckedCreateInput>
  }

  /**
   * price createMany
   */
  export type priceCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many prices.
     */
    data: priceCreateManyInput | priceCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * price createManyAndReturn
   */
  export type priceCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the price
     */
    select?: priceSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the price
     */
    omit?: priceOmit<ExtArgs> | null
    /**
     * The data used to create many prices.
     */
    data: priceCreateManyInput | priceCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: priceIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * price update
   */
  export type priceUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the price
     */
    select?: priceSelect<ExtArgs> | null
    /**
     * Omit specific fields from the price
     */
    omit?: priceOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: priceInclude<ExtArgs> | null
    /**
     * The data needed to update a price.
     */
    data: XOR<priceUpdateInput, priceUncheckedUpdateInput>
    /**
     * Choose, which price to update.
     */
    where: priceWhereUniqueInput
  }

  /**
   * price updateMany
   */
  export type priceUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update prices.
     */
    data: XOR<priceUpdateManyMutationInput, priceUncheckedUpdateManyInput>
    /**
     * Filter which prices to update
     */
    where?: priceWhereInput
    /**
     * Limit how many prices to update.
     */
    limit?: number
  }

  /**
   * price updateManyAndReturn
   */
  export type priceUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the price
     */
    select?: priceSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the price
     */
    omit?: priceOmit<ExtArgs> | null
    /**
     * The data used to update prices.
     */
    data: XOR<priceUpdateManyMutationInput, priceUncheckedUpdateManyInput>
    /**
     * Filter which prices to update
     */
    where?: priceWhereInput
    /**
     * Limit how many prices to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: priceIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * price upsert
   */
  export type priceUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the price
     */
    select?: priceSelect<ExtArgs> | null
    /**
     * Omit specific fields from the price
     */
    omit?: priceOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: priceInclude<ExtArgs> | null
    /**
     * The filter to search for the price to update in case it exists.
     */
    where: priceWhereUniqueInput
    /**
     * In case the price found by the `where` argument doesn't exist, create a new price with this data.
     */
    create: XOR<priceCreateInput, priceUncheckedCreateInput>
    /**
     * In case the price was found with the provided `where` argument, update it with this data.
     */
    update: XOR<priceUpdateInput, priceUncheckedUpdateInput>
  }

  /**
   * price delete
   */
  export type priceDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the price
     */
    select?: priceSelect<ExtArgs> | null
    /**
     * Omit specific fields from the price
     */
    omit?: priceOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: priceInclude<ExtArgs> | null
    /**
     * Filter which price to delete.
     */
    where: priceWhereUniqueInput
  }

  /**
   * price deleteMany
   */
  export type priceDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which prices to delete
     */
    where?: priceWhereInput
    /**
     * Limit how many prices to delete.
     */
    limit?: number
  }

  /**
   * price without action
   */
  export type priceDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the price
     */
    select?: priceSelect<ExtArgs> | null
    /**
     * Omit specific fields from the price
     */
    omit?: priceOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: priceInclude<ExtArgs> | null
  }


  /**
   * Model subscription
   */

  export type AggregateSubscription = {
    _count: SubscriptionCountAggregateOutputType | null
    _min: SubscriptionMinAggregateOutputType | null
    _max: SubscriptionMaxAggregateOutputType | null
  }

  export type SubscriptionMinAggregateOutputType = {
    id: string | null
    userId: string | null
    packageId: string | null
    startDate: Date | null
    endDate: Date | null
    status: $Enums.SubscriptionStatus | null
    lastPaymentStatus: string | null
    stripeCustomerId: string | null
    stripePaymentId: string | null
    stripePriceId: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type SubscriptionMaxAggregateOutputType = {
    id: string | null
    userId: string | null
    packageId: string | null
    startDate: Date | null
    endDate: Date | null
    status: $Enums.SubscriptionStatus | null
    lastPaymentStatus: string | null
    stripeCustomerId: string | null
    stripePaymentId: string | null
    stripePriceId: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type SubscriptionCountAggregateOutputType = {
    id: number
    userId: number
    packageId: number
    startDate: number
    endDate: number
    status: number
    lastPaymentStatus: number
    stripeCustomerId: number
    stripePaymentId: number
    stripePriceId: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type SubscriptionMinAggregateInputType = {
    id?: true
    userId?: true
    packageId?: true
    startDate?: true
    endDate?: true
    status?: true
    lastPaymentStatus?: true
    stripeCustomerId?: true
    stripePaymentId?: true
    stripePriceId?: true
    createdAt?: true
    updatedAt?: true
  }

  export type SubscriptionMaxAggregateInputType = {
    id?: true
    userId?: true
    packageId?: true
    startDate?: true
    endDate?: true
    status?: true
    lastPaymentStatus?: true
    stripeCustomerId?: true
    stripePaymentId?: true
    stripePriceId?: true
    createdAt?: true
    updatedAt?: true
  }

  export type SubscriptionCountAggregateInputType = {
    id?: true
    userId?: true
    packageId?: true
    startDate?: true
    endDate?: true
    status?: true
    lastPaymentStatus?: true
    stripeCustomerId?: true
    stripePaymentId?: true
    stripePriceId?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type SubscriptionAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which subscription to aggregate.
     */
    where?: subscriptionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of subscriptions to fetch.
     */
    orderBy?: subscriptionOrderByWithRelationInput | subscriptionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: subscriptionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` subscriptions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` subscriptions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned subscriptions
    **/
    _count?: true | SubscriptionCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: SubscriptionMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: SubscriptionMaxAggregateInputType
  }

  export type GetSubscriptionAggregateType<T extends SubscriptionAggregateArgs> = {
        [P in keyof T & keyof AggregateSubscription]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateSubscription[P]>
      : GetScalarType<T[P], AggregateSubscription[P]>
  }




  export type subscriptionGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: subscriptionWhereInput
    orderBy?: subscriptionOrderByWithAggregationInput | subscriptionOrderByWithAggregationInput[]
    by: SubscriptionScalarFieldEnum[] | SubscriptionScalarFieldEnum
    having?: subscriptionScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: SubscriptionCountAggregateInputType | true
    _min?: SubscriptionMinAggregateInputType
    _max?: SubscriptionMaxAggregateInputType
  }

  export type SubscriptionGroupByOutputType = {
    id: string
    userId: string
    packageId: string
    startDate: Date
    endDate: Date
    status: $Enums.SubscriptionStatus
    lastPaymentStatus: string | null
    stripeCustomerId: string | null
    stripePaymentId: string | null
    stripePriceId: string | null
    createdAt: Date
    updatedAt: Date
    _count: SubscriptionCountAggregateOutputType | null
    _min: SubscriptionMinAggregateOutputType | null
    _max: SubscriptionMaxAggregateOutputType | null
  }

  type GetSubscriptionGroupByPayload<T extends subscriptionGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<SubscriptionGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof SubscriptionGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], SubscriptionGroupByOutputType[P]>
            : GetScalarType<T[P], SubscriptionGroupByOutputType[P]>
        }
      >
    >


  export type subscriptionSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    userId?: boolean
    packageId?: boolean
    startDate?: boolean
    endDate?: boolean
    status?: boolean
    lastPaymentStatus?: boolean
    stripeCustomerId?: boolean
    stripePaymentId?: boolean
    stripePriceId?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    user?: boolean | userDefaultArgs<ExtArgs>
    package?: boolean | packagesDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["subscription"]>

  export type subscriptionSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    userId?: boolean
    packageId?: boolean
    startDate?: boolean
    endDate?: boolean
    status?: boolean
    lastPaymentStatus?: boolean
    stripeCustomerId?: boolean
    stripePaymentId?: boolean
    stripePriceId?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    user?: boolean | userDefaultArgs<ExtArgs>
    package?: boolean | packagesDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["subscription"]>

  export type subscriptionSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    userId?: boolean
    packageId?: boolean
    startDate?: boolean
    endDate?: boolean
    status?: boolean
    lastPaymentStatus?: boolean
    stripeCustomerId?: boolean
    stripePaymentId?: boolean
    stripePriceId?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    user?: boolean | userDefaultArgs<ExtArgs>
    package?: boolean | packagesDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["subscription"]>

  export type subscriptionSelectScalar = {
    id?: boolean
    userId?: boolean
    packageId?: boolean
    startDate?: boolean
    endDate?: boolean
    status?: boolean
    lastPaymentStatus?: boolean
    stripeCustomerId?: boolean
    stripePaymentId?: boolean
    stripePriceId?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type subscriptionOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "userId" | "packageId" | "startDate" | "endDate" | "status" | "lastPaymentStatus" | "stripeCustomerId" | "stripePaymentId" | "stripePriceId" | "createdAt" | "updatedAt", ExtArgs["result"]["subscription"]>
  export type subscriptionInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | userDefaultArgs<ExtArgs>
    package?: boolean | packagesDefaultArgs<ExtArgs>
  }
  export type subscriptionIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | userDefaultArgs<ExtArgs>
    package?: boolean | packagesDefaultArgs<ExtArgs>
  }
  export type subscriptionIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | userDefaultArgs<ExtArgs>
    package?: boolean | packagesDefaultArgs<ExtArgs>
  }

  export type $subscriptionPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "subscription"
    objects: {
      user: Prisma.$userPayload<ExtArgs>
      package: Prisma.$packagesPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      userId: string
      packageId: string
      startDate: Date
      endDate: Date
      status: $Enums.SubscriptionStatus
      lastPaymentStatus: string | null
      stripeCustomerId: string | null
      stripePaymentId: string | null
      stripePriceId: string | null
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["subscription"]>
    composites: {}
  }

  type subscriptionGetPayload<S extends boolean | null | undefined | subscriptionDefaultArgs> = $Result.GetResult<Prisma.$subscriptionPayload, S>

  type subscriptionCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<subscriptionFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: SubscriptionCountAggregateInputType | true
    }

  export interface subscriptionDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['subscription'], meta: { name: 'subscription' } }
    /**
     * Find zero or one Subscription that matches the filter.
     * @param {subscriptionFindUniqueArgs} args - Arguments to find a Subscription
     * @example
     * // Get one Subscription
     * const subscription = await prisma.subscription.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends subscriptionFindUniqueArgs>(args: SelectSubset<T, subscriptionFindUniqueArgs<ExtArgs>>): Prisma__subscriptionClient<$Result.GetResult<Prisma.$subscriptionPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Subscription that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {subscriptionFindUniqueOrThrowArgs} args - Arguments to find a Subscription
     * @example
     * // Get one Subscription
     * const subscription = await prisma.subscription.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends subscriptionFindUniqueOrThrowArgs>(args: SelectSubset<T, subscriptionFindUniqueOrThrowArgs<ExtArgs>>): Prisma__subscriptionClient<$Result.GetResult<Prisma.$subscriptionPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Subscription that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {subscriptionFindFirstArgs} args - Arguments to find a Subscription
     * @example
     * // Get one Subscription
     * const subscription = await prisma.subscription.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends subscriptionFindFirstArgs>(args?: SelectSubset<T, subscriptionFindFirstArgs<ExtArgs>>): Prisma__subscriptionClient<$Result.GetResult<Prisma.$subscriptionPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Subscription that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {subscriptionFindFirstOrThrowArgs} args - Arguments to find a Subscription
     * @example
     * // Get one Subscription
     * const subscription = await prisma.subscription.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends subscriptionFindFirstOrThrowArgs>(args?: SelectSubset<T, subscriptionFindFirstOrThrowArgs<ExtArgs>>): Prisma__subscriptionClient<$Result.GetResult<Prisma.$subscriptionPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Subscriptions that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {subscriptionFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Subscriptions
     * const subscriptions = await prisma.subscription.findMany()
     * 
     * // Get first 10 Subscriptions
     * const subscriptions = await prisma.subscription.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const subscriptionWithIdOnly = await prisma.subscription.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends subscriptionFindManyArgs>(args?: SelectSubset<T, subscriptionFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$subscriptionPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Subscription.
     * @param {subscriptionCreateArgs} args - Arguments to create a Subscription.
     * @example
     * // Create one Subscription
     * const Subscription = await prisma.subscription.create({
     *   data: {
     *     // ... data to create a Subscription
     *   }
     * })
     * 
     */
    create<T extends subscriptionCreateArgs>(args: SelectSubset<T, subscriptionCreateArgs<ExtArgs>>): Prisma__subscriptionClient<$Result.GetResult<Prisma.$subscriptionPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Subscriptions.
     * @param {subscriptionCreateManyArgs} args - Arguments to create many Subscriptions.
     * @example
     * // Create many Subscriptions
     * const subscription = await prisma.subscription.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends subscriptionCreateManyArgs>(args?: SelectSubset<T, subscriptionCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Subscriptions and returns the data saved in the database.
     * @param {subscriptionCreateManyAndReturnArgs} args - Arguments to create many Subscriptions.
     * @example
     * // Create many Subscriptions
     * const subscription = await prisma.subscription.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Subscriptions and only return the `id`
     * const subscriptionWithIdOnly = await prisma.subscription.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends subscriptionCreateManyAndReturnArgs>(args?: SelectSubset<T, subscriptionCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$subscriptionPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Subscription.
     * @param {subscriptionDeleteArgs} args - Arguments to delete one Subscription.
     * @example
     * // Delete one Subscription
     * const Subscription = await prisma.subscription.delete({
     *   where: {
     *     // ... filter to delete one Subscription
     *   }
     * })
     * 
     */
    delete<T extends subscriptionDeleteArgs>(args: SelectSubset<T, subscriptionDeleteArgs<ExtArgs>>): Prisma__subscriptionClient<$Result.GetResult<Prisma.$subscriptionPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Subscription.
     * @param {subscriptionUpdateArgs} args - Arguments to update one Subscription.
     * @example
     * // Update one Subscription
     * const subscription = await prisma.subscription.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends subscriptionUpdateArgs>(args: SelectSubset<T, subscriptionUpdateArgs<ExtArgs>>): Prisma__subscriptionClient<$Result.GetResult<Prisma.$subscriptionPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Subscriptions.
     * @param {subscriptionDeleteManyArgs} args - Arguments to filter Subscriptions to delete.
     * @example
     * // Delete a few Subscriptions
     * const { count } = await prisma.subscription.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends subscriptionDeleteManyArgs>(args?: SelectSubset<T, subscriptionDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Subscriptions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {subscriptionUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Subscriptions
     * const subscription = await prisma.subscription.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends subscriptionUpdateManyArgs>(args: SelectSubset<T, subscriptionUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Subscriptions and returns the data updated in the database.
     * @param {subscriptionUpdateManyAndReturnArgs} args - Arguments to update many Subscriptions.
     * @example
     * // Update many Subscriptions
     * const subscription = await prisma.subscription.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Subscriptions and only return the `id`
     * const subscriptionWithIdOnly = await prisma.subscription.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends subscriptionUpdateManyAndReturnArgs>(args: SelectSubset<T, subscriptionUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$subscriptionPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Subscription.
     * @param {subscriptionUpsertArgs} args - Arguments to update or create a Subscription.
     * @example
     * // Update or create a Subscription
     * const subscription = await prisma.subscription.upsert({
     *   create: {
     *     // ... data to create a Subscription
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Subscription we want to update
     *   }
     * })
     */
    upsert<T extends subscriptionUpsertArgs>(args: SelectSubset<T, subscriptionUpsertArgs<ExtArgs>>): Prisma__subscriptionClient<$Result.GetResult<Prisma.$subscriptionPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Subscriptions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {subscriptionCountArgs} args - Arguments to filter Subscriptions to count.
     * @example
     * // Count the number of Subscriptions
     * const count = await prisma.subscription.count({
     *   where: {
     *     // ... the filter for the Subscriptions we want to count
     *   }
     * })
    **/
    count<T extends subscriptionCountArgs>(
      args?: Subset<T, subscriptionCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], SubscriptionCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Subscription.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SubscriptionAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends SubscriptionAggregateArgs>(args: Subset<T, SubscriptionAggregateArgs>): Prisma.PrismaPromise<GetSubscriptionAggregateType<T>>

    /**
     * Group by Subscription.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {subscriptionGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends subscriptionGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: subscriptionGroupByArgs['orderBy'] }
        : { orderBy?: subscriptionGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, subscriptionGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetSubscriptionGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the subscription model
   */
  readonly fields: subscriptionFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for subscription.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__subscriptionClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    user<T extends userDefaultArgs<ExtArgs> = {}>(args?: Subset<T, userDefaultArgs<ExtArgs>>): Prisma__userClient<$Result.GetResult<Prisma.$userPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    package<T extends packagesDefaultArgs<ExtArgs> = {}>(args?: Subset<T, packagesDefaultArgs<ExtArgs>>): Prisma__packagesClient<$Result.GetResult<Prisma.$packagesPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the subscription model
   */
  interface subscriptionFieldRefs {
    readonly id: FieldRef<"subscription", 'String'>
    readonly userId: FieldRef<"subscription", 'String'>
    readonly packageId: FieldRef<"subscription", 'String'>
    readonly startDate: FieldRef<"subscription", 'DateTime'>
    readonly endDate: FieldRef<"subscription", 'DateTime'>
    readonly status: FieldRef<"subscription", 'SubscriptionStatus'>
    readonly lastPaymentStatus: FieldRef<"subscription", 'String'>
    readonly stripeCustomerId: FieldRef<"subscription", 'String'>
    readonly stripePaymentId: FieldRef<"subscription", 'String'>
    readonly stripePriceId: FieldRef<"subscription", 'String'>
    readonly createdAt: FieldRef<"subscription", 'DateTime'>
    readonly updatedAt: FieldRef<"subscription", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * subscription findUnique
   */
  export type subscriptionFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the subscription
     */
    select?: subscriptionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the subscription
     */
    omit?: subscriptionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: subscriptionInclude<ExtArgs> | null
    /**
     * Filter, which subscription to fetch.
     */
    where: subscriptionWhereUniqueInput
  }

  /**
   * subscription findUniqueOrThrow
   */
  export type subscriptionFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the subscription
     */
    select?: subscriptionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the subscription
     */
    omit?: subscriptionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: subscriptionInclude<ExtArgs> | null
    /**
     * Filter, which subscription to fetch.
     */
    where: subscriptionWhereUniqueInput
  }

  /**
   * subscription findFirst
   */
  export type subscriptionFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the subscription
     */
    select?: subscriptionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the subscription
     */
    omit?: subscriptionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: subscriptionInclude<ExtArgs> | null
    /**
     * Filter, which subscription to fetch.
     */
    where?: subscriptionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of subscriptions to fetch.
     */
    orderBy?: subscriptionOrderByWithRelationInput | subscriptionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for subscriptions.
     */
    cursor?: subscriptionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` subscriptions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` subscriptions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of subscriptions.
     */
    distinct?: SubscriptionScalarFieldEnum | SubscriptionScalarFieldEnum[]
  }

  /**
   * subscription findFirstOrThrow
   */
  export type subscriptionFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the subscription
     */
    select?: subscriptionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the subscription
     */
    omit?: subscriptionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: subscriptionInclude<ExtArgs> | null
    /**
     * Filter, which subscription to fetch.
     */
    where?: subscriptionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of subscriptions to fetch.
     */
    orderBy?: subscriptionOrderByWithRelationInput | subscriptionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for subscriptions.
     */
    cursor?: subscriptionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` subscriptions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` subscriptions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of subscriptions.
     */
    distinct?: SubscriptionScalarFieldEnum | SubscriptionScalarFieldEnum[]
  }

  /**
   * subscription findMany
   */
  export type subscriptionFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the subscription
     */
    select?: subscriptionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the subscription
     */
    omit?: subscriptionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: subscriptionInclude<ExtArgs> | null
    /**
     * Filter, which subscriptions to fetch.
     */
    where?: subscriptionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of subscriptions to fetch.
     */
    orderBy?: subscriptionOrderByWithRelationInput | subscriptionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing subscriptions.
     */
    cursor?: subscriptionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` subscriptions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` subscriptions.
     */
    skip?: number
    distinct?: SubscriptionScalarFieldEnum | SubscriptionScalarFieldEnum[]
  }

  /**
   * subscription create
   */
  export type subscriptionCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the subscription
     */
    select?: subscriptionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the subscription
     */
    omit?: subscriptionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: subscriptionInclude<ExtArgs> | null
    /**
     * The data needed to create a subscription.
     */
    data: XOR<subscriptionCreateInput, subscriptionUncheckedCreateInput>
  }

  /**
   * subscription createMany
   */
  export type subscriptionCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many subscriptions.
     */
    data: subscriptionCreateManyInput | subscriptionCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * subscription createManyAndReturn
   */
  export type subscriptionCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the subscription
     */
    select?: subscriptionSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the subscription
     */
    omit?: subscriptionOmit<ExtArgs> | null
    /**
     * The data used to create many subscriptions.
     */
    data: subscriptionCreateManyInput | subscriptionCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: subscriptionIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * subscription update
   */
  export type subscriptionUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the subscription
     */
    select?: subscriptionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the subscription
     */
    omit?: subscriptionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: subscriptionInclude<ExtArgs> | null
    /**
     * The data needed to update a subscription.
     */
    data: XOR<subscriptionUpdateInput, subscriptionUncheckedUpdateInput>
    /**
     * Choose, which subscription to update.
     */
    where: subscriptionWhereUniqueInput
  }

  /**
   * subscription updateMany
   */
  export type subscriptionUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update subscriptions.
     */
    data: XOR<subscriptionUpdateManyMutationInput, subscriptionUncheckedUpdateManyInput>
    /**
     * Filter which subscriptions to update
     */
    where?: subscriptionWhereInput
    /**
     * Limit how many subscriptions to update.
     */
    limit?: number
  }

  /**
   * subscription updateManyAndReturn
   */
  export type subscriptionUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the subscription
     */
    select?: subscriptionSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the subscription
     */
    omit?: subscriptionOmit<ExtArgs> | null
    /**
     * The data used to update subscriptions.
     */
    data: XOR<subscriptionUpdateManyMutationInput, subscriptionUncheckedUpdateManyInput>
    /**
     * Filter which subscriptions to update
     */
    where?: subscriptionWhereInput
    /**
     * Limit how many subscriptions to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: subscriptionIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * subscription upsert
   */
  export type subscriptionUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the subscription
     */
    select?: subscriptionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the subscription
     */
    omit?: subscriptionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: subscriptionInclude<ExtArgs> | null
    /**
     * The filter to search for the subscription to update in case it exists.
     */
    where: subscriptionWhereUniqueInput
    /**
     * In case the subscription found by the `where` argument doesn't exist, create a new subscription with this data.
     */
    create: XOR<subscriptionCreateInput, subscriptionUncheckedCreateInput>
    /**
     * In case the subscription was found with the provided `where` argument, update it with this data.
     */
    update: XOR<subscriptionUpdateInput, subscriptionUncheckedUpdateInput>
  }

  /**
   * subscription delete
   */
  export type subscriptionDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the subscription
     */
    select?: subscriptionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the subscription
     */
    omit?: subscriptionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: subscriptionInclude<ExtArgs> | null
    /**
     * Filter which subscription to delete.
     */
    where: subscriptionWhereUniqueInput
  }

  /**
   * subscription deleteMany
   */
  export type subscriptionDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which subscriptions to delete
     */
    where?: subscriptionWhereInput
    /**
     * Limit how many subscriptions to delete.
     */
    limit?: number
  }

  /**
   * subscription without action
   */
  export type subscriptionDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the subscription
     */
    select?: subscriptionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the subscription
     */
    omit?: subscriptionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: subscriptionInclude<ExtArgs> | null
  }


  /**
   * Model chatRoom
   */

  export type AggregateChatRoom = {
    _count: ChatRoomCountAggregateOutputType | null
    _min: ChatRoomMinAggregateOutputType | null
    _max: ChatRoomMaxAggregateOutputType | null
  }

  export type ChatRoomMinAggregateOutputType = {
    id: string | null
    userId: string | null
    title: string | null
    language: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type ChatRoomMaxAggregateOutputType = {
    id: string | null
    userId: string | null
    title: string | null
    language: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type ChatRoomCountAggregateOutputType = {
    id: number
    userId: number
    title: number
    language: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type ChatRoomMinAggregateInputType = {
    id?: true
    userId?: true
    title?: true
    language?: true
    createdAt?: true
    updatedAt?: true
  }

  export type ChatRoomMaxAggregateInputType = {
    id?: true
    userId?: true
    title?: true
    language?: true
    createdAt?: true
    updatedAt?: true
  }

  export type ChatRoomCountAggregateInputType = {
    id?: true
    userId?: true
    title?: true
    language?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type ChatRoomAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which chatRoom to aggregate.
     */
    where?: chatRoomWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of chatRooms to fetch.
     */
    orderBy?: chatRoomOrderByWithRelationInput | chatRoomOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: chatRoomWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` chatRooms from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` chatRooms.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned chatRooms
    **/
    _count?: true | ChatRoomCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ChatRoomMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ChatRoomMaxAggregateInputType
  }

  export type GetChatRoomAggregateType<T extends ChatRoomAggregateArgs> = {
        [P in keyof T & keyof AggregateChatRoom]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateChatRoom[P]>
      : GetScalarType<T[P], AggregateChatRoom[P]>
  }




  export type chatRoomGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: chatRoomWhereInput
    orderBy?: chatRoomOrderByWithAggregationInput | chatRoomOrderByWithAggregationInput[]
    by: ChatRoomScalarFieldEnum[] | ChatRoomScalarFieldEnum
    having?: chatRoomScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ChatRoomCountAggregateInputType | true
    _min?: ChatRoomMinAggregateInputType
    _max?: ChatRoomMaxAggregateInputType
  }

  export type ChatRoomGroupByOutputType = {
    id: string
    userId: string
    title: string
    language: string
    createdAt: Date
    updatedAt: Date | null
    _count: ChatRoomCountAggregateOutputType | null
    _min: ChatRoomMinAggregateOutputType | null
    _max: ChatRoomMaxAggregateOutputType | null
  }

  type GetChatRoomGroupByPayload<T extends chatRoomGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ChatRoomGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ChatRoomGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ChatRoomGroupByOutputType[P]>
            : GetScalarType<T[P], ChatRoomGroupByOutputType[P]>
        }
      >
    >


  export type chatRoomSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    userId?: boolean
    title?: boolean
    language?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    user?: boolean | userDefaultArgs<ExtArgs>
    messages?: boolean | chatRoom$messagesArgs<ExtArgs>
    _count?: boolean | ChatRoomCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["chatRoom"]>

  export type chatRoomSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    userId?: boolean
    title?: boolean
    language?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    user?: boolean | userDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["chatRoom"]>

  export type chatRoomSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    userId?: boolean
    title?: boolean
    language?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    user?: boolean | userDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["chatRoom"]>

  export type chatRoomSelectScalar = {
    id?: boolean
    userId?: boolean
    title?: boolean
    language?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type chatRoomOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "userId" | "title" | "language" | "createdAt" | "updatedAt", ExtArgs["result"]["chatRoom"]>
  export type chatRoomInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | userDefaultArgs<ExtArgs>
    messages?: boolean | chatRoom$messagesArgs<ExtArgs>
    _count?: boolean | ChatRoomCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type chatRoomIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | userDefaultArgs<ExtArgs>
  }
  export type chatRoomIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | userDefaultArgs<ExtArgs>
  }

  export type $chatRoomPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "chatRoom"
    objects: {
      user: Prisma.$userPayload<ExtArgs>
      messages: Prisma.$chatPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      userId: string
      title: string
      language: string
      createdAt: Date
      updatedAt: Date | null
    }, ExtArgs["result"]["chatRoom"]>
    composites: {}
  }

  type chatRoomGetPayload<S extends boolean | null | undefined | chatRoomDefaultArgs> = $Result.GetResult<Prisma.$chatRoomPayload, S>

  type chatRoomCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<chatRoomFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: ChatRoomCountAggregateInputType | true
    }

  export interface chatRoomDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['chatRoom'], meta: { name: 'chatRoom' } }
    /**
     * Find zero or one ChatRoom that matches the filter.
     * @param {chatRoomFindUniqueArgs} args - Arguments to find a ChatRoom
     * @example
     * // Get one ChatRoom
     * const chatRoom = await prisma.chatRoom.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends chatRoomFindUniqueArgs>(args: SelectSubset<T, chatRoomFindUniqueArgs<ExtArgs>>): Prisma__chatRoomClient<$Result.GetResult<Prisma.$chatRoomPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one ChatRoom that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {chatRoomFindUniqueOrThrowArgs} args - Arguments to find a ChatRoom
     * @example
     * // Get one ChatRoom
     * const chatRoom = await prisma.chatRoom.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends chatRoomFindUniqueOrThrowArgs>(args: SelectSubset<T, chatRoomFindUniqueOrThrowArgs<ExtArgs>>): Prisma__chatRoomClient<$Result.GetResult<Prisma.$chatRoomPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first ChatRoom that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {chatRoomFindFirstArgs} args - Arguments to find a ChatRoom
     * @example
     * // Get one ChatRoom
     * const chatRoom = await prisma.chatRoom.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends chatRoomFindFirstArgs>(args?: SelectSubset<T, chatRoomFindFirstArgs<ExtArgs>>): Prisma__chatRoomClient<$Result.GetResult<Prisma.$chatRoomPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first ChatRoom that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {chatRoomFindFirstOrThrowArgs} args - Arguments to find a ChatRoom
     * @example
     * // Get one ChatRoom
     * const chatRoom = await prisma.chatRoom.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends chatRoomFindFirstOrThrowArgs>(args?: SelectSubset<T, chatRoomFindFirstOrThrowArgs<ExtArgs>>): Prisma__chatRoomClient<$Result.GetResult<Prisma.$chatRoomPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more ChatRooms that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {chatRoomFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all ChatRooms
     * const chatRooms = await prisma.chatRoom.findMany()
     * 
     * // Get first 10 ChatRooms
     * const chatRooms = await prisma.chatRoom.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const chatRoomWithIdOnly = await prisma.chatRoom.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends chatRoomFindManyArgs>(args?: SelectSubset<T, chatRoomFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$chatRoomPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a ChatRoom.
     * @param {chatRoomCreateArgs} args - Arguments to create a ChatRoom.
     * @example
     * // Create one ChatRoom
     * const ChatRoom = await prisma.chatRoom.create({
     *   data: {
     *     // ... data to create a ChatRoom
     *   }
     * })
     * 
     */
    create<T extends chatRoomCreateArgs>(args: SelectSubset<T, chatRoomCreateArgs<ExtArgs>>): Prisma__chatRoomClient<$Result.GetResult<Prisma.$chatRoomPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many ChatRooms.
     * @param {chatRoomCreateManyArgs} args - Arguments to create many ChatRooms.
     * @example
     * // Create many ChatRooms
     * const chatRoom = await prisma.chatRoom.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends chatRoomCreateManyArgs>(args?: SelectSubset<T, chatRoomCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many ChatRooms and returns the data saved in the database.
     * @param {chatRoomCreateManyAndReturnArgs} args - Arguments to create many ChatRooms.
     * @example
     * // Create many ChatRooms
     * const chatRoom = await prisma.chatRoom.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many ChatRooms and only return the `id`
     * const chatRoomWithIdOnly = await prisma.chatRoom.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends chatRoomCreateManyAndReturnArgs>(args?: SelectSubset<T, chatRoomCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$chatRoomPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a ChatRoom.
     * @param {chatRoomDeleteArgs} args - Arguments to delete one ChatRoom.
     * @example
     * // Delete one ChatRoom
     * const ChatRoom = await prisma.chatRoom.delete({
     *   where: {
     *     // ... filter to delete one ChatRoom
     *   }
     * })
     * 
     */
    delete<T extends chatRoomDeleteArgs>(args: SelectSubset<T, chatRoomDeleteArgs<ExtArgs>>): Prisma__chatRoomClient<$Result.GetResult<Prisma.$chatRoomPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one ChatRoom.
     * @param {chatRoomUpdateArgs} args - Arguments to update one ChatRoom.
     * @example
     * // Update one ChatRoom
     * const chatRoom = await prisma.chatRoom.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends chatRoomUpdateArgs>(args: SelectSubset<T, chatRoomUpdateArgs<ExtArgs>>): Prisma__chatRoomClient<$Result.GetResult<Prisma.$chatRoomPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more ChatRooms.
     * @param {chatRoomDeleteManyArgs} args - Arguments to filter ChatRooms to delete.
     * @example
     * // Delete a few ChatRooms
     * const { count } = await prisma.chatRoom.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends chatRoomDeleteManyArgs>(args?: SelectSubset<T, chatRoomDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more ChatRooms.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {chatRoomUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many ChatRooms
     * const chatRoom = await prisma.chatRoom.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends chatRoomUpdateManyArgs>(args: SelectSubset<T, chatRoomUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more ChatRooms and returns the data updated in the database.
     * @param {chatRoomUpdateManyAndReturnArgs} args - Arguments to update many ChatRooms.
     * @example
     * // Update many ChatRooms
     * const chatRoom = await prisma.chatRoom.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more ChatRooms and only return the `id`
     * const chatRoomWithIdOnly = await prisma.chatRoom.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends chatRoomUpdateManyAndReturnArgs>(args: SelectSubset<T, chatRoomUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$chatRoomPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one ChatRoom.
     * @param {chatRoomUpsertArgs} args - Arguments to update or create a ChatRoom.
     * @example
     * // Update or create a ChatRoom
     * const chatRoom = await prisma.chatRoom.upsert({
     *   create: {
     *     // ... data to create a ChatRoom
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the ChatRoom we want to update
     *   }
     * })
     */
    upsert<T extends chatRoomUpsertArgs>(args: SelectSubset<T, chatRoomUpsertArgs<ExtArgs>>): Prisma__chatRoomClient<$Result.GetResult<Prisma.$chatRoomPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of ChatRooms.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {chatRoomCountArgs} args - Arguments to filter ChatRooms to count.
     * @example
     * // Count the number of ChatRooms
     * const count = await prisma.chatRoom.count({
     *   where: {
     *     // ... the filter for the ChatRooms we want to count
     *   }
     * })
    **/
    count<T extends chatRoomCountArgs>(
      args?: Subset<T, chatRoomCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ChatRoomCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a ChatRoom.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ChatRoomAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ChatRoomAggregateArgs>(args: Subset<T, ChatRoomAggregateArgs>): Prisma.PrismaPromise<GetChatRoomAggregateType<T>>

    /**
     * Group by ChatRoom.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {chatRoomGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends chatRoomGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: chatRoomGroupByArgs['orderBy'] }
        : { orderBy?: chatRoomGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, chatRoomGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetChatRoomGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the chatRoom model
   */
  readonly fields: chatRoomFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for chatRoom.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__chatRoomClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    user<T extends userDefaultArgs<ExtArgs> = {}>(args?: Subset<T, userDefaultArgs<ExtArgs>>): Prisma__userClient<$Result.GetResult<Prisma.$userPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    messages<T extends chatRoom$messagesArgs<ExtArgs> = {}>(args?: Subset<T, chatRoom$messagesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$chatPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the chatRoom model
   */
  interface chatRoomFieldRefs {
    readonly id: FieldRef<"chatRoom", 'String'>
    readonly userId: FieldRef<"chatRoom", 'String'>
    readonly title: FieldRef<"chatRoom", 'String'>
    readonly language: FieldRef<"chatRoom", 'String'>
    readonly createdAt: FieldRef<"chatRoom", 'DateTime'>
    readonly updatedAt: FieldRef<"chatRoom", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * chatRoom findUnique
   */
  export type chatRoomFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the chatRoom
     */
    select?: chatRoomSelect<ExtArgs> | null
    /**
     * Omit specific fields from the chatRoom
     */
    omit?: chatRoomOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: chatRoomInclude<ExtArgs> | null
    /**
     * Filter, which chatRoom to fetch.
     */
    where: chatRoomWhereUniqueInput
  }

  /**
   * chatRoom findUniqueOrThrow
   */
  export type chatRoomFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the chatRoom
     */
    select?: chatRoomSelect<ExtArgs> | null
    /**
     * Omit specific fields from the chatRoom
     */
    omit?: chatRoomOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: chatRoomInclude<ExtArgs> | null
    /**
     * Filter, which chatRoom to fetch.
     */
    where: chatRoomWhereUniqueInput
  }

  /**
   * chatRoom findFirst
   */
  export type chatRoomFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the chatRoom
     */
    select?: chatRoomSelect<ExtArgs> | null
    /**
     * Omit specific fields from the chatRoom
     */
    omit?: chatRoomOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: chatRoomInclude<ExtArgs> | null
    /**
     * Filter, which chatRoom to fetch.
     */
    where?: chatRoomWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of chatRooms to fetch.
     */
    orderBy?: chatRoomOrderByWithRelationInput | chatRoomOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for chatRooms.
     */
    cursor?: chatRoomWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` chatRooms from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` chatRooms.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of chatRooms.
     */
    distinct?: ChatRoomScalarFieldEnum | ChatRoomScalarFieldEnum[]
  }

  /**
   * chatRoom findFirstOrThrow
   */
  export type chatRoomFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the chatRoom
     */
    select?: chatRoomSelect<ExtArgs> | null
    /**
     * Omit specific fields from the chatRoom
     */
    omit?: chatRoomOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: chatRoomInclude<ExtArgs> | null
    /**
     * Filter, which chatRoom to fetch.
     */
    where?: chatRoomWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of chatRooms to fetch.
     */
    orderBy?: chatRoomOrderByWithRelationInput | chatRoomOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for chatRooms.
     */
    cursor?: chatRoomWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` chatRooms from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` chatRooms.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of chatRooms.
     */
    distinct?: ChatRoomScalarFieldEnum | ChatRoomScalarFieldEnum[]
  }

  /**
   * chatRoom findMany
   */
  export type chatRoomFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the chatRoom
     */
    select?: chatRoomSelect<ExtArgs> | null
    /**
     * Omit specific fields from the chatRoom
     */
    omit?: chatRoomOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: chatRoomInclude<ExtArgs> | null
    /**
     * Filter, which chatRooms to fetch.
     */
    where?: chatRoomWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of chatRooms to fetch.
     */
    orderBy?: chatRoomOrderByWithRelationInput | chatRoomOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing chatRooms.
     */
    cursor?: chatRoomWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` chatRooms from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` chatRooms.
     */
    skip?: number
    distinct?: ChatRoomScalarFieldEnum | ChatRoomScalarFieldEnum[]
  }

  /**
   * chatRoom create
   */
  export type chatRoomCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the chatRoom
     */
    select?: chatRoomSelect<ExtArgs> | null
    /**
     * Omit specific fields from the chatRoom
     */
    omit?: chatRoomOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: chatRoomInclude<ExtArgs> | null
    /**
     * The data needed to create a chatRoom.
     */
    data: XOR<chatRoomCreateInput, chatRoomUncheckedCreateInput>
  }

  /**
   * chatRoom createMany
   */
  export type chatRoomCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many chatRooms.
     */
    data: chatRoomCreateManyInput | chatRoomCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * chatRoom createManyAndReturn
   */
  export type chatRoomCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the chatRoom
     */
    select?: chatRoomSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the chatRoom
     */
    omit?: chatRoomOmit<ExtArgs> | null
    /**
     * The data used to create many chatRooms.
     */
    data: chatRoomCreateManyInput | chatRoomCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: chatRoomIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * chatRoom update
   */
  export type chatRoomUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the chatRoom
     */
    select?: chatRoomSelect<ExtArgs> | null
    /**
     * Omit specific fields from the chatRoom
     */
    omit?: chatRoomOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: chatRoomInclude<ExtArgs> | null
    /**
     * The data needed to update a chatRoom.
     */
    data: XOR<chatRoomUpdateInput, chatRoomUncheckedUpdateInput>
    /**
     * Choose, which chatRoom to update.
     */
    where: chatRoomWhereUniqueInput
  }

  /**
   * chatRoom updateMany
   */
  export type chatRoomUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update chatRooms.
     */
    data: XOR<chatRoomUpdateManyMutationInput, chatRoomUncheckedUpdateManyInput>
    /**
     * Filter which chatRooms to update
     */
    where?: chatRoomWhereInput
    /**
     * Limit how many chatRooms to update.
     */
    limit?: number
  }

  /**
   * chatRoom updateManyAndReturn
   */
  export type chatRoomUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the chatRoom
     */
    select?: chatRoomSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the chatRoom
     */
    omit?: chatRoomOmit<ExtArgs> | null
    /**
     * The data used to update chatRooms.
     */
    data: XOR<chatRoomUpdateManyMutationInput, chatRoomUncheckedUpdateManyInput>
    /**
     * Filter which chatRooms to update
     */
    where?: chatRoomWhereInput
    /**
     * Limit how many chatRooms to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: chatRoomIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * chatRoom upsert
   */
  export type chatRoomUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the chatRoom
     */
    select?: chatRoomSelect<ExtArgs> | null
    /**
     * Omit specific fields from the chatRoom
     */
    omit?: chatRoomOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: chatRoomInclude<ExtArgs> | null
    /**
     * The filter to search for the chatRoom to update in case it exists.
     */
    where: chatRoomWhereUniqueInput
    /**
     * In case the chatRoom found by the `where` argument doesn't exist, create a new chatRoom with this data.
     */
    create: XOR<chatRoomCreateInput, chatRoomUncheckedCreateInput>
    /**
     * In case the chatRoom was found with the provided `where` argument, update it with this data.
     */
    update: XOR<chatRoomUpdateInput, chatRoomUncheckedUpdateInput>
  }

  /**
   * chatRoom delete
   */
  export type chatRoomDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the chatRoom
     */
    select?: chatRoomSelect<ExtArgs> | null
    /**
     * Omit specific fields from the chatRoom
     */
    omit?: chatRoomOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: chatRoomInclude<ExtArgs> | null
    /**
     * Filter which chatRoom to delete.
     */
    where: chatRoomWhereUniqueInput
  }

  /**
   * chatRoom deleteMany
   */
  export type chatRoomDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which chatRooms to delete
     */
    where?: chatRoomWhereInput
    /**
     * Limit how many chatRooms to delete.
     */
    limit?: number
  }

  /**
   * chatRoom.messages
   */
  export type chatRoom$messagesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the chat
     */
    select?: chatSelect<ExtArgs> | null
    /**
     * Omit specific fields from the chat
     */
    omit?: chatOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: chatInclude<ExtArgs> | null
    where?: chatWhereInput
    orderBy?: chatOrderByWithRelationInput | chatOrderByWithRelationInput[]
    cursor?: chatWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ChatScalarFieldEnum | ChatScalarFieldEnum[]
  }

  /**
   * chatRoom without action
   */
  export type chatRoomDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the chatRoom
     */
    select?: chatRoomSelect<ExtArgs> | null
    /**
     * Omit specific fields from the chatRoom
     */
    omit?: chatRoomOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: chatRoomInclude<ExtArgs> | null
  }


  /**
   * Model chat
   */

  export type AggregateChat = {
    _count: ChatCountAggregateOutputType | null
    _min: ChatMinAggregateOutputType | null
    _max: ChatMaxAggregateOutputType | null
  }

  export type ChatMinAggregateOutputType = {
    id: string | null
    roomId: string | null
    userId: string | null
    message: string | null
    role: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type ChatMaxAggregateOutputType = {
    id: string | null
    roomId: string | null
    userId: string | null
    message: string | null
    role: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type ChatCountAggregateOutputType = {
    id: number
    roomId: number
    userId: number
    message: number
    role: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type ChatMinAggregateInputType = {
    id?: true
    roomId?: true
    userId?: true
    message?: true
    role?: true
    createdAt?: true
    updatedAt?: true
  }

  export type ChatMaxAggregateInputType = {
    id?: true
    roomId?: true
    userId?: true
    message?: true
    role?: true
    createdAt?: true
    updatedAt?: true
  }

  export type ChatCountAggregateInputType = {
    id?: true
    roomId?: true
    userId?: true
    message?: true
    role?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type ChatAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which chat to aggregate.
     */
    where?: chatWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of chats to fetch.
     */
    orderBy?: chatOrderByWithRelationInput | chatOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: chatWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` chats from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` chats.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned chats
    **/
    _count?: true | ChatCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ChatMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ChatMaxAggregateInputType
  }

  export type GetChatAggregateType<T extends ChatAggregateArgs> = {
        [P in keyof T & keyof AggregateChat]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateChat[P]>
      : GetScalarType<T[P], AggregateChat[P]>
  }




  export type chatGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: chatWhereInput
    orderBy?: chatOrderByWithAggregationInput | chatOrderByWithAggregationInput[]
    by: ChatScalarFieldEnum[] | ChatScalarFieldEnum
    having?: chatScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ChatCountAggregateInputType | true
    _min?: ChatMinAggregateInputType
    _max?: ChatMaxAggregateInputType
  }

  export type ChatGroupByOutputType = {
    id: string
    roomId: string
    userId: string
    message: string
    role: string
    createdAt: Date
    updatedAt: Date | null
    _count: ChatCountAggregateOutputType | null
    _min: ChatMinAggregateOutputType | null
    _max: ChatMaxAggregateOutputType | null
  }

  type GetChatGroupByPayload<T extends chatGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ChatGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ChatGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ChatGroupByOutputType[P]>
            : GetScalarType<T[P], ChatGroupByOutputType[P]>
        }
      >
    >


  export type chatSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    roomId?: boolean
    userId?: boolean
    message?: boolean
    role?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    user?: boolean | userDefaultArgs<ExtArgs>
    room?: boolean | chatRoomDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["chat"]>

  export type chatSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    roomId?: boolean
    userId?: boolean
    message?: boolean
    role?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    user?: boolean | userDefaultArgs<ExtArgs>
    room?: boolean | chatRoomDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["chat"]>

  export type chatSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    roomId?: boolean
    userId?: boolean
    message?: boolean
    role?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    user?: boolean | userDefaultArgs<ExtArgs>
    room?: boolean | chatRoomDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["chat"]>

  export type chatSelectScalar = {
    id?: boolean
    roomId?: boolean
    userId?: boolean
    message?: boolean
    role?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type chatOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "roomId" | "userId" | "message" | "role" | "createdAt" | "updatedAt", ExtArgs["result"]["chat"]>
  export type chatInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | userDefaultArgs<ExtArgs>
    room?: boolean | chatRoomDefaultArgs<ExtArgs>
  }
  export type chatIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | userDefaultArgs<ExtArgs>
    room?: boolean | chatRoomDefaultArgs<ExtArgs>
  }
  export type chatIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | userDefaultArgs<ExtArgs>
    room?: boolean | chatRoomDefaultArgs<ExtArgs>
  }

  export type $chatPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "chat"
    objects: {
      user: Prisma.$userPayload<ExtArgs>
      room: Prisma.$chatRoomPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      roomId: string
      userId: string
      message: string
      role: string
      createdAt: Date
      updatedAt: Date | null
    }, ExtArgs["result"]["chat"]>
    composites: {}
  }

  type chatGetPayload<S extends boolean | null | undefined | chatDefaultArgs> = $Result.GetResult<Prisma.$chatPayload, S>

  type chatCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<chatFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: ChatCountAggregateInputType | true
    }

  export interface chatDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['chat'], meta: { name: 'chat' } }
    /**
     * Find zero or one Chat that matches the filter.
     * @param {chatFindUniqueArgs} args - Arguments to find a Chat
     * @example
     * // Get one Chat
     * const chat = await prisma.chat.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends chatFindUniqueArgs>(args: SelectSubset<T, chatFindUniqueArgs<ExtArgs>>): Prisma__chatClient<$Result.GetResult<Prisma.$chatPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Chat that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {chatFindUniqueOrThrowArgs} args - Arguments to find a Chat
     * @example
     * // Get one Chat
     * const chat = await prisma.chat.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends chatFindUniqueOrThrowArgs>(args: SelectSubset<T, chatFindUniqueOrThrowArgs<ExtArgs>>): Prisma__chatClient<$Result.GetResult<Prisma.$chatPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Chat that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {chatFindFirstArgs} args - Arguments to find a Chat
     * @example
     * // Get one Chat
     * const chat = await prisma.chat.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends chatFindFirstArgs>(args?: SelectSubset<T, chatFindFirstArgs<ExtArgs>>): Prisma__chatClient<$Result.GetResult<Prisma.$chatPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Chat that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {chatFindFirstOrThrowArgs} args - Arguments to find a Chat
     * @example
     * // Get one Chat
     * const chat = await prisma.chat.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends chatFindFirstOrThrowArgs>(args?: SelectSubset<T, chatFindFirstOrThrowArgs<ExtArgs>>): Prisma__chatClient<$Result.GetResult<Prisma.$chatPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Chats that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {chatFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Chats
     * const chats = await prisma.chat.findMany()
     * 
     * // Get first 10 Chats
     * const chats = await prisma.chat.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const chatWithIdOnly = await prisma.chat.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends chatFindManyArgs>(args?: SelectSubset<T, chatFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$chatPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Chat.
     * @param {chatCreateArgs} args - Arguments to create a Chat.
     * @example
     * // Create one Chat
     * const Chat = await prisma.chat.create({
     *   data: {
     *     // ... data to create a Chat
     *   }
     * })
     * 
     */
    create<T extends chatCreateArgs>(args: SelectSubset<T, chatCreateArgs<ExtArgs>>): Prisma__chatClient<$Result.GetResult<Prisma.$chatPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Chats.
     * @param {chatCreateManyArgs} args - Arguments to create many Chats.
     * @example
     * // Create many Chats
     * const chat = await prisma.chat.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends chatCreateManyArgs>(args?: SelectSubset<T, chatCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Chats and returns the data saved in the database.
     * @param {chatCreateManyAndReturnArgs} args - Arguments to create many Chats.
     * @example
     * // Create many Chats
     * const chat = await prisma.chat.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Chats and only return the `id`
     * const chatWithIdOnly = await prisma.chat.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends chatCreateManyAndReturnArgs>(args?: SelectSubset<T, chatCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$chatPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Chat.
     * @param {chatDeleteArgs} args - Arguments to delete one Chat.
     * @example
     * // Delete one Chat
     * const Chat = await prisma.chat.delete({
     *   where: {
     *     // ... filter to delete one Chat
     *   }
     * })
     * 
     */
    delete<T extends chatDeleteArgs>(args: SelectSubset<T, chatDeleteArgs<ExtArgs>>): Prisma__chatClient<$Result.GetResult<Prisma.$chatPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Chat.
     * @param {chatUpdateArgs} args - Arguments to update one Chat.
     * @example
     * // Update one Chat
     * const chat = await prisma.chat.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends chatUpdateArgs>(args: SelectSubset<T, chatUpdateArgs<ExtArgs>>): Prisma__chatClient<$Result.GetResult<Prisma.$chatPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Chats.
     * @param {chatDeleteManyArgs} args - Arguments to filter Chats to delete.
     * @example
     * // Delete a few Chats
     * const { count } = await prisma.chat.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends chatDeleteManyArgs>(args?: SelectSubset<T, chatDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Chats.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {chatUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Chats
     * const chat = await prisma.chat.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends chatUpdateManyArgs>(args: SelectSubset<T, chatUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Chats and returns the data updated in the database.
     * @param {chatUpdateManyAndReturnArgs} args - Arguments to update many Chats.
     * @example
     * // Update many Chats
     * const chat = await prisma.chat.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Chats and only return the `id`
     * const chatWithIdOnly = await prisma.chat.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends chatUpdateManyAndReturnArgs>(args: SelectSubset<T, chatUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$chatPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Chat.
     * @param {chatUpsertArgs} args - Arguments to update or create a Chat.
     * @example
     * // Update or create a Chat
     * const chat = await prisma.chat.upsert({
     *   create: {
     *     // ... data to create a Chat
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Chat we want to update
     *   }
     * })
     */
    upsert<T extends chatUpsertArgs>(args: SelectSubset<T, chatUpsertArgs<ExtArgs>>): Prisma__chatClient<$Result.GetResult<Prisma.$chatPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Chats.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {chatCountArgs} args - Arguments to filter Chats to count.
     * @example
     * // Count the number of Chats
     * const count = await prisma.chat.count({
     *   where: {
     *     // ... the filter for the Chats we want to count
     *   }
     * })
    **/
    count<T extends chatCountArgs>(
      args?: Subset<T, chatCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ChatCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Chat.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ChatAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ChatAggregateArgs>(args: Subset<T, ChatAggregateArgs>): Prisma.PrismaPromise<GetChatAggregateType<T>>

    /**
     * Group by Chat.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {chatGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends chatGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: chatGroupByArgs['orderBy'] }
        : { orderBy?: chatGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, chatGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetChatGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the chat model
   */
  readonly fields: chatFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for chat.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__chatClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    user<T extends userDefaultArgs<ExtArgs> = {}>(args?: Subset<T, userDefaultArgs<ExtArgs>>): Prisma__userClient<$Result.GetResult<Prisma.$userPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    room<T extends chatRoomDefaultArgs<ExtArgs> = {}>(args?: Subset<T, chatRoomDefaultArgs<ExtArgs>>): Prisma__chatRoomClient<$Result.GetResult<Prisma.$chatRoomPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the chat model
   */
  interface chatFieldRefs {
    readonly id: FieldRef<"chat", 'String'>
    readonly roomId: FieldRef<"chat", 'String'>
    readonly userId: FieldRef<"chat", 'String'>
    readonly message: FieldRef<"chat", 'String'>
    readonly role: FieldRef<"chat", 'String'>
    readonly createdAt: FieldRef<"chat", 'DateTime'>
    readonly updatedAt: FieldRef<"chat", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * chat findUnique
   */
  export type chatFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the chat
     */
    select?: chatSelect<ExtArgs> | null
    /**
     * Omit specific fields from the chat
     */
    omit?: chatOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: chatInclude<ExtArgs> | null
    /**
     * Filter, which chat to fetch.
     */
    where: chatWhereUniqueInput
  }

  /**
   * chat findUniqueOrThrow
   */
  export type chatFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the chat
     */
    select?: chatSelect<ExtArgs> | null
    /**
     * Omit specific fields from the chat
     */
    omit?: chatOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: chatInclude<ExtArgs> | null
    /**
     * Filter, which chat to fetch.
     */
    where: chatWhereUniqueInput
  }

  /**
   * chat findFirst
   */
  export type chatFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the chat
     */
    select?: chatSelect<ExtArgs> | null
    /**
     * Omit specific fields from the chat
     */
    omit?: chatOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: chatInclude<ExtArgs> | null
    /**
     * Filter, which chat to fetch.
     */
    where?: chatWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of chats to fetch.
     */
    orderBy?: chatOrderByWithRelationInput | chatOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for chats.
     */
    cursor?: chatWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` chats from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` chats.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of chats.
     */
    distinct?: ChatScalarFieldEnum | ChatScalarFieldEnum[]
  }

  /**
   * chat findFirstOrThrow
   */
  export type chatFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the chat
     */
    select?: chatSelect<ExtArgs> | null
    /**
     * Omit specific fields from the chat
     */
    omit?: chatOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: chatInclude<ExtArgs> | null
    /**
     * Filter, which chat to fetch.
     */
    where?: chatWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of chats to fetch.
     */
    orderBy?: chatOrderByWithRelationInput | chatOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for chats.
     */
    cursor?: chatWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` chats from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` chats.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of chats.
     */
    distinct?: ChatScalarFieldEnum | ChatScalarFieldEnum[]
  }

  /**
   * chat findMany
   */
  export type chatFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the chat
     */
    select?: chatSelect<ExtArgs> | null
    /**
     * Omit specific fields from the chat
     */
    omit?: chatOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: chatInclude<ExtArgs> | null
    /**
     * Filter, which chats to fetch.
     */
    where?: chatWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of chats to fetch.
     */
    orderBy?: chatOrderByWithRelationInput | chatOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing chats.
     */
    cursor?: chatWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` chats from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` chats.
     */
    skip?: number
    distinct?: ChatScalarFieldEnum | ChatScalarFieldEnum[]
  }

  /**
   * chat create
   */
  export type chatCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the chat
     */
    select?: chatSelect<ExtArgs> | null
    /**
     * Omit specific fields from the chat
     */
    omit?: chatOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: chatInclude<ExtArgs> | null
    /**
     * The data needed to create a chat.
     */
    data: XOR<chatCreateInput, chatUncheckedCreateInput>
  }

  /**
   * chat createMany
   */
  export type chatCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many chats.
     */
    data: chatCreateManyInput | chatCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * chat createManyAndReturn
   */
  export type chatCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the chat
     */
    select?: chatSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the chat
     */
    omit?: chatOmit<ExtArgs> | null
    /**
     * The data used to create many chats.
     */
    data: chatCreateManyInput | chatCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: chatIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * chat update
   */
  export type chatUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the chat
     */
    select?: chatSelect<ExtArgs> | null
    /**
     * Omit specific fields from the chat
     */
    omit?: chatOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: chatInclude<ExtArgs> | null
    /**
     * The data needed to update a chat.
     */
    data: XOR<chatUpdateInput, chatUncheckedUpdateInput>
    /**
     * Choose, which chat to update.
     */
    where: chatWhereUniqueInput
  }

  /**
   * chat updateMany
   */
  export type chatUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update chats.
     */
    data: XOR<chatUpdateManyMutationInput, chatUncheckedUpdateManyInput>
    /**
     * Filter which chats to update
     */
    where?: chatWhereInput
    /**
     * Limit how many chats to update.
     */
    limit?: number
  }

  /**
   * chat updateManyAndReturn
   */
  export type chatUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the chat
     */
    select?: chatSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the chat
     */
    omit?: chatOmit<ExtArgs> | null
    /**
     * The data used to update chats.
     */
    data: XOR<chatUpdateManyMutationInput, chatUncheckedUpdateManyInput>
    /**
     * Filter which chats to update
     */
    where?: chatWhereInput
    /**
     * Limit how many chats to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: chatIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * chat upsert
   */
  export type chatUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the chat
     */
    select?: chatSelect<ExtArgs> | null
    /**
     * Omit specific fields from the chat
     */
    omit?: chatOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: chatInclude<ExtArgs> | null
    /**
     * The filter to search for the chat to update in case it exists.
     */
    where: chatWhereUniqueInput
    /**
     * In case the chat found by the `where` argument doesn't exist, create a new chat with this data.
     */
    create: XOR<chatCreateInput, chatUncheckedCreateInput>
    /**
     * In case the chat was found with the provided `where` argument, update it with this data.
     */
    update: XOR<chatUpdateInput, chatUncheckedUpdateInput>
  }

  /**
   * chat delete
   */
  export type chatDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the chat
     */
    select?: chatSelect<ExtArgs> | null
    /**
     * Omit specific fields from the chat
     */
    omit?: chatOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: chatInclude<ExtArgs> | null
    /**
     * Filter which chat to delete.
     */
    where: chatWhereUniqueInput
  }

  /**
   * chat deleteMany
   */
  export type chatDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which chats to delete
     */
    where?: chatWhereInput
    /**
     * Limit how many chats to delete.
     */
    limit?: number
  }

  /**
   * chat without action
   */
  export type chatDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the chat
     */
    select?: chatSelect<ExtArgs> | null
    /**
     * Omit specific fields from the chat
     */
    omit?: chatOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: chatInclude<ExtArgs> | null
  }


  /**
   * Model learningProgress
   */

  export type AggregateLearningProgress = {
    _count: LearningProgressCountAggregateOutputType | null
    _avg: LearningProgressAvgAggregateOutputType | null
    _sum: LearningProgressSumAggregateOutputType | null
    _min: LearningProgressMinAggregateOutputType | null
    _max: LearningProgressMaxAggregateOutputType | null
  }

  export type LearningProgressAvgAggregateOutputType = {
    progress: number | null
  }

  export type LearningProgressSumAggregateOutputType = {
    progress: number | null
  }

  export type LearningProgressMinAggregateOutputType = {
    id: string | null
    userid: string | null
    languageID: string | null
    progress: number | null
    createdat: Date | null
    updatedat: Date | null
  }

  export type LearningProgressMaxAggregateOutputType = {
    id: string | null
    userid: string | null
    languageID: string | null
    progress: number | null
    createdat: Date | null
    updatedat: Date | null
  }

  export type LearningProgressCountAggregateOutputType = {
    id: number
    userid: number
    languageID: number
    progress: number
    createdat: number
    updatedat: number
    _all: number
  }


  export type LearningProgressAvgAggregateInputType = {
    progress?: true
  }

  export type LearningProgressSumAggregateInputType = {
    progress?: true
  }

  export type LearningProgressMinAggregateInputType = {
    id?: true
    userid?: true
    languageID?: true
    progress?: true
    createdat?: true
    updatedat?: true
  }

  export type LearningProgressMaxAggregateInputType = {
    id?: true
    userid?: true
    languageID?: true
    progress?: true
    createdat?: true
    updatedat?: true
  }

  export type LearningProgressCountAggregateInputType = {
    id?: true
    userid?: true
    languageID?: true
    progress?: true
    createdat?: true
    updatedat?: true
    _all?: true
  }

  export type LearningProgressAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which learningProgress to aggregate.
     */
    where?: learningProgressWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of learningProgresses to fetch.
     */
    orderBy?: learningProgressOrderByWithRelationInput | learningProgressOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: learningProgressWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` learningProgresses from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` learningProgresses.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned learningProgresses
    **/
    _count?: true | LearningProgressCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: LearningProgressAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: LearningProgressSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: LearningProgressMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: LearningProgressMaxAggregateInputType
  }

  export type GetLearningProgressAggregateType<T extends LearningProgressAggregateArgs> = {
        [P in keyof T & keyof AggregateLearningProgress]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateLearningProgress[P]>
      : GetScalarType<T[P], AggregateLearningProgress[P]>
  }




  export type learningProgressGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: learningProgressWhereInput
    orderBy?: learningProgressOrderByWithAggregationInput | learningProgressOrderByWithAggregationInput[]
    by: LearningProgressScalarFieldEnum[] | LearningProgressScalarFieldEnum
    having?: learningProgressScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: LearningProgressCountAggregateInputType | true
    _avg?: LearningProgressAvgAggregateInputType
    _sum?: LearningProgressSumAggregateInputType
    _min?: LearningProgressMinAggregateInputType
    _max?: LearningProgressMaxAggregateInputType
  }

  export type LearningProgressGroupByOutputType = {
    id: string
    userid: string
    languageID: string
    progress: number
    createdat: Date
    updatedat: Date | null
    _count: LearningProgressCountAggregateOutputType | null
    _avg: LearningProgressAvgAggregateOutputType | null
    _sum: LearningProgressSumAggregateOutputType | null
    _min: LearningProgressMinAggregateOutputType | null
    _max: LearningProgressMaxAggregateOutputType | null
  }

  type GetLearningProgressGroupByPayload<T extends learningProgressGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<LearningProgressGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof LearningProgressGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], LearningProgressGroupByOutputType[P]>
            : GetScalarType<T[P], LearningProgressGroupByOutputType[P]>
        }
      >
    >


  export type learningProgressSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    userid?: boolean
    languageID?: boolean
    progress?: boolean
    createdat?: boolean
    updatedat?: boolean
    user?: boolean | userDefaultArgs<ExtArgs>
    language?: boolean | languagesDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["learningProgress"]>

  export type learningProgressSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    userid?: boolean
    languageID?: boolean
    progress?: boolean
    createdat?: boolean
    updatedat?: boolean
    user?: boolean | userDefaultArgs<ExtArgs>
    language?: boolean | languagesDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["learningProgress"]>

  export type learningProgressSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    userid?: boolean
    languageID?: boolean
    progress?: boolean
    createdat?: boolean
    updatedat?: boolean
    user?: boolean | userDefaultArgs<ExtArgs>
    language?: boolean | languagesDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["learningProgress"]>

  export type learningProgressSelectScalar = {
    id?: boolean
    userid?: boolean
    languageID?: boolean
    progress?: boolean
    createdat?: boolean
    updatedat?: boolean
  }

  export type learningProgressOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "userid" | "languageID" | "progress" | "createdat" | "updatedat", ExtArgs["result"]["learningProgress"]>
  export type learningProgressInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | userDefaultArgs<ExtArgs>
    language?: boolean | languagesDefaultArgs<ExtArgs>
  }
  export type learningProgressIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | userDefaultArgs<ExtArgs>
    language?: boolean | languagesDefaultArgs<ExtArgs>
  }
  export type learningProgressIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | userDefaultArgs<ExtArgs>
    language?: boolean | languagesDefaultArgs<ExtArgs>
  }

  export type $learningProgressPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "learningProgress"
    objects: {
      user: Prisma.$userPayload<ExtArgs>
      language: Prisma.$languagesPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      userid: string
      languageID: string
      progress: number
      createdat: Date
      updatedat: Date | null
    }, ExtArgs["result"]["learningProgress"]>
    composites: {}
  }

  type learningProgressGetPayload<S extends boolean | null | undefined | learningProgressDefaultArgs> = $Result.GetResult<Prisma.$learningProgressPayload, S>

  type learningProgressCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<learningProgressFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: LearningProgressCountAggregateInputType | true
    }

  export interface learningProgressDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['learningProgress'], meta: { name: 'learningProgress' } }
    /**
     * Find zero or one LearningProgress that matches the filter.
     * @param {learningProgressFindUniqueArgs} args - Arguments to find a LearningProgress
     * @example
     * // Get one LearningProgress
     * const learningProgress = await prisma.learningProgress.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends learningProgressFindUniqueArgs>(args: SelectSubset<T, learningProgressFindUniqueArgs<ExtArgs>>): Prisma__learningProgressClient<$Result.GetResult<Prisma.$learningProgressPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one LearningProgress that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {learningProgressFindUniqueOrThrowArgs} args - Arguments to find a LearningProgress
     * @example
     * // Get one LearningProgress
     * const learningProgress = await prisma.learningProgress.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends learningProgressFindUniqueOrThrowArgs>(args: SelectSubset<T, learningProgressFindUniqueOrThrowArgs<ExtArgs>>): Prisma__learningProgressClient<$Result.GetResult<Prisma.$learningProgressPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first LearningProgress that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {learningProgressFindFirstArgs} args - Arguments to find a LearningProgress
     * @example
     * // Get one LearningProgress
     * const learningProgress = await prisma.learningProgress.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends learningProgressFindFirstArgs>(args?: SelectSubset<T, learningProgressFindFirstArgs<ExtArgs>>): Prisma__learningProgressClient<$Result.GetResult<Prisma.$learningProgressPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first LearningProgress that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {learningProgressFindFirstOrThrowArgs} args - Arguments to find a LearningProgress
     * @example
     * // Get one LearningProgress
     * const learningProgress = await prisma.learningProgress.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends learningProgressFindFirstOrThrowArgs>(args?: SelectSubset<T, learningProgressFindFirstOrThrowArgs<ExtArgs>>): Prisma__learningProgressClient<$Result.GetResult<Prisma.$learningProgressPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more LearningProgresses that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {learningProgressFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all LearningProgresses
     * const learningProgresses = await prisma.learningProgress.findMany()
     * 
     * // Get first 10 LearningProgresses
     * const learningProgresses = await prisma.learningProgress.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const learningProgressWithIdOnly = await prisma.learningProgress.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends learningProgressFindManyArgs>(args?: SelectSubset<T, learningProgressFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$learningProgressPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a LearningProgress.
     * @param {learningProgressCreateArgs} args - Arguments to create a LearningProgress.
     * @example
     * // Create one LearningProgress
     * const LearningProgress = await prisma.learningProgress.create({
     *   data: {
     *     // ... data to create a LearningProgress
     *   }
     * })
     * 
     */
    create<T extends learningProgressCreateArgs>(args: SelectSubset<T, learningProgressCreateArgs<ExtArgs>>): Prisma__learningProgressClient<$Result.GetResult<Prisma.$learningProgressPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many LearningProgresses.
     * @param {learningProgressCreateManyArgs} args - Arguments to create many LearningProgresses.
     * @example
     * // Create many LearningProgresses
     * const learningProgress = await prisma.learningProgress.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends learningProgressCreateManyArgs>(args?: SelectSubset<T, learningProgressCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many LearningProgresses and returns the data saved in the database.
     * @param {learningProgressCreateManyAndReturnArgs} args - Arguments to create many LearningProgresses.
     * @example
     * // Create many LearningProgresses
     * const learningProgress = await prisma.learningProgress.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many LearningProgresses and only return the `id`
     * const learningProgressWithIdOnly = await prisma.learningProgress.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends learningProgressCreateManyAndReturnArgs>(args?: SelectSubset<T, learningProgressCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$learningProgressPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a LearningProgress.
     * @param {learningProgressDeleteArgs} args - Arguments to delete one LearningProgress.
     * @example
     * // Delete one LearningProgress
     * const LearningProgress = await prisma.learningProgress.delete({
     *   where: {
     *     // ... filter to delete one LearningProgress
     *   }
     * })
     * 
     */
    delete<T extends learningProgressDeleteArgs>(args: SelectSubset<T, learningProgressDeleteArgs<ExtArgs>>): Prisma__learningProgressClient<$Result.GetResult<Prisma.$learningProgressPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one LearningProgress.
     * @param {learningProgressUpdateArgs} args - Arguments to update one LearningProgress.
     * @example
     * // Update one LearningProgress
     * const learningProgress = await prisma.learningProgress.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends learningProgressUpdateArgs>(args: SelectSubset<T, learningProgressUpdateArgs<ExtArgs>>): Prisma__learningProgressClient<$Result.GetResult<Prisma.$learningProgressPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more LearningProgresses.
     * @param {learningProgressDeleteManyArgs} args - Arguments to filter LearningProgresses to delete.
     * @example
     * // Delete a few LearningProgresses
     * const { count } = await prisma.learningProgress.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends learningProgressDeleteManyArgs>(args?: SelectSubset<T, learningProgressDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more LearningProgresses.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {learningProgressUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many LearningProgresses
     * const learningProgress = await prisma.learningProgress.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends learningProgressUpdateManyArgs>(args: SelectSubset<T, learningProgressUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more LearningProgresses and returns the data updated in the database.
     * @param {learningProgressUpdateManyAndReturnArgs} args - Arguments to update many LearningProgresses.
     * @example
     * // Update many LearningProgresses
     * const learningProgress = await prisma.learningProgress.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more LearningProgresses and only return the `id`
     * const learningProgressWithIdOnly = await prisma.learningProgress.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends learningProgressUpdateManyAndReturnArgs>(args: SelectSubset<T, learningProgressUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$learningProgressPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one LearningProgress.
     * @param {learningProgressUpsertArgs} args - Arguments to update or create a LearningProgress.
     * @example
     * // Update or create a LearningProgress
     * const learningProgress = await prisma.learningProgress.upsert({
     *   create: {
     *     // ... data to create a LearningProgress
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the LearningProgress we want to update
     *   }
     * })
     */
    upsert<T extends learningProgressUpsertArgs>(args: SelectSubset<T, learningProgressUpsertArgs<ExtArgs>>): Prisma__learningProgressClient<$Result.GetResult<Prisma.$learningProgressPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of LearningProgresses.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {learningProgressCountArgs} args - Arguments to filter LearningProgresses to count.
     * @example
     * // Count the number of LearningProgresses
     * const count = await prisma.learningProgress.count({
     *   where: {
     *     // ... the filter for the LearningProgresses we want to count
     *   }
     * })
    **/
    count<T extends learningProgressCountArgs>(
      args?: Subset<T, learningProgressCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], LearningProgressCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a LearningProgress.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {LearningProgressAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends LearningProgressAggregateArgs>(args: Subset<T, LearningProgressAggregateArgs>): Prisma.PrismaPromise<GetLearningProgressAggregateType<T>>

    /**
     * Group by LearningProgress.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {learningProgressGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends learningProgressGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: learningProgressGroupByArgs['orderBy'] }
        : { orderBy?: learningProgressGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, learningProgressGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetLearningProgressGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the learningProgress model
   */
  readonly fields: learningProgressFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for learningProgress.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__learningProgressClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    user<T extends userDefaultArgs<ExtArgs> = {}>(args?: Subset<T, userDefaultArgs<ExtArgs>>): Prisma__userClient<$Result.GetResult<Prisma.$userPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    language<T extends languagesDefaultArgs<ExtArgs> = {}>(args?: Subset<T, languagesDefaultArgs<ExtArgs>>): Prisma__languagesClient<$Result.GetResult<Prisma.$languagesPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the learningProgress model
   */
  interface learningProgressFieldRefs {
    readonly id: FieldRef<"learningProgress", 'String'>
    readonly userid: FieldRef<"learningProgress", 'String'>
    readonly languageID: FieldRef<"learningProgress", 'String'>
    readonly progress: FieldRef<"learningProgress", 'Int'>
    readonly createdat: FieldRef<"learningProgress", 'DateTime'>
    readonly updatedat: FieldRef<"learningProgress", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * learningProgress findUnique
   */
  export type learningProgressFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the learningProgress
     */
    select?: learningProgressSelect<ExtArgs> | null
    /**
     * Omit specific fields from the learningProgress
     */
    omit?: learningProgressOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: learningProgressInclude<ExtArgs> | null
    /**
     * Filter, which learningProgress to fetch.
     */
    where: learningProgressWhereUniqueInput
  }

  /**
   * learningProgress findUniqueOrThrow
   */
  export type learningProgressFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the learningProgress
     */
    select?: learningProgressSelect<ExtArgs> | null
    /**
     * Omit specific fields from the learningProgress
     */
    omit?: learningProgressOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: learningProgressInclude<ExtArgs> | null
    /**
     * Filter, which learningProgress to fetch.
     */
    where: learningProgressWhereUniqueInput
  }

  /**
   * learningProgress findFirst
   */
  export type learningProgressFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the learningProgress
     */
    select?: learningProgressSelect<ExtArgs> | null
    /**
     * Omit specific fields from the learningProgress
     */
    omit?: learningProgressOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: learningProgressInclude<ExtArgs> | null
    /**
     * Filter, which learningProgress to fetch.
     */
    where?: learningProgressWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of learningProgresses to fetch.
     */
    orderBy?: learningProgressOrderByWithRelationInput | learningProgressOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for learningProgresses.
     */
    cursor?: learningProgressWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` learningProgresses from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` learningProgresses.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of learningProgresses.
     */
    distinct?: LearningProgressScalarFieldEnum | LearningProgressScalarFieldEnum[]
  }

  /**
   * learningProgress findFirstOrThrow
   */
  export type learningProgressFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the learningProgress
     */
    select?: learningProgressSelect<ExtArgs> | null
    /**
     * Omit specific fields from the learningProgress
     */
    omit?: learningProgressOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: learningProgressInclude<ExtArgs> | null
    /**
     * Filter, which learningProgress to fetch.
     */
    where?: learningProgressWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of learningProgresses to fetch.
     */
    orderBy?: learningProgressOrderByWithRelationInput | learningProgressOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for learningProgresses.
     */
    cursor?: learningProgressWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` learningProgresses from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` learningProgresses.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of learningProgresses.
     */
    distinct?: LearningProgressScalarFieldEnum | LearningProgressScalarFieldEnum[]
  }

  /**
   * learningProgress findMany
   */
  export type learningProgressFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the learningProgress
     */
    select?: learningProgressSelect<ExtArgs> | null
    /**
     * Omit specific fields from the learningProgress
     */
    omit?: learningProgressOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: learningProgressInclude<ExtArgs> | null
    /**
     * Filter, which learningProgresses to fetch.
     */
    where?: learningProgressWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of learningProgresses to fetch.
     */
    orderBy?: learningProgressOrderByWithRelationInput | learningProgressOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing learningProgresses.
     */
    cursor?: learningProgressWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` learningProgresses from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` learningProgresses.
     */
    skip?: number
    distinct?: LearningProgressScalarFieldEnum | LearningProgressScalarFieldEnum[]
  }

  /**
   * learningProgress create
   */
  export type learningProgressCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the learningProgress
     */
    select?: learningProgressSelect<ExtArgs> | null
    /**
     * Omit specific fields from the learningProgress
     */
    omit?: learningProgressOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: learningProgressInclude<ExtArgs> | null
    /**
     * The data needed to create a learningProgress.
     */
    data: XOR<learningProgressCreateInput, learningProgressUncheckedCreateInput>
  }

  /**
   * learningProgress createMany
   */
  export type learningProgressCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many learningProgresses.
     */
    data: learningProgressCreateManyInput | learningProgressCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * learningProgress createManyAndReturn
   */
  export type learningProgressCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the learningProgress
     */
    select?: learningProgressSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the learningProgress
     */
    omit?: learningProgressOmit<ExtArgs> | null
    /**
     * The data used to create many learningProgresses.
     */
    data: learningProgressCreateManyInput | learningProgressCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: learningProgressIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * learningProgress update
   */
  export type learningProgressUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the learningProgress
     */
    select?: learningProgressSelect<ExtArgs> | null
    /**
     * Omit specific fields from the learningProgress
     */
    omit?: learningProgressOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: learningProgressInclude<ExtArgs> | null
    /**
     * The data needed to update a learningProgress.
     */
    data: XOR<learningProgressUpdateInput, learningProgressUncheckedUpdateInput>
    /**
     * Choose, which learningProgress to update.
     */
    where: learningProgressWhereUniqueInput
  }

  /**
   * learningProgress updateMany
   */
  export type learningProgressUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update learningProgresses.
     */
    data: XOR<learningProgressUpdateManyMutationInput, learningProgressUncheckedUpdateManyInput>
    /**
     * Filter which learningProgresses to update
     */
    where?: learningProgressWhereInput
    /**
     * Limit how many learningProgresses to update.
     */
    limit?: number
  }

  /**
   * learningProgress updateManyAndReturn
   */
  export type learningProgressUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the learningProgress
     */
    select?: learningProgressSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the learningProgress
     */
    omit?: learningProgressOmit<ExtArgs> | null
    /**
     * The data used to update learningProgresses.
     */
    data: XOR<learningProgressUpdateManyMutationInput, learningProgressUncheckedUpdateManyInput>
    /**
     * Filter which learningProgresses to update
     */
    where?: learningProgressWhereInput
    /**
     * Limit how many learningProgresses to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: learningProgressIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * learningProgress upsert
   */
  export type learningProgressUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the learningProgress
     */
    select?: learningProgressSelect<ExtArgs> | null
    /**
     * Omit specific fields from the learningProgress
     */
    omit?: learningProgressOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: learningProgressInclude<ExtArgs> | null
    /**
     * The filter to search for the learningProgress to update in case it exists.
     */
    where: learningProgressWhereUniqueInput
    /**
     * In case the learningProgress found by the `where` argument doesn't exist, create a new learningProgress with this data.
     */
    create: XOR<learningProgressCreateInput, learningProgressUncheckedCreateInput>
    /**
     * In case the learningProgress was found with the provided `where` argument, update it with this data.
     */
    update: XOR<learningProgressUpdateInput, learningProgressUncheckedUpdateInput>
  }

  /**
   * learningProgress delete
   */
  export type learningProgressDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the learningProgress
     */
    select?: learningProgressSelect<ExtArgs> | null
    /**
     * Omit specific fields from the learningProgress
     */
    omit?: learningProgressOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: learningProgressInclude<ExtArgs> | null
    /**
     * Filter which learningProgress to delete.
     */
    where: learningProgressWhereUniqueInput
  }

  /**
   * learningProgress deleteMany
   */
  export type learningProgressDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which learningProgresses to delete
     */
    where?: learningProgressWhereInput
    /**
     * Limit how many learningProgresses to delete.
     */
    limit?: number
  }

  /**
   * learningProgress without action
   */
  export type learningProgressDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the learningProgress
     */
    select?: learningProgressSelect<ExtArgs> | null
    /**
     * Omit specific fields from the learningProgress
     */
    omit?: learningProgressOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: learningProgressInclude<ExtArgs> | null
  }


  /**
   * Model languages
   */

  export type AggregateLanguages = {
    _count: LanguagesCountAggregateOutputType | null
    _min: LanguagesMinAggregateOutputType | null
    _max: LanguagesMaxAggregateOutputType | null
  }

  export type LanguagesMinAggregateOutputType = {
    id: string | null
    flag: string | null
    name: string | null
    code: string | null
  }

  export type LanguagesMaxAggregateOutputType = {
    id: string | null
    flag: string | null
    name: string | null
    code: string | null
  }

  export type LanguagesCountAggregateOutputType = {
    id: number
    flag: number
    name: number
    code: number
    _all: number
  }


  export type LanguagesMinAggregateInputType = {
    id?: true
    flag?: true
    name?: true
    code?: true
  }

  export type LanguagesMaxAggregateInputType = {
    id?: true
    flag?: true
    name?: true
    code?: true
  }

  export type LanguagesCountAggregateInputType = {
    id?: true
    flag?: true
    name?: true
    code?: true
    _all?: true
  }

  export type LanguagesAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which languages to aggregate.
     */
    where?: languagesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of languages to fetch.
     */
    orderBy?: languagesOrderByWithRelationInput | languagesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: languagesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` languages from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` languages.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned languages
    **/
    _count?: true | LanguagesCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: LanguagesMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: LanguagesMaxAggregateInputType
  }

  export type GetLanguagesAggregateType<T extends LanguagesAggregateArgs> = {
        [P in keyof T & keyof AggregateLanguages]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateLanguages[P]>
      : GetScalarType<T[P], AggregateLanguages[P]>
  }




  export type languagesGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: languagesWhereInput
    orderBy?: languagesOrderByWithAggregationInput | languagesOrderByWithAggregationInput[]
    by: LanguagesScalarFieldEnum[] | LanguagesScalarFieldEnum
    having?: languagesScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: LanguagesCountAggregateInputType | true
    _min?: LanguagesMinAggregateInputType
    _max?: LanguagesMaxAggregateInputType
  }

  export type LanguagesGroupByOutputType = {
    id: string
    flag: string
    name: string
    code: string
    _count: LanguagesCountAggregateOutputType | null
    _min: LanguagesMinAggregateOutputType | null
    _max: LanguagesMaxAggregateOutputType | null
  }

  type GetLanguagesGroupByPayload<T extends languagesGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<LanguagesGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof LanguagesGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], LanguagesGroupByOutputType[P]>
            : GetScalarType<T[P], LanguagesGroupByOutputType[P]>
        }
      >
    >


  export type languagesSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    flag?: boolean
    name?: boolean
    code?: boolean
    learningProgress?: boolean | languages$learningProgressArgs<ExtArgs>
    user?: boolean | languages$userArgs<ExtArgs>
    _count?: boolean | LanguagesCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["languages"]>

  export type languagesSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    flag?: boolean
    name?: boolean
    code?: boolean
  }, ExtArgs["result"]["languages"]>

  export type languagesSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    flag?: boolean
    name?: boolean
    code?: boolean
  }, ExtArgs["result"]["languages"]>

  export type languagesSelectScalar = {
    id?: boolean
    flag?: boolean
    name?: boolean
    code?: boolean
  }

  export type languagesOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "flag" | "name" | "code", ExtArgs["result"]["languages"]>
  export type languagesInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    learningProgress?: boolean | languages$learningProgressArgs<ExtArgs>
    user?: boolean | languages$userArgs<ExtArgs>
    _count?: boolean | LanguagesCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type languagesIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}
  export type languagesIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}

  export type $languagesPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "languages"
    objects: {
      learningProgress: Prisma.$learningProgressPayload<ExtArgs>[]
      user: Prisma.$userPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      flag: string
      name: string
      code: string
    }, ExtArgs["result"]["languages"]>
    composites: {}
  }

  type languagesGetPayload<S extends boolean | null | undefined | languagesDefaultArgs> = $Result.GetResult<Prisma.$languagesPayload, S>

  type languagesCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<languagesFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: LanguagesCountAggregateInputType | true
    }

  export interface languagesDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['languages'], meta: { name: 'languages' } }
    /**
     * Find zero or one Languages that matches the filter.
     * @param {languagesFindUniqueArgs} args - Arguments to find a Languages
     * @example
     * // Get one Languages
     * const languages = await prisma.languages.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends languagesFindUniqueArgs>(args: SelectSubset<T, languagesFindUniqueArgs<ExtArgs>>): Prisma__languagesClient<$Result.GetResult<Prisma.$languagesPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Languages that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {languagesFindUniqueOrThrowArgs} args - Arguments to find a Languages
     * @example
     * // Get one Languages
     * const languages = await prisma.languages.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends languagesFindUniqueOrThrowArgs>(args: SelectSubset<T, languagesFindUniqueOrThrowArgs<ExtArgs>>): Prisma__languagesClient<$Result.GetResult<Prisma.$languagesPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Languages that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {languagesFindFirstArgs} args - Arguments to find a Languages
     * @example
     * // Get one Languages
     * const languages = await prisma.languages.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends languagesFindFirstArgs>(args?: SelectSubset<T, languagesFindFirstArgs<ExtArgs>>): Prisma__languagesClient<$Result.GetResult<Prisma.$languagesPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Languages that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {languagesFindFirstOrThrowArgs} args - Arguments to find a Languages
     * @example
     * // Get one Languages
     * const languages = await prisma.languages.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends languagesFindFirstOrThrowArgs>(args?: SelectSubset<T, languagesFindFirstOrThrowArgs<ExtArgs>>): Prisma__languagesClient<$Result.GetResult<Prisma.$languagesPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Languages that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {languagesFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Languages
     * const languages = await prisma.languages.findMany()
     * 
     * // Get first 10 Languages
     * const languages = await prisma.languages.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const languagesWithIdOnly = await prisma.languages.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends languagesFindManyArgs>(args?: SelectSubset<T, languagesFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$languagesPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Languages.
     * @param {languagesCreateArgs} args - Arguments to create a Languages.
     * @example
     * // Create one Languages
     * const Languages = await prisma.languages.create({
     *   data: {
     *     // ... data to create a Languages
     *   }
     * })
     * 
     */
    create<T extends languagesCreateArgs>(args: SelectSubset<T, languagesCreateArgs<ExtArgs>>): Prisma__languagesClient<$Result.GetResult<Prisma.$languagesPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Languages.
     * @param {languagesCreateManyArgs} args - Arguments to create many Languages.
     * @example
     * // Create many Languages
     * const languages = await prisma.languages.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends languagesCreateManyArgs>(args?: SelectSubset<T, languagesCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Languages and returns the data saved in the database.
     * @param {languagesCreateManyAndReturnArgs} args - Arguments to create many Languages.
     * @example
     * // Create many Languages
     * const languages = await prisma.languages.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Languages and only return the `id`
     * const languagesWithIdOnly = await prisma.languages.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends languagesCreateManyAndReturnArgs>(args?: SelectSubset<T, languagesCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$languagesPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Languages.
     * @param {languagesDeleteArgs} args - Arguments to delete one Languages.
     * @example
     * // Delete one Languages
     * const Languages = await prisma.languages.delete({
     *   where: {
     *     // ... filter to delete one Languages
     *   }
     * })
     * 
     */
    delete<T extends languagesDeleteArgs>(args: SelectSubset<T, languagesDeleteArgs<ExtArgs>>): Prisma__languagesClient<$Result.GetResult<Prisma.$languagesPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Languages.
     * @param {languagesUpdateArgs} args - Arguments to update one Languages.
     * @example
     * // Update one Languages
     * const languages = await prisma.languages.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends languagesUpdateArgs>(args: SelectSubset<T, languagesUpdateArgs<ExtArgs>>): Prisma__languagesClient<$Result.GetResult<Prisma.$languagesPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Languages.
     * @param {languagesDeleteManyArgs} args - Arguments to filter Languages to delete.
     * @example
     * // Delete a few Languages
     * const { count } = await prisma.languages.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends languagesDeleteManyArgs>(args?: SelectSubset<T, languagesDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Languages.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {languagesUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Languages
     * const languages = await prisma.languages.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends languagesUpdateManyArgs>(args: SelectSubset<T, languagesUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Languages and returns the data updated in the database.
     * @param {languagesUpdateManyAndReturnArgs} args - Arguments to update many Languages.
     * @example
     * // Update many Languages
     * const languages = await prisma.languages.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Languages and only return the `id`
     * const languagesWithIdOnly = await prisma.languages.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends languagesUpdateManyAndReturnArgs>(args: SelectSubset<T, languagesUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$languagesPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Languages.
     * @param {languagesUpsertArgs} args - Arguments to update or create a Languages.
     * @example
     * // Update or create a Languages
     * const languages = await prisma.languages.upsert({
     *   create: {
     *     // ... data to create a Languages
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Languages we want to update
     *   }
     * })
     */
    upsert<T extends languagesUpsertArgs>(args: SelectSubset<T, languagesUpsertArgs<ExtArgs>>): Prisma__languagesClient<$Result.GetResult<Prisma.$languagesPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Languages.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {languagesCountArgs} args - Arguments to filter Languages to count.
     * @example
     * // Count the number of Languages
     * const count = await prisma.languages.count({
     *   where: {
     *     // ... the filter for the Languages we want to count
     *   }
     * })
    **/
    count<T extends languagesCountArgs>(
      args?: Subset<T, languagesCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], LanguagesCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Languages.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {LanguagesAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends LanguagesAggregateArgs>(args: Subset<T, LanguagesAggregateArgs>): Prisma.PrismaPromise<GetLanguagesAggregateType<T>>

    /**
     * Group by Languages.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {languagesGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends languagesGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: languagesGroupByArgs['orderBy'] }
        : { orderBy?: languagesGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, languagesGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetLanguagesGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the languages model
   */
  readonly fields: languagesFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for languages.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__languagesClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    learningProgress<T extends languages$learningProgressArgs<ExtArgs> = {}>(args?: Subset<T, languages$learningProgressArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$learningProgressPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    user<T extends languages$userArgs<ExtArgs> = {}>(args?: Subset<T, languages$userArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$userPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the languages model
   */
  interface languagesFieldRefs {
    readonly id: FieldRef<"languages", 'String'>
    readonly flag: FieldRef<"languages", 'String'>
    readonly name: FieldRef<"languages", 'String'>
    readonly code: FieldRef<"languages", 'String'>
  }
    

  // Custom InputTypes
  /**
   * languages findUnique
   */
  export type languagesFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the languages
     */
    select?: languagesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the languages
     */
    omit?: languagesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: languagesInclude<ExtArgs> | null
    /**
     * Filter, which languages to fetch.
     */
    where: languagesWhereUniqueInput
  }

  /**
   * languages findUniqueOrThrow
   */
  export type languagesFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the languages
     */
    select?: languagesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the languages
     */
    omit?: languagesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: languagesInclude<ExtArgs> | null
    /**
     * Filter, which languages to fetch.
     */
    where: languagesWhereUniqueInput
  }

  /**
   * languages findFirst
   */
  export type languagesFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the languages
     */
    select?: languagesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the languages
     */
    omit?: languagesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: languagesInclude<ExtArgs> | null
    /**
     * Filter, which languages to fetch.
     */
    where?: languagesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of languages to fetch.
     */
    orderBy?: languagesOrderByWithRelationInput | languagesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for languages.
     */
    cursor?: languagesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` languages from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` languages.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of languages.
     */
    distinct?: LanguagesScalarFieldEnum | LanguagesScalarFieldEnum[]
  }

  /**
   * languages findFirstOrThrow
   */
  export type languagesFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the languages
     */
    select?: languagesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the languages
     */
    omit?: languagesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: languagesInclude<ExtArgs> | null
    /**
     * Filter, which languages to fetch.
     */
    where?: languagesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of languages to fetch.
     */
    orderBy?: languagesOrderByWithRelationInput | languagesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for languages.
     */
    cursor?: languagesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` languages from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` languages.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of languages.
     */
    distinct?: LanguagesScalarFieldEnum | LanguagesScalarFieldEnum[]
  }

  /**
   * languages findMany
   */
  export type languagesFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the languages
     */
    select?: languagesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the languages
     */
    omit?: languagesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: languagesInclude<ExtArgs> | null
    /**
     * Filter, which languages to fetch.
     */
    where?: languagesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of languages to fetch.
     */
    orderBy?: languagesOrderByWithRelationInput | languagesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing languages.
     */
    cursor?: languagesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` languages from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` languages.
     */
    skip?: number
    distinct?: LanguagesScalarFieldEnum | LanguagesScalarFieldEnum[]
  }

  /**
   * languages create
   */
  export type languagesCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the languages
     */
    select?: languagesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the languages
     */
    omit?: languagesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: languagesInclude<ExtArgs> | null
    /**
     * The data needed to create a languages.
     */
    data: XOR<languagesCreateInput, languagesUncheckedCreateInput>
  }

  /**
   * languages createMany
   */
  export type languagesCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many languages.
     */
    data: languagesCreateManyInput | languagesCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * languages createManyAndReturn
   */
  export type languagesCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the languages
     */
    select?: languagesSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the languages
     */
    omit?: languagesOmit<ExtArgs> | null
    /**
     * The data used to create many languages.
     */
    data: languagesCreateManyInput | languagesCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * languages update
   */
  export type languagesUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the languages
     */
    select?: languagesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the languages
     */
    omit?: languagesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: languagesInclude<ExtArgs> | null
    /**
     * The data needed to update a languages.
     */
    data: XOR<languagesUpdateInput, languagesUncheckedUpdateInput>
    /**
     * Choose, which languages to update.
     */
    where: languagesWhereUniqueInput
  }

  /**
   * languages updateMany
   */
  export type languagesUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update languages.
     */
    data: XOR<languagesUpdateManyMutationInput, languagesUncheckedUpdateManyInput>
    /**
     * Filter which languages to update
     */
    where?: languagesWhereInput
    /**
     * Limit how many languages to update.
     */
    limit?: number
  }

  /**
   * languages updateManyAndReturn
   */
  export type languagesUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the languages
     */
    select?: languagesSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the languages
     */
    omit?: languagesOmit<ExtArgs> | null
    /**
     * The data used to update languages.
     */
    data: XOR<languagesUpdateManyMutationInput, languagesUncheckedUpdateManyInput>
    /**
     * Filter which languages to update
     */
    where?: languagesWhereInput
    /**
     * Limit how many languages to update.
     */
    limit?: number
  }

  /**
   * languages upsert
   */
  export type languagesUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the languages
     */
    select?: languagesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the languages
     */
    omit?: languagesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: languagesInclude<ExtArgs> | null
    /**
     * The filter to search for the languages to update in case it exists.
     */
    where: languagesWhereUniqueInput
    /**
     * In case the languages found by the `where` argument doesn't exist, create a new languages with this data.
     */
    create: XOR<languagesCreateInput, languagesUncheckedCreateInput>
    /**
     * In case the languages was found with the provided `where` argument, update it with this data.
     */
    update: XOR<languagesUpdateInput, languagesUncheckedUpdateInput>
  }

  /**
   * languages delete
   */
  export type languagesDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the languages
     */
    select?: languagesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the languages
     */
    omit?: languagesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: languagesInclude<ExtArgs> | null
    /**
     * Filter which languages to delete.
     */
    where: languagesWhereUniqueInput
  }

  /**
   * languages deleteMany
   */
  export type languagesDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which languages to delete
     */
    where?: languagesWhereInput
    /**
     * Limit how many languages to delete.
     */
    limit?: number
  }

  /**
   * languages.learningProgress
   */
  export type languages$learningProgressArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the learningProgress
     */
    select?: learningProgressSelect<ExtArgs> | null
    /**
     * Omit specific fields from the learningProgress
     */
    omit?: learningProgressOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: learningProgressInclude<ExtArgs> | null
    where?: learningProgressWhereInput
    orderBy?: learningProgressOrderByWithRelationInput | learningProgressOrderByWithRelationInput[]
    cursor?: learningProgressWhereUniqueInput
    take?: number
    skip?: number
    distinct?: LearningProgressScalarFieldEnum | LearningProgressScalarFieldEnum[]
  }

  /**
   * languages.user
   */
  export type languages$userArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user
     */
    select?: userSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user
     */
    omit?: userOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: userInclude<ExtArgs> | null
    where?: userWhereInput
    orderBy?: userOrderByWithRelationInput | userOrderByWithRelationInput[]
    cursor?: userWhereUniqueInput
    take?: number
    skip?: number
    distinct?: UserScalarFieldEnum | UserScalarFieldEnum[]
  }

  /**
   * languages without action
   */
  export type languagesDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the languages
     */
    select?: languagesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the languages
     */
    omit?: languagesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: languagesInclude<ExtArgs> | null
  }


  /**
   * Model entrance
   */

  export type AggregateEntrance = {
    _count: EntranceCountAggregateOutputType | null
    _avg: EntranceAvgAggregateOutputType | null
    _sum: EntranceSumAggregateOutputType | null
    _min: EntranceMinAggregateOutputType | null
    _max: EntranceMaxAggregateOutputType | null
  }

  export type EntranceAvgAggregateOutputType = {
    type: number | null
  }

  export type EntranceSumAggregateOutputType = {
    type: number | null
  }

  export type EntranceMinAggregateOutputType = {
    id: string | null
    type: number | null
    useragent: string | null
    ipaddress: string | null
    userid: string | null
    createdat: Date | null
  }

  export type EntranceMaxAggregateOutputType = {
    id: string | null
    type: number | null
    useragent: string | null
    ipaddress: string | null
    userid: string | null
    createdat: Date | null
  }

  export type EntranceCountAggregateOutputType = {
    id: number
    type: number
    useragent: number
    ipaddress: number
    userid: number
    createdat: number
    _all: number
  }


  export type EntranceAvgAggregateInputType = {
    type?: true
  }

  export type EntranceSumAggregateInputType = {
    type?: true
  }

  export type EntranceMinAggregateInputType = {
    id?: true
    type?: true
    useragent?: true
    ipaddress?: true
    userid?: true
    createdat?: true
  }

  export type EntranceMaxAggregateInputType = {
    id?: true
    type?: true
    useragent?: true
    ipaddress?: true
    userid?: true
    createdat?: true
  }

  export type EntranceCountAggregateInputType = {
    id?: true
    type?: true
    useragent?: true
    ipaddress?: true
    userid?: true
    createdat?: true
    _all?: true
  }

  export type EntranceAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which entrance to aggregate.
     */
    where?: entranceWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of entrances to fetch.
     */
    orderBy?: entranceOrderByWithRelationInput | entranceOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: entranceWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` entrances from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` entrances.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned entrances
    **/
    _count?: true | EntranceCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: EntranceAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: EntranceSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: EntranceMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: EntranceMaxAggregateInputType
  }

  export type GetEntranceAggregateType<T extends EntranceAggregateArgs> = {
        [P in keyof T & keyof AggregateEntrance]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateEntrance[P]>
      : GetScalarType<T[P], AggregateEntrance[P]>
  }




  export type entranceGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: entranceWhereInput
    orderBy?: entranceOrderByWithAggregationInput | entranceOrderByWithAggregationInput[]
    by: EntranceScalarFieldEnum[] | EntranceScalarFieldEnum
    having?: entranceScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: EntranceCountAggregateInputType | true
    _avg?: EntranceAvgAggregateInputType
    _sum?: EntranceSumAggregateInputType
    _min?: EntranceMinAggregateInputType
    _max?: EntranceMaxAggregateInputType
  }

  export type EntranceGroupByOutputType = {
    id: string
    type: number
    useragent: string
    ipaddress: string
    userid: string
    createdat: Date
    _count: EntranceCountAggregateOutputType | null
    _avg: EntranceAvgAggregateOutputType | null
    _sum: EntranceSumAggregateOutputType | null
    _min: EntranceMinAggregateOutputType | null
    _max: EntranceMaxAggregateOutputType | null
  }

  type GetEntranceGroupByPayload<T extends entranceGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<EntranceGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof EntranceGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], EntranceGroupByOutputType[P]>
            : GetScalarType<T[P], EntranceGroupByOutputType[P]>
        }
      >
    >


  export type entranceSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    type?: boolean
    useragent?: boolean
    ipaddress?: boolean
    userid?: boolean
    createdat?: boolean
  }, ExtArgs["result"]["entrance"]>

  export type entranceSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    type?: boolean
    useragent?: boolean
    ipaddress?: boolean
    userid?: boolean
    createdat?: boolean
  }, ExtArgs["result"]["entrance"]>

  export type entranceSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    type?: boolean
    useragent?: boolean
    ipaddress?: boolean
    userid?: boolean
    createdat?: boolean
  }, ExtArgs["result"]["entrance"]>

  export type entranceSelectScalar = {
    id?: boolean
    type?: boolean
    useragent?: boolean
    ipaddress?: boolean
    userid?: boolean
    createdat?: boolean
  }

  export type entranceOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "type" | "useragent" | "ipaddress" | "userid" | "createdat", ExtArgs["result"]["entrance"]>

  export type $entrancePayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "entrance"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      id: string
      type: number
      useragent: string
      ipaddress: string
      userid: string
      createdat: Date
    }, ExtArgs["result"]["entrance"]>
    composites: {}
  }

  type entranceGetPayload<S extends boolean | null | undefined | entranceDefaultArgs> = $Result.GetResult<Prisma.$entrancePayload, S>

  type entranceCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<entranceFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: EntranceCountAggregateInputType | true
    }

  export interface entranceDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['entrance'], meta: { name: 'entrance' } }
    /**
     * Find zero or one Entrance that matches the filter.
     * @param {entranceFindUniqueArgs} args - Arguments to find a Entrance
     * @example
     * // Get one Entrance
     * const entrance = await prisma.entrance.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends entranceFindUniqueArgs>(args: SelectSubset<T, entranceFindUniqueArgs<ExtArgs>>): Prisma__entranceClient<$Result.GetResult<Prisma.$entrancePayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Entrance that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {entranceFindUniqueOrThrowArgs} args - Arguments to find a Entrance
     * @example
     * // Get one Entrance
     * const entrance = await prisma.entrance.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends entranceFindUniqueOrThrowArgs>(args: SelectSubset<T, entranceFindUniqueOrThrowArgs<ExtArgs>>): Prisma__entranceClient<$Result.GetResult<Prisma.$entrancePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Entrance that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {entranceFindFirstArgs} args - Arguments to find a Entrance
     * @example
     * // Get one Entrance
     * const entrance = await prisma.entrance.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends entranceFindFirstArgs>(args?: SelectSubset<T, entranceFindFirstArgs<ExtArgs>>): Prisma__entranceClient<$Result.GetResult<Prisma.$entrancePayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Entrance that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {entranceFindFirstOrThrowArgs} args - Arguments to find a Entrance
     * @example
     * // Get one Entrance
     * const entrance = await prisma.entrance.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends entranceFindFirstOrThrowArgs>(args?: SelectSubset<T, entranceFindFirstOrThrowArgs<ExtArgs>>): Prisma__entranceClient<$Result.GetResult<Prisma.$entrancePayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Entrances that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {entranceFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Entrances
     * const entrances = await prisma.entrance.findMany()
     * 
     * // Get first 10 Entrances
     * const entrances = await prisma.entrance.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const entranceWithIdOnly = await prisma.entrance.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends entranceFindManyArgs>(args?: SelectSubset<T, entranceFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$entrancePayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Entrance.
     * @param {entranceCreateArgs} args - Arguments to create a Entrance.
     * @example
     * // Create one Entrance
     * const Entrance = await prisma.entrance.create({
     *   data: {
     *     // ... data to create a Entrance
     *   }
     * })
     * 
     */
    create<T extends entranceCreateArgs>(args: SelectSubset<T, entranceCreateArgs<ExtArgs>>): Prisma__entranceClient<$Result.GetResult<Prisma.$entrancePayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Entrances.
     * @param {entranceCreateManyArgs} args - Arguments to create many Entrances.
     * @example
     * // Create many Entrances
     * const entrance = await prisma.entrance.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends entranceCreateManyArgs>(args?: SelectSubset<T, entranceCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Entrances and returns the data saved in the database.
     * @param {entranceCreateManyAndReturnArgs} args - Arguments to create many Entrances.
     * @example
     * // Create many Entrances
     * const entrance = await prisma.entrance.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Entrances and only return the `id`
     * const entranceWithIdOnly = await prisma.entrance.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends entranceCreateManyAndReturnArgs>(args?: SelectSubset<T, entranceCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$entrancePayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Entrance.
     * @param {entranceDeleteArgs} args - Arguments to delete one Entrance.
     * @example
     * // Delete one Entrance
     * const Entrance = await prisma.entrance.delete({
     *   where: {
     *     // ... filter to delete one Entrance
     *   }
     * })
     * 
     */
    delete<T extends entranceDeleteArgs>(args: SelectSubset<T, entranceDeleteArgs<ExtArgs>>): Prisma__entranceClient<$Result.GetResult<Prisma.$entrancePayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Entrance.
     * @param {entranceUpdateArgs} args - Arguments to update one Entrance.
     * @example
     * // Update one Entrance
     * const entrance = await prisma.entrance.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends entranceUpdateArgs>(args: SelectSubset<T, entranceUpdateArgs<ExtArgs>>): Prisma__entranceClient<$Result.GetResult<Prisma.$entrancePayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Entrances.
     * @param {entranceDeleteManyArgs} args - Arguments to filter Entrances to delete.
     * @example
     * // Delete a few Entrances
     * const { count } = await prisma.entrance.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends entranceDeleteManyArgs>(args?: SelectSubset<T, entranceDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Entrances.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {entranceUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Entrances
     * const entrance = await prisma.entrance.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends entranceUpdateManyArgs>(args: SelectSubset<T, entranceUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Entrances and returns the data updated in the database.
     * @param {entranceUpdateManyAndReturnArgs} args - Arguments to update many Entrances.
     * @example
     * // Update many Entrances
     * const entrance = await prisma.entrance.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Entrances and only return the `id`
     * const entranceWithIdOnly = await prisma.entrance.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends entranceUpdateManyAndReturnArgs>(args: SelectSubset<T, entranceUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$entrancePayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Entrance.
     * @param {entranceUpsertArgs} args - Arguments to update or create a Entrance.
     * @example
     * // Update or create a Entrance
     * const entrance = await prisma.entrance.upsert({
     *   create: {
     *     // ... data to create a Entrance
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Entrance we want to update
     *   }
     * })
     */
    upsert<T extends entranceUpsertArgs>(args: SelectSubset<T, entranceUpsertArgs<ExtArgs>>): Prisma__entranceClient<$Result.GetResult<Prisma.$entrancePayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Entrances.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {entranceCountArgs} args - Arguments to filter Entrances to count.
     * @example
     * // Count the number of Entrances
     * const count = await prisma.entrance.count({
     *   where: {
     *     // ... the filter for the Entrances we want to count
     *   }
     * })
    **/
    count<T extends entranceCountArgs>(
      args?: Subset<T, entranceCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], EntranceCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Entrance.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EntranceAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends EntranceAggregateArgs>(args: Subset<T, EntranceAggregateArgs>): Prisma.PrismaPromise<GetEntranceAggregateType<T>>

    /**
     * Group by Entrance.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {entranceGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends entranceGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: entranceGroupByArgs['orderBy'] }
        : { orderBy?: entranceGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, entranceGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetEntranceGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the entrance model
   */
  readonly fields: entranceFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for entrance.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__entranceClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the entrance model
   */
  interface entranceFieldRefs {
    readonly id: FieldRef<"entrance", 'String'>
    readonly type: FieldRef<"entrance", 'Int'>
    readonly useragent: FieldRef<"entrance", 'String'>
    readonly ipaddress: FieldRef<"entrance", 'String'>
    readonly userid: FieldRef<"entrance", 'String'>
    readonly createdat: FieldRef<"entrance", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * entrance findUnique
   */
  export type entranceFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the entrance
     */
    select?: entranceSelect<ExtArgs> | null
    /**
     * Omit specific fields from the entrance
     */
    omit?: entranceOmit<ExtArgs> | null
    /**
     * Filter, which entrance to fetch.
     */
    where: entranceWhereUniqueInput
  }

  /**
   * entrance findUniqueOrThrow
   */
  export type entranceFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the entrance
     */
    select?: entranceSelect<ExtArgs> | null
    /**
     * Omit specific fields from the entrance
     */
    omit?: entranceOmit<ExtArgs> | null
    /**
     * Filter, which entrance to fetch.
     */
    where: entranceWhereUniqueInput
  }

  /**
   * entrance findFirst
   */
  export type entranceFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the entrance
     */
    select?: entranceSelect<ExtArgs> | null
    /**
     * Omit specific fields from the entrance
     */
    omit?: entranceOmit<ExtArgs> | null
    /**
     * Filter, which entrance to fetch.
     */
    where?: entranceWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of entrances to fetch.
     */
    orderBy?: entranceOrderByWithRelationInput | entranceOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for entrances.
     */
    cursor?: entranceWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` entrances from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` entrances.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of entrances.
     */
    distinct?: EntranceScalarFieldEnum | EntranceScalarFieldEnum[]
  }

  /**
   * entrance findFirstOrThrow
   */
  export type entranceFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the entrance
     */
    select?: entranceSelect<ExtArgs> | null
    /**
     * Omit specific fields from the entrance
     */
    omit?: entranceOmit<ExtArgs> | null
    /**
     * Filter, which entrance to fetch.
     */
    where?: entranceWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of entrances to fetch.
     */
    orderBy?: entranceOrderByWithRelationInput | entranceOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for entrances.
     */
    cursor?: entranceWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` entrances from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` entrances.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of entrances.
     */
    distinct?: EntranceScalarFieldEnum | EntranceScalarFieldEnum[]
  }

  /**
   * entrance findMany
   */
  export type entranceFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the entrance
     */
    select?: entranceSelect<ExtArgs> | null
    /**
     * Omit specific fields from the entrance
     */
    omit?: entranceOmit<ExtArgs> | null
    /**
     * Filter, which entrances to fetch.
     */
    where?: entranceWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of entrances to fetch.
     */
    orderBy?: entranceOrderByWithRelationInput | entranceOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing entrances.
     */
    cursor?: entranceWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` entrances from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` entrances.
     */
    skip?: number
    distinct?: EntranceScalarFieldEnum | EntranceScalarFieldEnum[]
  }

  /**
   * entrance create
   */
  export type entranceCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the entrance
     */
    select?: entranceSelect<ExtArgs> | null
    /**
     * Omit specific fields from the entrance
     */
    omit?: entranceOmit<ExtArgs> | null
    /**
     * The data needed to create a entrance.
     */
    data: XOR<entranceCreateInput, entranceUncheckedCreateInput>
  }

  /**
   * entrance createMany
   */
  export type entranceCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many entrances.
     */
    data: entranceCreateManyInput | entranceCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * entrance createManyAndReturn
   */
  export type entranceCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the entrance
     */
    select?: entranceSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the entrance
     */
    omit?: entranceOmit<ExtArgs> | null
    /**
     * The data used to create many entrances.
     */
    data: entranceCreateManyInput | entranceCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * entrance update
   */
  export type entranceUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the entrance
     */
    select?: entranceSelect<ExtArgs> | null
    /**
     * Omit specific fields from the entrance
     */
    omit?: entranceOmit<ExtArgs> | null
    /**
     * The data needed to update a entrance.
     */
    data: XOR<entranceUpdateInput, entranceUncheckedUpdateInput>
    /**
     * Choose, which entrance to update.
     */
    where: entranceWhereUniqueInput
  }

  /**
   * entrance updateMany
   */
  export type entranceUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update entrances.
     */
    data: XOR<entranceUpdateManyMutationInput, entranceUncheckedUpdateManyInput>
    /**
     * Filter which entrances to update
     */
    where?: entranceWhereInput
    /**
     * Limit how many entrances to update.
     */
    limit?: number
  }

  /**
   * entrance updateManyAndReturn
   */
  export type entranceUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the entrance
     */
    select?: entranceSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the entrance
     */
    omit?: entranceOmit<ExtArgs> | null
    /**
     * The data used to update entrances.
     */
    data: XOR<entranceUpdateManyMutationInput, entranceUncheckedUpdateManyInput>
    /**
     * Filter which entrances to update
     */
    where?: entranceWhereInput
    /**
     * Limit how many entrances to update.
     */
    limit?: number
  }

  /**
   * entrance upsert
   */
  export type entranceUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the entrance
     */
    select?: entranceSelect<ExtArgs> | null
    /**
     * Omit specific fields from the entrance
     */
    omit?: entranceOmit<ExtArgs> | null
    /**
     * The filter to search for the entrance to update in case it exists.
     */
    where: entranceWhereUniqueInput
    /**
     * In case the entrance found by the `where` argument doesn't exist, create a new entrance with this data.
     */
    create: XOR<entranceCreateInput, entranceUncheckedCreateInput>
    /**
     * In case the entrance was found with the provided `where` argument, update it with this data.
     */
    update: XOR<entranceUpdateInput, entranceUncheckedUpdateInput>
  }

  /**
   * entrance delete
   */
  export type entranceDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the entrance
     */
    select?: entranceSelect<ExtArgs> | null
    /**
     * Omit specific fields from the entrance
     */
    omit?: entranceOmit<ExtArgs> | null
    /**
     * Filter which entrance to delete.
     */
    where: entranceWhereUniqueInput
  }

  /**
   * entrance deleteMany
   */
  export type entranceDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which entrances to delete
     */
    where?: entranceWhereInput
    /**
     * Limit how many entrances to delete.
     */
    limit?: number
  }

  /**
   * entrance without action
   */
  export type entranceDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the entrance
     */
    select?: entranceSelect<ExtArgs> | null
    /**
     * Omit specific fields from the entrance
     */
    omit?: entranceOmit<ExtArgs> | null
  }


  /**
   * Model apiclient
   */

  export type AggregateApiclient = {
    _count: ApiclientCountAggregateOutputType | null
    _avg: ApiclientAvgAggregateOutputType | null
    _sum: ApiclientSumAggregateOutputType | null
    _min: ApiclientMinAggregateOutputType | null
    _max: ApiclientMaxAggregateOutputType | null
  }

  export type ApiclientAvgAggregateOutputType = {
    type: number | null
  }

  export type ApiclientSumAggregateOutputType = {
    type: number | null
  }

  export type ApiclientMinAggregateOutputType = {
    id: string | null
    name: string | null
    key: string | null
    secret: string | null
    type: number | null
    createdat: Date | null
    createdby: string | null
    updatedat: Date | null
    updatedby: string | null
    isactive: boolean | null
  }

  export type ApiclientMaxAggregateOutputType = {
    id: string | null
    name: string | null
    key: string | null
    secret: string | null
    type: number | null
    createdat: Date | null
    createdby: string | null
    updatedat: Date | null
    updatedby: string | null
    isactive: boolean | null
  }

  export type ApiclientCountAggregateOutputType = {
    id: number
    name: number
    key: number
    secret: number
    type: number
    createdat: number
    createdby: number
    updatedat: number
    updatedby: number
    isactive: number
    _all: number
  }


  export type ApiclientAvgAggregateInputType = {
    type?: true
  }

  export type ApiclientSumAggregateInputType = {
    type?: true
  }

  export type ApiclientMinAggregateInputType = {
    id?: true
    name?: true
    key?: true
    secret?: true
    type?: true
    createdat?: true
    createdby?: true
    updatedat?: true
    updatedby?: true
    isactive?: true
  }

  export type ApiclientMaxAggregateInputType = {
    id?: true
    name?: true
    key?: true
    secret?: true
    type?: true
    createdat?: true
    createdby?: true
    updatedat?: true
    updatedby?: true
    isactive?: true
  }

  export type ApiclientCountAggregateInputType = {
    id?: true
    name?: true
    key?: true
    secret?: true
    type?: true
    createdat?: true
    createdby?: true
    updatedat?: true
    updatedby?: true
    isactive?: true
    _all?: true
  }

  export type ApiclientAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which apiclient to aggregate.
     */
    where?: apiclientWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of apiclients to fetch.
     */
    orderBy?: apiclientOrderByWithRelationInput | apiclientOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: apiclientWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` apiclients from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` apiclients.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned apiclients
    **/
    _count?: true | ApiclientCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: ApiclientAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: ApiclientSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ApiclientMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ApiclientMaxAggregateInputType
  }

  export type GetApiclientAggregateType<T extends ApiclientAggregateArgs> = {
        [P in keyof T & keyof AggregateApiclient]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateApiclient[P]>
      : GetScalarType<T[P], AggregateApiclient[P]>
  }




  export type apiclientGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: apiclientWhereInput
    orderBy?: apiclientOrderByWithAggregationInput | apiclientOrderByWithAggregationInput[]
    by: ApiclientScalarFieldEnum[] | ApiclientScalarFieldEnum
    having?: apiclientScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ApiclientCountAggregateInputType | true
    _avg?: ApiclientAvgAggregateInputType
    _sum?: ApiclientSumAggregateInputType
    _min?: ApiclientMinAggregateInputType
    _max?: ApiclientMaxAggregateInputType
  }

  export type ApiclientGroupByOutputType = {
    id: string
    name: string
    key: string
    secret: string
    type: number
    createdat: Date
    createdby: string
    updatedat: Date | null
    updatedby: string | null
    isactive: boolean
    _count: ApiclientCountAggregateOutputType | null
    _avg: ApiclientAvgAggregateOutputType | null
    _sum: ApiclientSumAggregateOutputType | null
    _min: ApiclientMinAggregateOutputType | null
    _max: ApiclientMaxAggregateOutputType | null
  }

  type GetApiclientGroupByPayload<T extends apiclientGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ApiclientGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ApiclientGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ApiclientGroupByOutputType[P]>
            : GetScalarType<T[P], ApiclientGroupByOutputType[P]>
        }
      >
    >


  export type apiclientSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    key?: boolean
    secret?: boolean
    type?: boolean
    createdat?: boolean
    createdby?: boolean
    updatedat?: boolean
    updatedby?: boolean
    isactive?: boolean
    createduser?: boolean | userDefaultArgs<ExtArgs>
    updateduser?: boolean | apiclient$updateduserArgs<ExtArgs>
  }, ExtArgs["result"]["apiclient"]>

  export type apiclientSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    key?: boolean
    secret?: boolean
    type?: boolean
    createdat?: boolean
    createdby?: boolean
    updatedat?: boolean
    updatedby?: boolean
    isactive?: boolean
    createduser?: boolean | userDefaultArgs<ExtArgs>
    updateduser?: boolean | apiclient$updateduserArgs<ExtArgs>
  }, ExtArgs["result"]["apiclient"]>

  export type apiclientSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    key?: boolean
    secret?: boolean
    type?: boolean
    createdat?: boolean
    createdby?: boolean
    updatedat?: boolean
    updatedby?: boolean
    isactive?: boolean
    createduser?: boolean | userDefaultArgs<ExtArgs>
    updateduser?: boolean | apiclient$updateduserArgs<ExtArgs>
  }, ExtArgs["result"]["apiclient"]>

  export type apiclientSelectScalar = {
    id?: boolean
    name?: boolean
    key?: boolean
    secret?: boolean
    type?: boolean
    createdat?: boolean
    createdby?: boolean
    updatedat?: boolean
    updatedby?: boolean
    isactive?: boolean
  }

  export type apiclientOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "name" | "key" | "secret" | "type" | "createdat" | "createdby" | "updatedat" | "updatedby" | "isactive", ExtArgs["result"]["apiclient"]>
  export type apiclientInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    createduser?: boolean | userDefaultArgs<ExtArgs>
    updateduser?: boolean | apiclient$updateduserArgs<ExtArgs>
  }
  export type apiclientIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    createduser?: boolean | userDefaultArgs<ExtArgs>
    updateduser?: boolean | apiclient$updateduserArgs<ExtArgs>
  }
  export type apiclientIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    createduser?: boolean | userDefaultArgs<ExtArgs>
    updateduser?: boolean | apiclient$updateduserArgs<ExtArgs>
  }

  export type $apiclientPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "apiclient"
    objects: {
      createduser: Prisma.$userPayload<ExtArgs>
      updateduser: Prisma.$userPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      name: string
      key: string
      secret: string
      type: number
      createdat: Date
      createdby: string
      updatedat: Date | null
      updatedby: string | null
      isactive: boolean
    }, ExtArgs["result"]["apiclient"]>
    composites: {}
  }

  type apiclientGetPayload<S extends boolean | null | undefined | apiclientDefaultArgs> = $Result.GetResult<Prisma.$apiclientPayload, S>

  type apiclientCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<apiclientFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: ApiclientCountAggregateInputType | true
    }

  export interface apiclientDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['apiclient'], meta: { name: 'apiclient' } }
    /**
     * Find zero or one Apiclient that matches the filter.
     * @param {apiclientFindUniqueArgs} args - Arguments to find a Apiclient
     * @example
     * // Get one Apiclient
     * const apiclient = await prisma.apiclient.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends apiclientFindUniqueArgs>(args: SelectSubset<T, apiclientFindUniqueArgs<ExtArgs>>): Prisma__apiclientClient<$Result.GetResult<Prisma.$apiclientPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Apiclient that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {apiclientFindUniqueOrThrowArgs} args - Arguments to find a Apiclient
     * @example
     * // Get one Apiclient
     * const apiclient = await prisma.apiclient.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends apiclientFindUniqueOrThrowArgs>(args: SelectSubset<T, apiclientFindUniqueOrThrowArgs<ExtArgs>>): Prisma__apiclientClient<$Result.GetResult<Prisma.$apiclientPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Apiclient that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {apiclientFindFirstArgs} args - Arguments to find a Apiclient
     * @example
     * // Get one Apiclient
     * const apiclient = await prisma.apiclient.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends apiclientFindFirstArgs>(args?: SelectSubset<T, apiclientFindFirstArgs<ExtArgs>>): Prisma__apiclientClient<$Result.GetResult<Prisma.$apiclientPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Apiclient that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {apiclientFindFirstOrThrowArgs} args - Arguments to find a Apiclient
     * @example
     * // Get one Apiclient
     * const apiclient = await prisma.apiclient.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends apiclientFindFirstOrThrowArgs>(args?: SelectSubset<T, apiclientFindFirstOrThrowArgs<ExtArgs>>): Prisma__apiclientClient<$Result.GetResult<Prisma.$apiclientPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Apiclients that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {apiclientFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Apiclients
     * const apiclients = await prisma.apiclient.findMany()
     * 
     * // Get first 10 Apiclients
     * const apiclients = await prisma.apiclient.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const apiclientWithIdOnly = await prisma.apiclient.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends apiclientFindManyArgs>(args?: SelectSubset<T, apiclientFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$apiclientPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Apiclient.
     * @param {apiclientCreateArgs} args - Arguments to create a Apiclient.
     * @example
     * // Create one Apiclient
     * const Apiclient = await prisma.apiclient.create({
     *   data: {
     *     // ... data to create a Apiclient
     *   }
     * })
     * 
     */
    create<T extends apiclientCreateArgs>(args: SelectSubset<T, apiclientCreateArgs<ExtArgs>>): Prisma__apiclientClient<$Result.GetResult<Prisma.$apiclientPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Apiclients.
     * @param {apiclientCreateManyArgs} args - Arguments to create many Apiclients.
     * @example
     * // Create many Apiclients
     * const apiclient = await prisma.apiclient.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends apiclientCreateManyArgs>(args?: SelectSubset<T, apiclientCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Apiclients and returns the data saved in the database.
     * @param {apiclientCreateManyAndReturnArgs} args - Arguments to create many Apiclients.
     * @example
     * // Create many Apiclients
     * const apiclient = await prisma.apiclient.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Apiclients and only return the `id`
     * const apiclientWithIdOnly = await prisma.apiclient.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends apiclientCreateManyAndReturnArgs>(args?: SelectSubset<T, apiclientCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$apiclientPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Apiclient.
     * @param {apiclientDeleteArgs} args - Arguments to delete one Apiclient.
     * @example
     * // Delete one Apiclient
     * const Apiclient = await prisma.apiclient.delete({
     *   where: {
     *     // ... filter to delete one Apiclient
     *   }
     * })
     * 
     */
    delete<T extends apiclientDeleteArgs>(args: SelectSubset<T, apiclientDeleteArgs<ExtArgs>>): Prisma__apiclientClient<$Result.GetResult<Prisma.$apiclientPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Apiclient.
     * @param {apiclientUpdateArgs} args - Arguments to update one Apiclient.
     * @example
     * // Update one Apiclient
     * const apiclient = await prisma.apiclient.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends apiclientUpdateArgs>(args: SelectSubset<T, apiclientUpdateArgs<ExtArgs>>): Prisma__apiclientClient<$Result.GetResult<Prisma.$apiclientPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Apiclients.
     * @param {apiclientDeleteManyArgs} args - Arguments to filter Apiclients to delete.
     * @example
     * // Delete a few Apiclients
     * const { count } = await prisma.apiclient.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends apiclientDeleteManyArgs>(args?: SelectSubset<T, apiclientDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Apiclients.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {apiclientUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Apiclients
     * const apiclient = await prisma.apiclient.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends apiclientUpdateManyArgs>(args: SelectSubset<T, apiclientUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Apiclients and returns the data updated in the database.
     * @param {apiclientUpdateManyAndReturnArgs} args - Arguments to update many Apiclients.
     * @example
     * // Update many Apiclients
     * const apiclient = await prisma.apiclient.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Apiclients and only return the `id`
     * const apiclientWithIdOnly = await prisma.apiclient.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends apiclientUpdateManyAndReturnArgs>(args: SelectSubset<T, apiclientUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$apiclientPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Apiclient.
     * @param {apiclientUpsertArgs} args - Arguments to update or create a Apiclient.
     * @example
     * // Update or create a Apiclient
     * const apiclient = await prisma.apiclient.upsert({
     *   create: {
     *     // ... data to create a Apiclient
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Apiclient we want to update
     *   }
     * })
     */
    upsert<T extends apiclientUpsertArgs>(args: SelectSubset<T, apiclientUpsertArgs<ExtArgs>>): Prisma__apiclientClient<$Result.GetResult<Prisma.$apiclientPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Apiclients.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {apiclientCountArgs} args - Arguments to filter Apiclients to count.
     * @example
     * // Count the number of Apiclients
     * const count = await prisma.apiclient.count({
     *   where: {
     *     // ... the filter for the Apiclients we want to count
     *   }
     * })
    **/
    count<T extends apiclientCountArgs>(
      args?: Subset<T, apiclientCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ApiclientCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Apiclient.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ApiclientAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ApiclientAggregateArgs>(args: Subset<T, ApiclientAggregateArgs>): Prisma.PrismaPromise<GetApiclientAggregateType<T>>

    /**
     * Group by Apiclient.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {apiclientGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends apiclientGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: apiclientGroupByArgs['orderBy'] }
        : { orderBy?: apiclientGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, apiclientGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetApiclientGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the apiclient model
   */
  readonly fields: apiclientFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for apiclient.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__apiclientClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    createduser<T extends userDefaultArgs<ExtArgs> = {}>(args?: Subset<T, userDefaultArgs<ExtArgs>>): Prisma__userClient<$Result.GetResult<Prisma.$userPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    updateduser<T extends apiclient$updateduserArgs<ExtArgs> = {}>(args?: Subset<T, apiclient$updateduserArgs<ExtArgs>>): Prisma__userClient<$Result.GetResult<Prisma.$userPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the apiclient model
   */
  interface apiclientFieldRefs {
    readonly id: FieldRef<"apiclient", 'String'>
    readonly name: FieldRef<"apiclient", 'String'>
    readonly key: FieldRef<"apiclient", 'String'>
    readonly secret: FieldRef<"apiclient", 'String'>
    readonly type: FieldRef<"apiclient", 'Int'>
    readonly createdat: FieldRef<"apiclient", 'DateTime'>
    readonly createdby: FieldRef<"apiclient", 'String'>
    readonly updatedat: FieldRef<"apiclient", 'DateTime'>
    readonly updatedby: FieldRef<"apiclient", 'String'>
    readonly isactive: FieldRef<"apiclient", 'Boolean'>
  }
    

  // Custom InputTypes
  /**
   * apiclient findUnique
   */
  export type apiclientFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the apiclient
     */
    select?: apiclientSelect<ExtArgs> | null
    /**
     * Omit specific fields from the apiclient
     */
    omit?: apiclientOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: apiclientInclude<ExtArgs> | null
    /**
     * Filter, which apiclient to fetch.
     */
    where: apiclientWhereUniqueInput
  }

  /**
   * apiclient findUniqueOrThrow
   */
  export type apiclientFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the apiclient
     */
    select?: apiclientSelect<ExtArgs> | null
    /**
     * Omit specific fields from the apiclient
     */
    omit?: apiclientOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: apiclientInclude<ExtArgs> | null
    /**
     * Filter, which apiclient to fetch.
     */
    where: apiclientWhereUniqueInput
  }

  /**
   * apiclient findFirst
   */
  export type apiclientFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the apiclient
     */
    select?: apiclientSelect<ExtArgs> | null
    /**
     * Omit specific fields from the apiclient
     */
    omit?: apiclientOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: apiclientInclude<ExtArgs> | null
    /**
     * Filter, which apiclient to fetch.
     */
    where?: apiclientWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of apiclients to fetch.
     */
    orderBy?: apiclientOrderByWithRelationInput | apiclientOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for apiclients.
     */
    cursor?: apiclientWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` apiclients from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` apiclients.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of apiclients.
     */
    distinct?: ApiclientScalarFieldEnum | ApiclientScalarFieldEnum[]
  }

  /**
   * apiclient findFirstOrThrow
   */
  export type apiclientFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the apiclient
     */
    select?: apiclientSelect<ExtArgs> | null
    /**
     * Omit specific fields from the apiclient
     */
    omit?: apiclientOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: apiclientInclude<ExtArgs> | null
    /**
     * Filter, which apiclient to fetch.
     */
    where?: apiclientWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of apiclients to fetch.
     */
    orderBy?: apiclientOrderByWithRelationInput | apiclientOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for apiclients.
     */
    cursor?: apiclientWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` apiclients from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` apiclients.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of apiclients.
     */
    distinct?: ApiclientScalarFieldEnum | ApiclientScalarFieldEnum[]
  }

  /**
   * apiclient findMany
   */
  export type apiclientFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the apiclient
     */
    select?: apiclientSelect<ExtArgs> | null
    /**
     * Omit specific fields from the apiclient
     */
    omit?: apiclientOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: apiclientInclude<ExtArgs> | null
    /**
     * Filter, which apiclients to fetch.
     */
    where?: apiclientWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of apiclients to fetch.
     */
    orderBy?: apiclientOrderByWithRelationInput | apiclientOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing apiclients.
     */
    cursor?: apiclientWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` apiclients from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` apiclients.
     */
    skip?: number
    distinct?: ApiclientScalarFieldEnum | ApiclientScalarFieldEnum[]
  }

  /**
   * apiclient create
   */
  export type apiclientCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the apiclient
     */
    select?: apiclientSelect<ExtArgs> | null
    /**
     * Omit specific fields from the apiclient
     */
    omit?: apiclientOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: apiclientInclude<ExtArgs> | null
    /**
     * The data needed to create a apiclient.
     */
    data: XOR<apiclientCreateInput, apiclientUncheckedCreateInput>
  }

  /**
   * apiclient createMany
   */
  export type apiclientCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many apiclients.
     */
    data: apiclientCreateManyInput | apiclientCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * apiclient createManyAndReturn
   */
  export type apiclientCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the apiclient
     */
    select?: apiclientSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the apiclient
     */
    omit?: apiclientOmit<ExtArgs> | null
    /**
     * The data used to create many apiclients.
     */
    data: apiclientCreateManyInput | apiclientCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: apiclientIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * apiclient update
   */
  export type apiclientUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the apiclient
     */
    select?: apiclientSelect<ExtArgs> | null
    /**
     * Omit specific fields from the apiclient
     */
    omit?: apiclientOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: apiclientInclude<ExtArgs> | null
    /**
     * The data needed to update a apiclient.
     */
    data: XOR<apiclientUpdateInput, apiclientUncheckedUpdateInput>
    /**
     * Choose, which apiclient to update.
     */
    where: apiclientWhereUniqueInput
  }

  /**
   * apiclient updateMany
   */
  export type apiclientUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update apiclients.
     */
    data: XOR<apiclientUpdateManyMutationInput, apiclientUncheckedUpdateManyInput>
    /**
     * Filter which apiclients to update
     */
    where?: apiclientWhereInput
    /**
     * Limit how many apiclients to update.
     */
    limit?: number
  }

  /**
   * apiclient updateManyAndReturn
   */
  export type apiclientUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the apiclient
     */
    select?: apiclientSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the apiclient
     */
    omit?: apiclientOmit<ExtArgs> | null
    /**
     * The data used to update apiclients.
     */
    data: XOR<apiclientUpdateManyMutationInput, apiclientUncheckedUpdateManyInput>
    /**
     * Filter which apiclients to update
     */
    where?: apiclientWhereInput
    /**
     * Limit how many apiclients to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: apiclientIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * apiclient upsert
   */
  export type apiclientUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the apiclient
     */
    select?: apiclientSelect<ExtArgs> | null
    /**
     * Omit specific fields from the apiclient
     */
    omit?: apiclientOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: apiclientInclude<ExtArgs> | null
    /**
     * The filter to search for the apiclient to update in case it exists.
     */
    where: apiclientWhereUniqueInput
    /**
     * In case the apiclient found by the `where` argument doesn't exist, create a new apiclient with this data.
     */
    create: XOR<apiclientCreateInput, apiclientUncheckedCreateInput>
    /**
     * In case the apiclient was found with the provided `where` argument, update it with this data.
     */
    update: XOR<apiclientUpdateInput, apiclientUncheckedUpdateInput>
  }

  /**
   * apiclient delete
   */
  export type apiclientDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the apiclient
     */
    select?: apiclientSelect<ExtArgs> | null
    /**
     * Omit specific fields from the apiclient
     */
    omit?: apiclientOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: apiclientInclude<ExtArgs> | null
    /**
     * Filter which apiclient to delete.
     */
    where: apiclientWhereUniqueInput
  }

  /**
   * apiclient deleteMany
   */
  export type apiclientDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which apiclients to delete
     */
    where?: apiclientWhereInput
    /**
     * Limit how many apiclients to delete.
     */
    limit?: number
  }

  /**
   * apiclient.updateduser
   */
  export type apiclient$updateduserArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user
     */
    select?: userSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user
     */
    omit?: userOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: userInclude<ExtArgs> | null
    where?: userWhereInput
  }

  /**
   * apiclient without action
   */
  export type apiclientDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the apiclient
     */
    select?: apiclientSelect<ExtArgs> | null
    /**
     * Omit specific fields from the apiclient
     */
    omit?: apiclientOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: apiclientInclude<ExtArgs> | null
  }


  /**
   * Model refreshtoken
   */

  export type AggregateRefreshtoken = {
    _count: RefreshtokenCountAggregateOutputType | null
    _min: RefreshtokenMinAggregateOutputType | null
    _max: RefreshtokenMaxAggregateOutputType | null
  }

  export type RefreshtokenMinAggregateOutputType = {
    id: string | null
    userid: string | null
    token: string | null
    createdat: Date | null
    updatedat: Date | null
    expiresat: Date | null
  }

  export type RefreshtokenMaxAggregateOutputType = {
    id: string | null
    userid: string | null
    token: string | null
    createdat: Date | null
    updatedat: Date | null
    expiresat: Date | null
  }

  export type RefreshtokenCountAggregateOutputType = {
    id: number
    userid: number
    token: number
    createdat: number
    updatedat: number
    expiresat: number
    _all: number
  }


  export type RefreshtokenMinAggregateInputType = {
    id?: true
    userid?: true
    token?: true
    createdat?: true
    updatedat?: true
    expiresat?: true
  }

  export type RefreshtokenMaxAggregateInputType = {
    id?: true
    userid?: true
    token?: true
    createdat?: true
    updatedat?: true
    expiresat?: true
  }

  export type RefreshtokenCountAggregateInputType = {
    id?: true
    userid?: true
    token?: true
    createdat?: true
    updatedat?: true
    expiresat?: true
    _all?: true
  }

  export type RefreshtokenAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which refreshtoken to aggregate.
     */
    where?: refreshtokenWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of refreshtokens to fetch.
     */
    orderBy?: refreshtokenOrderByWithRelationInput | refreshtokenOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: refreshtokenWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` refreshtokens from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` refreshtokens.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned refreshtokens
    **/
    _count?: true | RefreshtokenCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: RefreshtokenMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: RefreshtokenMaxAggregateInputType
  }

  export type GetRefreshtokenAggregateType<T extends RefreshtokenAggregateArgs> = {
        [P in keyof T & keyof AggregateRefreshtoken]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateRefreshtoken[P]>
      : GetScalarType<T[P], AggregateRefreshtoken[P]>
  }




  export type refreshtokenGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: refreshtokenWhereInput
    orderBy?: refreshtokenOrderByWithAggregationInput | refreshtokenOrderByWithAggregationInput[]
    by: RefreshtokenScalarFieldEnum[] | RefreshtokenScalarFieldEnum
    having?: refreshtokenScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: RefreshtokenCountAggregateInputType | true
    _min?: RefreshtokenMinAggregateInputType
    _max?: RefreshtokenMaxAggregateInputType
  }

  export type RefreshtokenGroupByOutputType = {
    id: string
    userid: string
    token: string
    createdat: Date
    updatedat: Date | null
    expiresat: Date | null
    _count: RefreshtokenCountAggregateOutputType | null
    _min: RefreshtokenMinAggregateOutputType | null
    _max: RefreshtokenMaxAggregateOutputType | null
  }

  type GetRefreshtokenGroupByPayload<T extends refreshtokenGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<RefreshtokenGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof RefreshtokenGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], RefreshtokenGroupByOutputType[P]>
            : GetScalarType<T[P], RefreshtokenGroupByOutputType[P]>
        }
      >
    >


  export type refreshtokenSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    userid?: boolean
    token?: boolean
    createdat?: boolean
    updatedat?: boolean
    expiresat?: boolean
    user?: boolean | userDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["refreshtoken"]>

  export type refreshtokenSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    userid?: boolean
    token?: boolean
    createdat?: boolean
    updatedat?: boolean
    expiresat?: boolean
    user?: boolean | userDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["refreshtoken"]>

  export type refreshtokenSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    userid?: boolean
    token?: boolean
    createdat?: boolean
    updatedat?: boolean
    expiresat?: boolean
    user?: boolean | userDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["refreshtoken"]>

  export type refreshtokenSelectScalar = {
    id?: boolean
    userid?: boolean
    token?: boolean
    createdat?: boolean
    updatedat?: boolean
    expiresat?: boolean
  }

  export type refreshtokenOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "userid" | "token" | "createdat" | "updatedat" | "expiresat", ExtArgs["result"]["refreshtoken"]>
  export type refreshtokenInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | userDefaultArgs<ExtArgs>
  }
  export type refreshtokenIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | userDefaultArgs<ExtArgs>
  }
  export type refreshtokenIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | userDefaultArgs<ExtArgs>
  }

  export type $refreshtokenPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "refreshtoken"
    objects: {
      user: Prisma.$userPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      userid: string
      token: string
      createdat: Date
      updatedat: Date | null
      expiresat: Date | null
    }, ExtArgs["result"]["refreshtoken"]>
    composites: {}
  }

  type refreshtokenGetPayload<S extends boolean | null | undefined | refreshtokenDefaultArgs> = $Result.GetResult<Prisma.$refreshtokenPayload, S>

  type refreshtokenCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<refreshtokenFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: RefreshtokenCountAggregateInputType | true
    }

  export interface refreshtokenDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['refreshtoken'], meta: { name: 'refreshtoken' } }
    /**
     * Find zero or one Refreshtoken that matches the filter.
     * @param {refreshtokenFindUniqueArgs} args - Arguments to find a Refreshtoken
     * @example
     * // Get one Refreshtoken
     * const refreshtoken = await prisma.refreshtoken.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends refreshtokenFindUniqueArgs>(args: SelectSubset<T, refreshtokenFindUniqueArgs<ExtArgs>>): Prisma__refreshtokenClient<$Result.GetResult<Prisma.$refreshtokenPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Refreshtoken that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {refreshtokenFindUniqueOrThrowArgs} args - Arguments to find a Refreshtoken
     * @example
     * // Get one Refreshtoken
     * const refreshtoken = await prisma.refreshtoken.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends refreshtokenFindUniqueOrThrowArgs>(args: SelectSubset<T, refreshtokenFindUniqueOrThrowArgs<ExtArgs>>): Prisma__refreshtokenClient<$Result.GetResult<Prisma.$refreshtokenPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Refreshtoken that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {refreshtokenFindFirstArgs} args - Arguments to find a Refreshtoken
     * @example
     * // Get one Refreshtoken
     * const refreshtoken = await prisma.refreshtoken.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends refreshtokenFindFirstArgs>(args?: SelectSubset<T, refreshtokenFindFirstArgs<ExtArgs>>): Prisma__refreshtokenClient<$Result.GetResult<Prisma.$refreshtokenPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Refreshtoken that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {refreshtokenFindFirstOrThrowArgs} args - Arguments to find a Refreshtoken
     * @example
     * // Get one Refreshtoken
     * const refreshtoken = await prisma.refreshtoken.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends refreshtokenFindFirstOrThrowArgs>(args?: SelectSubset<T, refreshtokenFindFirstOrThrowArgs<ExtArgs>>): Prisma__refreshtokenClient<$Result.GetResult<Prisma.$refreshtokenPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Refreshtokens that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {refreshtokenFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Refreshtokens
     * const refreshtokens = await prisma.refreshtoken.findMany()
     * 
     * // Get first 10 Refreshtokens
     * const refreshtokens = await prisma.refreshtoken.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const refreshtokenWithIdOnly = await prisma.refreshtoken.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends refreshtokenFindManyArgs>(args?: SelectSubset<T, refreshtokenFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$refreshtokenPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Refreshtoken.
     * @param {refreshtokenCreateArgs} args - Arguments to create a Refreshtoken.
     * @example
     * // Create one Refreshtoken
     * const Refreshtoken = await prisma.refreshtoken.create({
     *   data: {
     *     // ... data to create a Refreshtoken
     *   }
     * })
     * 
     */
    create<T extends refreshtokenCreateArgs>(args: SelectSubset<T, refreshtokenCreateArgs<ExtArgs>>): Prisma__refreshtokenClient<$Result.GetResult<Prisma.$refreshtokenPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Refreshtokens.
     * @param {refreshtokenCreateManyArgs} args - Arguments to create many Refreshtokens.
     * @example
     * // Create many Refreshtokens
     * const refreshtoken = await prisma.refreshtoken.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends refreshtokenCreateManyArgs>(args?: SelectSubset<T, refreshtokenCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Refreshtokens and returns the data saved in the database.
     * @param {refreshtokenCreateManyAndReturnArgs} args - Arguments to create many Refreshtokens.
     * @example
     * // Create many Refreshtokens
     * const refreshtoken = await prisma.refreshtoken.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Refreshtokens and only return the `id`
     * const refreshtokenWithIdOnly = await prisma.refreshtoken.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends refreshtokenCreateManyAndReturnArgs>(args?: SelectSubset<T, refreshtokenCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$refreshtokenPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Refreshtoken.
     * @param {refreshtokenDeleteArgs} args - Arguments to delete one Refreshtoken.
     * @example
     * // Delete one Refreshtoken
     * const Refreshtoken = await prisma.refreshtoken.delete({
     *   where: {
     *     // ... filter to delete one Refreshtoken
     *   }
     * })
     * 
     */
    delete<T extends refreshtokenDeleteArgs>(args: SelectSubset<T, refreshtokenDeleteArgs<ExtArgs>>): Prisma__refreshtokenClient<$Result.GetResult<Prisma.$refreshtokenPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Refreshtoken.
     * @param {refreshtokenUpdateArgs} args - Arguments to update one Refreshtoken.
     * @example
     * // Update one Refreshtoken
     * const refreshtoken = await prisma.refreshtoken.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends refreshtokenUpdateArgs>(args: SelectSubset<T, refreshtokenUpdateArgs<ExtArgs>>): Prisma__refreshtokenClient<$Result.GetResult<Prisma.$refreshtokenPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Refreshtokens.
     * @param {refreshtokenDeleteManyArgs} args - Arguments to filter Refreshtokens to delete.
     * @example
     * // Delete a few Refreshtokens
     * const { count } = await prisma.refreshtoken.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends refreshtokenDeleteManyArgs>(args?: SelectSubset<T, refreshtokenDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Refreshtokens.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {refreshtokenUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Refreshtokens
     * const refreshtoken = await prisma.refreshtoken.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends refreshtokenUpdateManyArgs>(args: SelectSubset<T, refreshtokenUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Refreshtokens and returns the data updated in the database.
     * @param {refreshtokenUpdateManyAndReturnArgs} args - Arguments to update many Refreshtokens.
     * @example
     * // Update many Refreshtokens
     * const refreshtoken = await prisma.refreshtoken.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Refreshtokens and only return the `id`
     * const refreshtokenWithIdOnly = await prisma.refreshtoken.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends refreshtokenUpdateManyAndReturnArgs>(args: SelectSubset<T, refreshtokenUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$refreshtokenPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Refreshtoken.
     * @param {refreshtokenUpsertArgs} args - Arguments to update or create a Refreshtoken.
     * @example
     * // Update or create a Refreshtoken
     * const refreshtoken = await prisma.refreshtoken.upsert({
     *   create: {
     *     // ... data to create a Refreshtoken
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Refreshtoken we want to update
     *   }
     * })
     */
    upsert<T extends refreshtokenUpsertArgs>(args: SelectSubset<T, refreshtokenUpsertArgs<ExtArgs>>): Prisma__refreshtokenClient<$Result.GetResult<Prisma.$refreshtokenPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Refreshtokens.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {refreshtokenCountArgs} args - Arguments to filter Refreshtokens to count.
     * @example
     * // Count the number of Refreshtokens
     * const count = await prisma.refreshtoken.count({
     *   where: {
     *     // ... the filter for the Refreshtokens we want to count
     *   }
     * })
    **/
    count<T extends refreshtokenCountArgs>(
      args?: Subset<T, refreshtokenCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], RefreshtokenCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Refreshtoken.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RefreshtokenAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends RefreshtokenAggregateArgs>(args: Subset<T, RefreshtokenAggregateArgs>): Prisma.PrismaPromise<GetRefreshtokenAggregateType<T>>

    /**
     * Group by Refreshtoken.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {refreshtokenGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends refreshtokenGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: refreshtokenGroupByArgs['orderBy'] }
        : { orderBy?: refreshtokenGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, refreshtokenGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetRefreshtokenGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the refreshtoken model
   */
  readonly fields: refreshtokenFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for refreshtoken.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__refreshtokenClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    user<T extends userDefaultArgs<ExtArgs> = {}>(args?: Subset<T, userDefaultArgs<ExtArgs>>): Prisma__userClient<$Result.GetResult<Prisma.$userPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the refreshtoken model
   */
  interface refreshtokenFieldRefs {
    readonly id: FieldRef<"refreshtoken", 'String'>
    readonly userid: FieldRef<"refreshtoken", 'String'>
    readonly token: FieldRef<"refreshtoken", 'String'>
    readonly createdat: FieldRef<"refreshtoken", 'DateTime'>
    readonly updatedat: FieldRef<"refreshtoken", 'DateTime'>
    readonly expiresat: FieldRef<"refreshtoken", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * refreshtoken findUnique
   */
  export type refreshtokenFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the refreshtoken
     */
    select?: refreshtokenSelect<ExtArgs> | null
    /**
     * Omit specific fields from the refreshtoken
     */
    omit?: refreshtokenOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: refreshtokenInclude<ExtArgs> | null
    /**
     * Filter, which refreshtoken to fetch.
     */
    where: refreshtokenWhereUniqueInput
  }

  /**
   * refreshtoken findUniqueOrThrow
   */
  export type refreshtokenFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the refreshtoken
     */
    select?: refreshtokenSelect<ExtArgs> | null
    /**
     * Omit specific fields from the refreshtoken
     */
    omit?: refreshtokenOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: refreshtokenInclude<ExtArgs> | null
    /**
     * Filter, which refreshtoken to fetch.
     */
    where: refreshtokenWhereUniqueInput
  }

  /**
   * refreshtoken findFirst
   */
  export type refreshtokenFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the refreshtoken
     */
    select?: refreshtokenSelect<ExtArgs> | null
    /**
     * Omit specific fields from the refreshtoken
     */
    omit?: refreshtokenOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: refreshtokenInclude<ExtArgs> | null
    /**
     * Filter, which refreshtoken to fetch.
     */
    where?: refreshtokenWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of refreshtokens to fetch.
     */
    orderBy?: refreshtokenOrderByWithRelationInput | refreshtokenOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for refreshtokens.
     */
    cursor?: refreshtokenWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` refreshtokens from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` refreshtokens.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of refreshtokens.
     */
    distinct?: RefreshtokenScalarFieldEnum | RefreshtokenScalarFieldEnum[]
  }

  /**
   * refreshtoken findFirstOrThrow
   */
  export type refreshtokenFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the refreshtoken
     */
    select?: refreshtokenSelect<ExtArgs> | null
    /**
     * Omit specific fields from the refreshtoken
     */
    omit?: refreshtokenOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: refreshtokenInclude<ExtArgs> | null
    /**
     * Filter, which refreshtoken to fetch.
     */
    where?: refreshtokenWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of refreshtokens to fetch.
     */
    orderBy?: refreshtokenOrderByWithRelationInput | refreshtokenOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for refreshtokens.
     */
    cursor?: refreshtokenWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` refreshtokens from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` refreshtokens.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of refreshtokens.
     */
    distinct?: RefreshtokenScalarFieldEnum | RefreshtokenScalarFieldEnum[]
  }

  /**
   * refreshtoken findMany
   */
  export type refreshtokenFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the refreshtoken
     */
    select?: refreshtokenSelect<ExtArgs> | null
    /**
     * Omit specific fields from the refreshtoken
     */
    omit?: refreshtokenOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: refreshtokenInclude<ExtArgs> | null
    /**
     * Filter, which refreshtokens to fetch.
     */
    where?: refreshtokenWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of refreshtokens to fetch.
     */
    orderBy?: refreshtokenOrderByWithRelationInput | refreshtokenOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing refreshtokens.
     */
    cursor?: refreshtokenWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` refreshtokens from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` refreshtokens.
     */
    skip?: number
    distinct?: RefreshtokenScalarFieldEnum | RefreshtokenScalarFieldEnum[]
  }

  /**
   * refreshtoken create
   */
  export type refreshtokenCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the refreshtoken
     */
    select?: refreshtokenSelect<ExtArgs> | null
    /**
     * Omit specific fields from the refreshtoken
     */
    omit?: refreshtokenOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: refreshtokenInclude<ExtArgs> | null
    /**
     * The data needed to create a refreshtoken.
     */
    data: XOR<refreshtokenCreateInput, refreshtokenUncheckedCreateInput>
  }

  /**
   * refreshtoken createMany
   */
  export type refreshtokenCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many refreshtokens.
     */
    data: refreshtokenCreateManyInput | refreshtokenCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * refreshtoken createManyAndReturn
   */
  export type refreshtokenCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the refreshtoken
     */
    select?: refreshtokenSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the refreshtoken
     */
    omit?: refreshtokenOmit<ExtArgs> | null
    /**
     * The data used to create many refreshtokens.
     */
    data: refreshtokenCreateManyInput | refreshtokenCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: refreshtokenIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * refreshtoken update
   */
  export type refreshtokenUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the refreshtoken
     */
    select?: refreshtokenSelect<ExtArgs> | null
    /**
     * Omit specific fields from the refreshtoken
     */
    omit?: refreshtokenOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: refreshtokenInclude<ExtArgs> | null
    /**
     * The data needed to update a refreshtoken.
     */
    data: XOR<refreshtokenUpdateInput, refreshtokenUncheckedUpdateInput>
    /**
     * Choose, which refreshtoken to update.
     */
    where: refreshtokenWhereUniqueInput
  }

  /**
   * refreshtoken updateMany
   */
  export type refreshtokenUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update refreshtokens.
     */
    data: XOR<refreshtokenUpdateManyMutationInput, refreshtokenUncheckedUpdateManyInput>
    /**
     * Filter which refreshtokens to update
     */
    where?: refreshtokenWhereInput
    /**
     * Limit how many refreshtokens to update.
     */
    limit?: number
  }

  /**
   * refreshtoken updateManyAndReturn
   */
  export type refreshtokenUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the refreshtoken
     */
    select?: refreshtokenSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the refreshtoken
     */
    omit?: refreshtokenOmit<ExtArgs> | null
    /**
     * The data used to update refreshtokens.
     */
    data: XOR<refreshtokenUpdateManyMutationInput, refreshtokenUncheckedUpdateManyInput>
    /**
     * Filter which refreshtokens to update
     */
    where?: refreshtokenWhereInput
    /**
     * Limit how many refreshtokens to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: refreshtokenIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * refreshtoken upsert
   */
  export type refreshtokenUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the refreshtoken
     */
    select?: refreshtokenSelect<ExtArgs> | null
    /**
     * Omit specific fields from the refreshtoken
     */
    omit?: refreshtokenOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: refreshtokenInclude<ExtArgs> | null
    /**
     * The filter to search for the refreshtoken to update in case it exists.
     */
    where: refreshtokenWhereUniqueInput
    /**
     * In case the refreshtoken found by the `where` argument doesn't exist, create a new refreshtoken with this data.
     */
    create: XOR<refreshtokenCreateInput, refreshtokenUncheckedCreateInput>
    /**
     * In case the refreshtoken was found with the provided `where` argument, update it with this data.
     */
    update: XOR<refreshtokenUpdateInput, refreshtokenUncheckedUpdateInput>
  }

  /**
   * refreshtoken delete
   */
  export type refreshtokenDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the refreshtoken
     */
    select?: refreshtokenSelect<ExtArgs> | null
    /**
     * Omit specific fields from the refreshtoken
     */
    omit?: refreshtokenOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: refreshtokenInclude<ExtArgs> | null
    /**
     * Filter which refreshtoken to delete.
     */
    where: refreshtokenWhereUniqueInput
  }

  /**
   * refreshtoken deleteMany
   */
  export type refreshtokenDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which refreshtokens to delete
     */
    where?: refreshtokenWhereInput
    /**
     * Limit how many refreshtokens to delete.
     */
    limit?: number
  }

  /**
   * refreshtoken without action
   */
  export type refreshtokenDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the refreshtoken
     */
    select?: refreshtokenSelect<ExtArgs> | null
    /**
     * Omit specific fields from the refreshtoken
     */
    omit?: refreshtokenOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: refreshtokenInclude<ExtArgs> | null
  }


  /**
   * Model revokedtoken
   */

  export type AggregateRevokedtoken = {
    _count: RevokedtokenCountAggregateOutputType | null
    _min: RevokedtokenMinAggregateOutputType | null
    _max: RevokedtokenMaxAggregateOutputType | null
  }

  export type RevokedtokenMinAggregateOutputType = {
    id: string | null
    token: string | null
    date: Date | null
  }

  export type RevokedtokenMaxAggregateOutputType = {
    id: string | null
    token: string | null
    date: Date | null
  }

  export type RevokedtokenCountAggregateOutputType = {
    id: number
    token: number
    date: number
    _all: number
  }


  export type RevokedtokenMinAggregateInputType = {
    id?: true
    token?: true
    date?: true
  }

  export type RevokedtokenMaxAggregateInputType = {
    id?: true
    token?: true
    date?: true
  }

  export type RevokedtokenCountAggregateInputType = {
    id?: true
    token?: true
    date?: true
    _all?: true
  }

  export type RevokedtokenAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which revokedtoken to aggregate.
     */
    where?: revokedtokenWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of revokedtokens to fetch.
     */
    orderBy?: revokedtokenOrderByWithRelationInput | revokedtokenOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: revokedtokenWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` revokedtokens from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` revokedtokens.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned revokedtokens
    **/
    _count?: true | RevokedtokenCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: RevokedtokenMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: RevokedtokenMaxAggregateInputType
  }

  export type GetRevokedtokenAggregateType<T extends RevokedtokenAggregateArgs> = {
        [P in keyof T & keyof AggregateRevokedtoken]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateRevokedtoken[P]>
      : GetScalarType<T[P], AggregateRevokedtoken[P]>
  }




  export type revokedtokenGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: revokedtokenWhereInput
    orderBy?: revokedtokenOrderByWithAggregationInput | revokedtokenOrderByWithAggregationInput[]
    by: RevokedtokenScalarFieldEnum[] | RevokedtokenScalarFieldEnum
    having?: revokedtokenScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: RevokedtokenCountAggregateInputType | true
    _min?: RevokedtokenMinAggregateInputType
    _max?: RevokedtokenMaxAggregateInputType
  }

  export type RevokedtokenGroupByOutputType = {
    id: string
    token: string
    date: Date
    _count: RevokedtokenCountAggregateOutputType | null
    _min: RevokedtokenMinAggregateOutputType | null
    _max: RevokedtokenMaxAggregateOutputType | null
  }

  type GetRevokedtokenGroupByPayload<T extends revokedtokenGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<RevokedtokenGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof RevokedtokenGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], RevokedtokenGroupByOutputType[P]>
            : GetScalarType<T[P], RevokedtokenGroupByOutputType[P]>
        }
      >
    >


  export type revokedtokenSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    token?: boolean
    date?: boolean
  }, ExtArgs["result"]["revokedtoken"]>

  export type revokedtokenSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    token?: boolean
    date?: boolean
  }, ExtArgs["result"]["revokedtoken"]>

  export type revokedtokenSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    token?: boolean
    date?: boolean
  }, ExtArgs["result"]["revokedtoken"]>

  export type revokedtokenSelectScalar = {
    id?: boolean
    token?: boolean
    date?: boolean
  }

  export type revokedtokenOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "token" | "date", ExtArgs["result"]["revokedtoken"]>

  export type $revokedtokenPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "revokedtoken"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      id: string
      token: string
      date: Date
    }, ExtArgs["result"]["revokedtoken"]>
    composites: {}
  }

  type revokedtokenGetPayload<S extends boolean | null | undefined | revokedtokenDefaultArgs> = $Result.GetResult<Prisma.$revokedtokenPayload, S>

  type revokedtokenCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<revokedtokenFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: RevokedtokenCountAggregateInputType | true
    }

  export interface revokedtokenDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['revokedtoken'], meta: { name: 'revokedtoken' } }
    /**
     * Find zero or one Revokedtoken that matches the filter.
     * @param {revokedtokenFindUniqueArgs} args - Arguments to find a Revokedtoken
     * @example
     * // Get one Revokedtoken
     * const revokedtoken = await prisma.revokedtoken.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends revokedtokenFindUniqueArgs>(args: SelectSubset<T, revokedtokenFindUniqueArgs<ExtArgs>>): Prisma__revokedtokenClient<$Result.GetResult<Prisma.$revokedtokenPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Revokedtoken that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {revokedtokenFindUniqueOrThrowArgs} args - Arguments to find a Revokedtoken
     * @example
     * // Get one Revokedtoken
     * const revokedtoken = await prisma.revokedtoken.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends revokedtokenFindUniqueOrThrowArgs>(args: SelectSubset<T, revokedtokenFindUniqueOrThrowArgs<ExtArgs>>): Prisma__revokedtokenClient<$Result.GetResult<Prisma.$revokedtokenPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Revokedtoken that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {revokedtokenFindFirstArgs} args - Arguments to find a Revokedtoken
     * @example
     * // Get one Revokedtoken
     * const revokedtoken = await prisma.revokedtoken.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends revokedtokenFindFirstArgs>(args?: SelectSubset<T, revokedtokenFindFirstArgs<ExtArgs>>): Prisma__revokedtokenClient<$Result.GetResult<Prisma.$revokedtokenPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Revokedtoken that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {revokedtokenFindFirstOrThrowArgs} args - Arguments to find a Revokedtoken
     * @example
     * // Get one Revokedtoken
     * const revokedtoken = await prisma.revokedtoken.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends revokedtokenFindFirstOrThrowArgs>(args?: SelectSubset<T, revokedtokenFindFirstOrThrowArgs<ExtArgs>>): Prisma__revokedtokenClient<$Result.GetResult<Prisma.$revokedtokenPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Revokedtokens that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {revokedtokenFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Revokedtokens
     * const revokedtokens = await prisma.revokedtoken.findMany()
     * 
     * // Get first 10 Revokedtokens
     * const revokedtokens = await prisma.revokedtoken.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const revokedtokenWithIdOnly = await prisma.revokedtoken.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends revokedtokenFindManyArgs>(args?: SelectSubset<T, revokedtokenFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$revokedtokenPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Revokedtoken.
     * @param {revokedtokenCreateArgs} args - Arguments to create a Revokedtoken.
     * @example
     * // Create one Revokedtoken
     * const Revokedtoken = await prisma.revokedtoken.create({
     *   data: {
     *     // ... data to create a Revokedtoken
     *   }
     * })
     * 
     */
    create<T extends revokedtokenCreateArgs>(args: SelectSubset<T, revokedtokenCreateArgs<ExtArgs>>): Prisma__revokedtokenClient<$Result.GetResult<Prisma.$revokedtokenPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Revokedtokens.
     * @param {revokedtokenCreateManyArgs} args - Arguments to create many Revokedtokens.
     * @example
     * // Create many Revokedtokens
     * const revokedtoken = await prisma.revokedtoken.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends revokedtokenCreateManyArgs>(args?: SelectSubset<T, revokedtokenCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Revokedtokens and returns the data saved in the database.
     * @param {revokedtokenCreateManyAndReturnArgs} args - Arguments to create many Revokedtokens.
     * @example
     * // Create many Revokedtokens
     * const revokedtoken = await prisma.revokedtoken.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Revokedtokens and only return the `id`
     * const revokedtokenWithIdOnly = await prisma.revokedtoken.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends revokedtokenCreateManyAndReturnArgs>(args?: SelectSubset<T, revokedtokenCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$revokedtokenPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Revokedtoken.
     * @param {revokedtokenDeleteArgs} args - Arguments to delete one Revokedtoken.
     * @example
     * // Delete one Revokedtoken
     * const Revokedtoken = await prisma.revokedtoken.delete({
     *   where: {
     *     // ... filter to delete one Revokedtoken
     *   }
     * })
     * 
     */
    delete<T extends revokedtokenDeleteArgs>(args: SelectSubset<T, revokedtokenDeleteArgs<ExtArgs>>): Prisma__revokedtokenClient<$Result.GetResult<Prisma.$revokedtokenPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Revokedtoken.
     * @param {revokedtokenUpdateArgs} args - Arguments to update one Revokedtoken.
     * @example
     * // Update one Revokedtoken
     * const revokedtoken = await prisma.revokedtoken.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends revokedtokenUpdateArgs>(args: SelectSubset<T, revokedtokenUpdateArgs<ExtArgs>>): Prisma__revokedtokenClient<$Result.GetResult<Prisma.$revokedtokenPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Revokedtokens.
     * @param {revokedtokenDeleteManyArgs} args - Arguments to filter Revokedtokens to delete.
     * @example
     * // Delete a few Revokedtokens
     * const { count } = await prisma.revokedtoken.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends revokedtokenDeleteManyArgs>(args?: SelectSubset<T, revokedtokenDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Revokedtokens.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {revokedtokenUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Revokedtokens
     * const revokedtoken = await prisma.revokedtoken.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends revokedtokenUpdateManyArgs>(args: SelectSubset<T, revokedtokenUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Revokedtokens and returns the data updated in the database.
     * @param {revokedtokenUpdateManyAndReturnArgs} args - Arguments to update many Revokedtokens.
     * @example
     * // Update many Revokedtokens
     * const revokedtoken = await prisma.revokedtoken.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Revokedtokens and only return the `id`
     * const revokedtokenWithIdOnly = await prisma.revokedtoken.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends revokedtokenUpdateManyAndReturnArgs>(args: SelectSubset<T, revokedtokenUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$revokedtokenPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Revokedtoken.
     * @param {revokedtokenUpsertArgs} args - Arguments to update or create a Revokedtoken.
     * @example
     * // Update or create a Revokedtoken
     * const revokedtoken = await prisma.revokedtoken.upsert({
     *   create: {
     *     // ... data to create a Revokedtoken
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Revokedtoken we want to update
     *   }
     * })
     */
    upsert<T extends revokedtokenUpsertArgs>(args: SelectSubset<T, revokedtokenUpsertArgs<ExtArgs>>): Prisma__revokedtokenClient<$Result.GetResult<Prisma.$revokedtokenPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Revokedtokens.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {revokedtokenCountArgs} args - Arguments to filter Revokedtokens to count.
     * @example
     * // Count the number of Revokedtokens
     * const count = await prisma.revokedtoken.count({
     *   where: {
     *     // ... the filter for the Revokedtokens we want to count
     *   }
     * })
    **/
    count<T extends revokedtokenCountArgs>(
      args?: Subset<T, revokedtokenCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], RevokedtokenCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Revokedtoken.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RevokedtokenAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends RevokedtokenAggregateArgs>(args: Subset<T, RevokedtokenAggregateArgs>): Prisma.PrismaPromise<GetRevokedtokenAggregateType<T>>

    /**
     * Group by Revokedtoken.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {revokedtokenGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends revokedtokenGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: revokedtokenGroupByArgs['orderBy'] }
        : { orderBy?: revokedtokenGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, revokedtokenGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetRevokedtokenGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the revokedtoken model
   */
  readonly fields: revokedtokenFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for revokedtoken.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__revokedtokenClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the revokedtoken model
   */
  interface revokedtokenFieldRefs {
    readonly id: FieldRef<"revokedtoken", 'String'>
    readonly token: FieldRef<"revokedtoken", 'String'>
    readonly date: FieldRef<"revokedtoken", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * revokedtoken findUnique
   */
  export type revokedtokenFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the revokedtoken
     */
    select?: revokedtokenSelect<ExtArgs> | null
    /**
     * Omit specific fields from the revokedtoken
     */
    omit?: revokedtokenOmit<ExtArgs> | null
    /**
     * Filter, which revokedtoken to fetch.
     */
    where: revokedtokenWhereUniqueInput
  }

  /**
   * revokedtoken findUniqueOrThrow
   */
  export type revokedtokenFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the revokedtoken
     */
    select?: revokedtokenSelect<ExtArgs> | null
    /**
     * Omit specific fields from the revokedtoken
     */
    omit?: revokedtokenOmit<ExtArgs> | null
    /**
     * Filter, which revokedtoken to fetch.
     */
    where: revokedtokenWhereUniqueInput
  }

  /**
   * revokedtoken findFirst
   */
  export type revokedtokenFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the revokedtoken
     */
    select?: revokedtokenSelect<ExtArgs> | null
    /**
     * Omit specific fields from the revokedtoken
     */
    omit?: revokedtokenOmit<ExtArgs> | null
    /**
     * Filter, which revokedtoken to fetch.
     */
    where?: revokedtokenWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of revokedtokens to fetch.
     */
    orderBy?: revokedtokenOrderByWithRelationInput | revokedtokenOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for revokedtokens.
     */
    cursor?: revokedtokenWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` revokedtokens from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` revokedtokens.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of revokedtokens.
     */
    distinct?: RevokedtokenScalarFieldEnum | RevokedtokenScalarFieldEnum[]
  }

  /**
   * revokedtoken findFirstOrThrow
   */
  export type revokedtokenFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the revokedtoken
     */
    select?: revokedtokenSelect<ExtArgs> | null
    /**
     * Omit specific fields from the revokedtoken
     */
    omit?: revokedtokenOmit<ExtArgs> | null
    /**
     * Filter, which revokedtoken to fetch.
     */
    where?: revokedtokenWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of revokedtokens to fetch.
     */
    orderBy?: revokedtokenOrderByWithRelationInput | revokedtokenOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for revokedtokens.
     */
    cursor?: revokedtokenWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` revokedtokens from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` revokedtokens.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of revokedtokens.
     */
    distinct?: RevokedtokenScalarFieldEnum | RevokedtokenScalarFieldEnum[]
  }

  /**
   * revokedtoken findMany
   */
  export type revokedtokenFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the revokedtoken
     */
    select?: revokedtokenSelect<ExtArgs> | null
    /**
     * Omit specific fields from the revokedtoken
     */
    omit?: revokedtokenOmit<ExtArgs> | null
    /**
     * Filter, which revokedtokens to fetch.
     */
    where?: revokedtokenWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of revokedtokens to fetch.
     */
    orderBy?: revokedtokenOrderByWithRelationInput | revokedtokenOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing revokedtokens.
     */
    cursor?: revokedtokenWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` revokedtokens from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` revokedtokens.
     */
    skip?: number
    distinct?: RevokedtokenScalarFieldEnum | RevokedtokenScalarFieldEnum[]
  }

  /**
   * revokedtoken create
   */
  export type revokedtokenCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the revokedtoken
     */
    select?: revokedtokenSelect<ExtArgs> | null
    /**
     * Omit specific fields from the revokedtoken
     */
    omit?: revokedtokenOmit<ExtArgs> | null
    /**
     * The data needed to create a revokedtoken.
     */
    data: XOR<revokedtokenCreateInput, revokedtokenUncheckedCreateInput>
  }

  /**
   * revokedtoken createMany
   */
  export type revokedtokenCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many revokedtokens.
     */
    data: revokedtokenCreateManyInput | revokedtokenCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * revokedtoken createManyAndReturn
   */
  export type revokedtokenCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the revokedtoken
     */
    select?: revokedtokenSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the revokedtoken
     */
    omit?: revokedtokenOmit<ExtArgs> | null
    /**
     * The data used to create many revokedtokens.
     */
    data: revokedtokenCreateManyInput | revokedtokenCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * revokedtoken update
   */
  export type revokedtokenUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the revokedtoken
     */
    select?: revokedtokenSelect<ExtArgs> | null
    /**
     * Omit specific fields from the revokedtoken
     */
    omit?: revokedtokenOmit<ExtArgs> | null
    /**
     * The data needed to update a revokedtoken.
     */
    data: XOR<revokedtokenUpdateInput, revokedtokenUncheckedUpdateInput>
    /**
     * Choose, which revokedtoken to update.
     */
    where: revokedtokenWhereUniqueInput
  }

  /**
   * revokedtoken updateMany
   */
  export type revokedtokenUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update revokedtokens.
     */
    data: XOR<revokedtokenUpdateManyMutationInput, revokedtokenUncheckedUpdateManyInput>
    /**
     * Filter which revokedtokens to update
     */
    where?: revokedtokenWhereInput
    /**
     * Limit how many revokedtokens to update.
     */
    limit?: number
  }

  /**
   * revokedtoken updateManyAndReturn
   */
  export type revokedtokenUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the revokedtoken
     */
    select?: revokedtokenSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the revokedtoken
     */
    omit?: revokedtokenOmit<ExtArgs> | null
    /**
     * The data used to update revokedtokens.
     */
    data: XOR<revokedtokenUpdateManyMutationInput, revokedtokenUncheckedUpdateManyInput>
    /**
     * Filter which revokedtokens to update
     */
    where?: revokedtokenWhereInput
    /**
     * Limit how many revokedtokens to update.
     */
    limit?: number
  }

  /**
   * revokedtoken upsert
   */
  export type revokedtokenUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the revokedtoken
     */
    select?: revokedtokenSelect<ExtArgs> | null
    /**
     * Omit specific fields from the revokedtoken
     */
    omit?: revokedtokenOmit<ExtArgs> | null
    /**
     * The filter to search for the revokedtoken to update in case it exists.
     */
    where: revokedtokenWhereUniqueInput
    /**
     * In case the revokedtoken found by the `where` argument doesn't exist, create a new revokedtoken with this data.
     */
    create: XOR<revokedtokenCreateInput, revokedtokenUncheckedCreateInput>
    /**
     * In case the revokedtoken was found with the provided `where` argument, update it with this data.
     */
    update: XOR<revokedtokenUpdateInput, revokedtokenUncheckedUpdateInput>
  }

  /**
   * revokedtoken delete
   */
  export type revokedtokenDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the revokedtoken
     */
    select?: revokedtokenSelect<ExtArgs> | null
    /**
     * Omit specific fields from the revokedtoken
     */
    omit?: revokedtokenOmit<ExtArgs> | null
    /**
     * Filter which revokedtoken to delete.
     */
    where: revokedtokenWhereUniqueInput
  }

  /**
   * revokedtoken deleteMany
   */
  export type revokedtokenDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which revokedtokens to delete
     */
    where?: revokedtokenWhereInput
    /**
     * Limit how many revokedtokens to delete.
     */
    limit?: number
  }

  /**
   * revokedtoken without action
   */
  export type revokedtokenDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the revokedtoken
     */
    select?: revokedtokenSelect<ExtArgs> | null
    /**
     * Omit specific fields from the revokedtoken
     */
    omit?: revokedtokenOmit<ExtArgs> | null
  }


  /**
   * Model role
   */

  export type AggregateRole = {
    _count: RoleCountAggregateOutputType | null
    _min: RoleMinAggregateOutputType | null
    _max: RoleMaxAggregateOutputType | null
  }

  export type RoleMinAggregateOutputType = {
    id: string | null
    name: string | null
    createdby: string | null
    createdat: Date | null
    updatedby: string | null
    updatedat: Date | null
    issystemrole: boolean | null
  }

  export type RoleMaxAggregateOutputType = {
    id: string | null
    name: string | null
    createdby: string | null
    createdat: Date | null
    updatedby: string | null
    updatedat: Date | null
    issystemrole: boolean | null
  }

  export type RoleCountAggregateOutputType = {
    id: number
    name: number
    createdby: number
    createdat: number
    updatedby: number
    updatedat: number
    issystemrole: number
    _all: number
  }


  export type RoleMinAggregateInputType = {
    id?: true
    name?: true
    createdby?: true
    createdat?: true
    updatedby?: true
    updatedat?: true
    issystemrole?: true
  }

  export type RoleMaxAggregateInputType = {
    id?: true
    name?: true
    createdby?: true
    createdat?: true
    updatedby?: true
    updatedat?: true
    issystemrole?: true
  }

  export type RoleCountAggregateInputType = {
    id?: true
    name?: true
    createdby?: true
    createdat?: true
    updatedby?: true
    updatedat?: true
    issystemrole?: true
    _all?: true
  }

  export type RoleAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which role to aggregate.
     */
    where?: roleWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of roles to fetch.
     */
    orderBy?: roleOrderByWithRelationInput | roleOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: roleWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` roles from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` roles.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned roles
    **/
    _count?: true | RoleCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: RoleMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: RoleMaxAggregateInputType
  }

  export type GetRoleAggregateType<T extends RoleAggregateArgs> = {
        [P in keyof T & keyof AggregateRole]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateRole[P]>
      : GetScalarType<T[P], AggregateRole[P]>
  }




  export type roleGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: roleWhereInput
    orderBy?: roleOrderByWithAggregationInput | roleOrderByWithAggregationInput[]
    by: RoleScalarFieldEnum[] | RoleScalarFieldEnum
    having?: roleScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: RoleCountAggregateInputType | true
    _min?: RoleMinAggregateInputType
    _max?: RoleMaxAggregateInputType
  }

  export type RoleGroupByOutputType = {
    id: string
    name: string
    createdby: string
    createdat: Date
    updatedby: string | null
    updatedat: Date | null
    issystemrole: boolean
    _count: RoleCountAggregateOutputType | null
    _min: RoleMinAggregateOutputType | null
    _max: RoleMaxAggregateOutputType | null
  }

  type GetRoleGroupByPayload<T extends roleGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<RoleGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof RoleGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], RoleGroupByOutputType[P]>
            : GetScalarType<T[P], RoleGroupByOutputType[P]>
        }
      >
    >


  export type roleSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    createdby?: boolean
    createdat?: boolean
    updatedby?: boolean
    updatedat?: boolean
    issystemrole?: boolean
    createduser?: boolean | userDefaultArgs<ExtArgs>
    updateduser?: boolean | role$updateduserArgs<ExtArgs>
    rolepermissions?: boolean | role$rolepermissionsArgs<ExtArgs>
    userroles?: boolean | role$userrolesArgs<ExtArgs>
    _count?: boolean | RoleCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["role"]>

  export type roleSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    createdby?: boolean
    createdat?: boolean
    updatedby?: boolean
    updatedat?: boolean
    issystemrole?: boolean
    createduser?: boolean | userDefaultArgs<ExtArgs>
    updateduser?: boolean | role$updateduserArgs<ExtArgs>
  }, ExtArgs["result"]["role"]>

  export type roleSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    createdby?: boolean
    createdat?: boolean
    updatedby?: boolean
    updatedat?: boolean
    issystemrole?: boolean
    createduser?: boolean | userDefaultArgs<ExtArgs>
    updateduser?: boolean | role$updateduserArgs<ExtArgs>
  }, ExtArgs["result"]["role"]>

  export type roleSelectScalar = {
    id?: boolean
    name?: boolean
    createdby?: boolean
    createdat?: boolean
    updatedby?: boolean
    updatedat?: boolean
    issystemrole?: boolean
  }

  export type roleOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "name" | "createdby" | "createdat" | "updatedby" | "updatedat" | "issystemrole", ExtArgs["result"]["role"]>
  export type roleInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    createduser?: boolean | userDefaultArgs<ExtArgs>
    updateduser?: boolean | role$updateduserArgs<ExtArgs>
    rolepermissions?: boolean | role$rolepermissionsArgs<ExtArgs>
    userroles?: boolean | role$userrolesArgs<ExtArgs>
    _count?: boolean | RoleCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type roleIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    createduser?: boolean | userDefaultArgs<ExtArgs>
    updateduser?: boolean | role$updateduserArgs<ExtArgs>
  }
  export type roleIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    createduser?: boolean | userDefaultArgs<ExtArgs>
    updateduser?: boolean | role$updateduserArgs<ExtArgs>
  }

  export type $rolePayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "role"
    objects: {
      createduser: Prisma.$userPayload<ExtArgs>
      updateduser: Prisma.$userPayload<ExtArgs> | null
      rolepermissions: Prisma.$rolepermissionPayload<ExtArgs>[]
      userroles: Prisma.$userrolePayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      name: string
      createdby: string
      createdat: Date
      updatedby: string | null
      updatedat: Date | null
      issystemrole: boolean
    }, ExtArgs["result"]["role"]>
    composites: {}
  }

  type roleGetPayload<S extends boolean | null | undefined | roleDefaultArgs> = $Result.GetResult<Prisma.$rolePayload, S>

  type roleCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<roleFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: RoleCountAggregateInputType | true
    }

  export interface roleDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['role'], meta: { name: 'role' } }
    /**
     * Find zero or one Role that matches the filter.
     * @param {roleFindUniqueArgs} args - Arguments to find a Role
     * @example
     * // Get one Role
     * const role = await prisma.role.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends roleFindUniqueArgs>(args: SelectSubset<T, roleFindUniqueArgs<ExtArgs>>): Prisma__roleClient<$Result.GetResult<Prisma.$rolePayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Role that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {roleFindUniqueOrThrowArgs} args - Arguments to find a Role
     * @example
     * // Get one Role
     * const role = await prisma.role.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends roleFindUniqueOrThrowArgs>(args: SelectSubset<T, roleFindUniqueOrThrowArgs<ExtArgs>>): Prisma__roleClient<$Result.GetResult<Prisma.$rolePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Role that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {roleFindFirstArgs} args - Arguments to find a Role
     * @example
     * // Get one Role
     * const role = await prisma.role.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends roleFindFirstArgs>(args?: SelectSubset<T, roleFindFirstArgs<ExtArgs>>): Prisma__roleClient<$Result.GetResult<Prisma.$rolePayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Role that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {roleFindFirstOrThrowArgs} args - Arguments to find a Role
     * @example
     * // Get one Role
     * const role = await prisma.role.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends roleFindFirstOrThrowArgs>(args?: SelectSubset<T, roleFindFirstOrThrowArgs<ExtArgs>>): Prisma__roleClient<$Result.GetResult<Prisma.$rolePayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Roles that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {roleFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Roles
     * const roles = await prisma.role.findMany()
     * 
     * // Get first 10 Roles
     * const roles = await prisma.role.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const roleWithIdOnly = await prisma.role.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends roleFindManyArgs>(args?: SelectSubset<T, roleFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$rolePayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Role.
     * @param {roleCreateArgs} args - Arguments to create a Role.
     * @example
     * // Create one Role
     * const Role = await prisma.role.create({
     *   data: {
     *     // ... data to create a Role
     *   }
     * })
     * 
     */
    create<T extends roleCreateArgs>(args: SelectSubset<T, roleCreateArgs<ExtArgs>>): Prisma__roleClient<$Result.GetResult<Prisma.$rolePayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Roles.
     * @param {roleCreateManyArgs} args - Arguments to create many Roles.
     * @example
     * // Create many Roles
     * const role = await prisma.role.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends roleCreateManyArgs>(args?: SelectSubset<T, roleCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Roles and returns the data saved in the database.
     * @param {roleCreateManyAndReturnArgs} args - Arguments to create many Roles.
     * @example
     * // Create many Roles
     * const role = await prisma.role.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Roles and only return the `id`
     * const roleWithIdOnly = await prisma.role.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends roleCreateManyAndReturnArgs>(args?: SelectSubset<T, roleCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$rolePayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Role.
     * @param {roleDeleteArgs} args - Arguments to delete one Role.
     * @example
     * // Delete one Role
     * const Role = await prisma.role.delete({
     *   where: {
     *     // ... filter to delete one Role
     *   }
     * })
     * 
     */
    delete<T extends roleDeleteArgs>(args: SelectSubset<T, roleDeleteArgs<ExtArgs>>): Prisma__roleClient<$Result.GetResult<Prisma.$rolePayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Role.
     * @param {roleUpdateArgs} args - Arguments to update one Role.
     * @example
     * // Update one Role
     * const role = await prisma.role.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends roleUpdateArgs>(args: SelectSubset<T, roleUpdateArgs<ExtArgs>>): Prisma__roleClient<$Result.GetResult<Prisma.$rolePayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Roles.
     * @param {roleDeleteManyArgs} args - Arguments to filter Roles to delete.
     * @example
     * // Delete a few Roles
     * const { count } = await prisma.role.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends roleDeleteManyArgs>(args?: SelectSubset<T, roleDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Roles.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {roleUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Roles
     * const role = await prisma.role.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends roleUpdateManyArgs>(args: SelectSubset<T, roleUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Roles and returns the data updated in the database.
     * @param {roleUpdateManyAndReturnArgs} args - Arguments to update many Roles.
     * @example
     * // Update many Roles
     * const role = await prisma.role.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Roles and only return the `id`
     * const roleWithIdOnly = await prisma.role.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends roleUpdateManyAndReturnArgs>(args: SelectSubset<T, roleUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$rolePayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Role.
     * @param {roleUpsertArgs} args - Arguments to update or create a Role.
     * @example
     * // Update or create a Role
     * const role = await prisma.role.upsert({
     *   create: {
     *     // ... data to create a Role
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Role we want to update
     *   }
     * })
     */
    upsert<T extends roleUpsertArgs>(args: SelectSubset<T, roleUpsertArgs<ExtArgs>>): Prisma__roleClient<$Result.GetResult<Prisma.$rolePayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Roles.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {roleCountArgs} args - Arguments to filter Roles to count.
     * @example
     * // Count the number of Roles
     * const count = await prisma.role.count({
     *   where: {
     *     // ... the filter for the Roles we want to count
     *   }
     * })
    **/
    count<T extends roleCountArgs>(
      args?: Subset<T, roleCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], RoleCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Role.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RoleAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends RoleAggregateArgs>(args: Subset<T, RoleAggregateArgs>): Prisma.PrismaPromise<GetRoleAggregateType<T>>

    /**
     * Group by Role.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {roleGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends roleGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: roleGroupByArgs['orderBy'] }
        : { orderBy?: roleGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, roleGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetRoleGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the role model
   */
  readonly fields: roleFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for role.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__roleClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    createduser<T extends userDefaultArgs<ExtArgs> = {}>(args?: Subset<T, userDefaultArgs<ExtArgs>>): Prisma__userClient<$Result.GetResult<Prisma.$userPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    updateduser<T extends role$updateduserArgs<ExtArgs> = {}>(args?: Subset<T, role$updateduserArgs<ExtArgs>>): Prisma__userClient<$Result.GetResult<Prisma.$userPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    rolepermissions<T extends role$rolepermissionsArgs<ExtArgs> = {}>(args?: Subset<T, role$rolepermissionsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$rolepermissionPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    userroles<T extends role$userrolesArgs<ExtArgs> = {}>(args?: Subset<T, role$userrolesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$userrolePayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the role model
   */
  interface roleFieldRefs {
    readonly id: FieldRef<"role", 'String'>
    readonly name: FieldRef<"role", 'String'>
    readonly createdby: FieldRef<"role", 'String'>
    readonly createdat: FieldRef<"role", 'DateTime'>
    readonly updatedby: FieldRef<"role", 'String'>
    readonly updatedat: FieldRef<"role", 'DateTime'>
    readonly issystemrole: FieldRef<"role", 'Boolean'>
  }
    

  // Custom InputTypes
  /**
   * role findUnique
   */
  export type roleFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the role
     */
    select?: roleSelect<ExtArgs> | null
    /**
     * Omit specific fields from the role
     */
    omit?: roleOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: roleInclude<ExtArgs> | null
    /**
     * Filter, which role to fetch.
     */
    where: roleWhereUniqueInput
  }

  /**
   * role findUniqueOrThrow
   */
  export type roleFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the role
     */
    select?: roleSelect<ExtArgs> | null
    /**
     * Omit specific fields from the role
     */
    omit?: roleOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: roleInclude<ExtArgs> | null
    /**
     * Filter, which role to fetch.
     */
    where: roleWhereUniqueInput
  }

  /**
   * role findFirst
   */
  export type roleFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the role
     */
    select?: roleSelect<ExtArgs> | null
    /**
     * Omit specific fields from the role
     */
    omit?: roleOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: roleInclude<ExtArgs> | null
    /**
     * Filter, which role to fetch.
     */
    where?: roleWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of roles to fetch.
     */
    orderBy?: roleOrderByWithRelationInput | roleOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for roles.
     */
    cursor?: roleWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` roles from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` roles.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of roles.
     */
    distinct?: RoleScalarFieldEnum | RoleScalarFieldEnum[]
  }

  /**
   * role findFirstOrThrow
   */
  export type roleFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the role
     */
    select?: roleSelect<ExtArgs> | null
    /**
     * Omit specific fields from the role
     */
    omit?: roleOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: roleInclude<ExtArgs> | null
    /**
     * Filter, which role to fetch.
     */
    where?: roleWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of roles to fetch.
     */
    orderBy?: roleOrderByWithRelationInput | roleOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for roles.
     */
    cursor?: roleWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` roles from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` roles.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of roles.
     */
    distinct?: RoleScalarFieldEnum | RoleScalarFieldEnum[]
  }

  /**
   * role findMany
   */
  export type roleFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the role
     */
    select?: roleSelect<ExtArgs> | null
    /**
     * Omit specific fields from the role
     */
    omit?: roleOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: roleInclude<ExtArgs> | null
    /**
     * Filter, which roles to fetch.
     */
    where?: roleWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of roles to fetch.
     */
    orderBy?: roleOrderByWithRelationInput | roleOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing roles.
     */
    cursor?: roleWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` roles from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` roles.
     */
    skip?: number
    distinct?: RoleScalarFieldEnum | RoleScalarFieldEnum[]
  }

  /**
   * role create
   */
  export type roleCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the role
     */
    select?: roleSelect<ExtArgs> | null
    /**
     * Omit specific fields from the role
     */
    omit?: roleOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: roleInclude<ExtArgs> | null
    /**
     * The data needed to create a role.
     */
    data: XOR<roleCreateInput, roleUncheckedCreateInput>
  }

  /**
   * role createMany
   */
  export type roleCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many roles.
     */
    data: roleCreateManyInput | roleCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * role createManyAndReturn
   */
  export type roleCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the role
     */
    select?: roleSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the role
     */
    omit?: roleOmit<ExtArgs> | null
    /**
     * The data used to create many roles.
     */
    data: roleCreateManyInput | roleCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: roleIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * role update
   */
  export type roleUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the role
     */
    select?: roleSelect<ExtArgs> | null
    /**
     * Omit specific fields from the role
     */
    omit?: roleOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: roleInclude<ExtArgs> | null
    /**
     * The data needed to update a role.
     */
    data: XOR<roleUpdateInput, roleUncheckedUpdateInput>
    /**
     * Choose, which role to update.
     */
    where: roleWhereUniqueInput
  }

  /**
   * role updateMany
   */
  export type roleUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update roles.
     */
    data: XOR<roleUpdateManyMutationInput, roleUncheckedUpdateManyInput>
    /**
     * Filter which roles to update
     */
    where?: roleWhereInput
    /**
     * Limit how many roles to update.
     */
    limit?: number
  }

  /**
   * role updateManyAndReturn
   */
  export type roleUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the role
     */
    select?: roleSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the role
     */
    omit?: roleOmit<ExtArgs> | null
    /**
     * The data used to update roles.
     */
    data: XOR<roleUpdateManyMutationInput, roleUncheckedUpdateManyInput>
    /**
     * Filter which roles to update
     */
    where?: roleWhereInput
    /**
     * Limit how many roles to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: roleIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * role upsert
   */
  export type roleUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the role
     */
    select?: roleSelect<ExtArgs> | null
    /**
     * Omit specific fields from the role
     */
    omit?: roleOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: roleInclude<ExtArgs> | null
    /**
     * The filter to search for the role to update in case it exists.
     */
    where: roleWhereUniqueInput
    /**
     * In case the role found by the `where` argument doesn't exist, create a new role with this data.
     */
    create: XOR<roleCreateInput, roleUncheckedCreateInput>
    /**
     * In case the role was found with the provided `where` argument, update it with this data.
     */
    update: XOR<roleUpdateInput, roleUncheckedUpdateInput>
  }

  /**
   * role delete
   */
  export type roleDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the role
     */
    select?: roleSelect<ExtArgs> | null
    /**
     * Omit specific fields from the role
     */
    omit?: roleOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: roleInclude<ExtArgs> | null
    /**
     * Filter which role to delete.
     */
    where: roleWhereUniqueInput
  }

  /**
   * role deleteMany
   */
  export type roleDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which roles to delete
     */
    where?: roleWhereInput
    /**
     * Limit how many roles to delete.
     */
    limit?: number
  }

  /**
   * role.updateduser
   */
  export type role$updateduserArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user
     */
    select?: userSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user
     */
    omit?: userOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: userInclude<ExtArgs> | null
    where?: userWhereInput
  }

  /**
   * role.rolepermissions
   */
  export type role$rolepermissionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the rolepermission
     */
    select?: rolepermissionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the rolepermission
     */
    omit?: rolepermissionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: rolepermissionInclude<ExtArgs> | null
    where?: rolepermissionWhereInput
    orderBy?: rolepermissionOrderByWithRelationInput | rolepermissionOrderByWithRelationInput[]
    cursor?: rolepermissionWhereUniqueInput
    take?: number
    skip?: number
    distinct?: RolepermissionScalarFieldEnum | RolepermissionScalarFieldEnum[]
  }

  /**
   * role.userroles
   */
  export type role$userrolesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the userrole
     */
    select?: userroleSelect<ExtArgs> | null
    /**
     * Omit specific fields from the userrole
     */
    omit?: userroleOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: userroleInclude<ExtArgs> | null
    where?: userroleWhereInput
    orderBy?: userroleOrderByWithRelationInput | userroleOrderByWithRelationInput[]
    cursor?: userroleWhereUniqueInput
    take?: number
    skip?: number
    distinct?: UserroleScalarFieldEnum | UserroleScalarFieldEnum[]
  }

  /**
   * role without action
   */
  export type roleDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the role
     */
    select?: roleSelect<ExtArgs> | null
    /**
     * Omit specific fields from the role
     */
    omit?: roleOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: roleInclude<ExtArgs> | null
  }


  /**
   * Model notification
   */

  export type AggregateNotification = {
    _count: NotificationCountAggregateOutputType | null
    _avg: NotificationAvgAggregateOutputType | null
    _sum: NotificationSumAggregateOutputType | null
    _min: NotificationMinAggregateOutputType | null
    _max: NotificationMaxAggregateOutputType | null
  }

  export type NotificationAvgAggregateOutputType = {
    createdby: number | null
  }

  export type NotificationSumAggregateOutputType = {
    createdby: number | null
  }

  export type NotificationMinAggregateOutputType = {
    id: string | null
    touserid: string | null
    message: string | null
    url: string | null
    createdby: number | null
    createdat: Date | null
    readedat: Date | null
  }

  export type NotificationMaxAggregateOutputType = {
    id: string | null
    touserid: string | null
    message: string | null
    url: string | null
    createdby: number | null
    createdat: Date | null
    readedat: Date | null
  }

  export type NotificationCountAggregateOutputType = {
    id: number
    touserid: number
    message: number
    url: number
    createdby: number
    createdat: number
    readedat: number
    _all: number
  }


  export type NotificationAvgAggregateInputType = {
    createdby?: true
  }

  export type NotificationSumAggregateInputType = {
    createdby?: true
  }

  export type NotificationMinAggregateInputType = {
    id?: true
    touserid?: true
    message?: true
    url?: true
    createdby?: true
    createdat?: true
    readedat?: true
  }

  export type NotificationMaxAggregateInputType = {
    id?: true
    touserid?: true
    message?: true
    url?: true
    createdby?: true
    createdat?: true
    readedat?: true
  }

  export type NotificationCountAggregateInputType = {
    id?: true
    touserid?: true
    message?: true
    url?: true
    createdby?: true
    createdat?: true
    readedat?: true
    _all?: true
  }

  export type NotificationAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which notification to aggregate.
     */
    where?: notificationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of notifications to fetch.
     */
    orderBy?: notificationOrderByWithRelationInput | notificationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: notificationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` notifications from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` notifications.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned notifications
    **/
    _count?: true | NotificationCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: NotificationAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: NotificationSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: NotificationMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: NotificationMaxAggregateInputType
  }

  export type GetNotificationAggregateType<T extends NotificationAggregateArgs> = {
        [P in keyof T & keyof AggregateNotification]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateNotification[P]>
      : GetScalarType<T[P], AggregateNotification[P]>
  }




  export type notificationGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: notificationWhereInput
    orderBy?: notificationOrderByWithAggregationInput | notificationOrderByWithAggregationInput[]
    by: NotificationScalarFieldEnum[] | NotificationScalarFieldEnum
    having?: notificationScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: NotificationCountAggregateInputType | true
    _avg?: NotificationAvgAggregateInputType
    _sum?: NotificationSumAggregateInputType
    _min?: NotificationMinAggregateInputType
    _max?: NotificationMaxAggregateInputType
  }

  export type NotificationGroupByOutputType = {
    id: string
    touserid: string
    message: string
    url: string
    createdby: number
    createdat: Date
    readedat: Date | null
    _count: NotificationCountAggregateOutputType | null
    _avg: NotificationAvgAggregateOutputType | null
    _sum: NotificationSumAggregateOutputType | null
    _min: NotificationMinAggregateOutputType | null
    _max: NotificationMaxAggregateOutputType | null
  }

  type GetNotificationGroupByPayload<T extends notificationGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<NotificationGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof NotificationGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], NotificationGroupByOutputType[P]>
            : GetScalarType<T[P], NotificationGroupByOutputType[P]>
        }
      >
    >


  export type notificationSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    touserid?: boolean
    message?: boolean
    url?: boolean
    createdby?: boolean
    createdat?: boolean
    readedat?: boolean
    to?: boolean | userDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["notification"]>

  export type notificationSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    touserid?: boolean
    message?: boolean
    url?: boolean
    createdby?: boolean
    createdat?: boolean
    readedat?: boolean
    to?: boolean | userDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["notification"]>

  export type notificationSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    touserid?: boolean
    message?: boolean
    url?: boolean
    createdby?: boolean
    createdat?: boolean
    readedat?: boolean
    to?: boolean | userDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["notification"]>

  export type notificationSelectScalar = {
    id?: boolean
    touserid?: boolean
    message?: boolean
    url?: boolean
    createdby?: boolean
    createdat?: boolean
    readedat?: boolean
  }

  export type notificationOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "touserid" | "message" | "url" | "createdby" | "createdat" | "readedat", ExtArgs["result"]["notification"]>
  export type notificationInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    to?: boolean | userDefaultArgs<ExtArgs>
  }
  export type notificationIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    to?: boolean | userDefaultArgs<ExtArgs>
  }
  export type notificationIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    to?: boolean | userDefaultArgs<ExtArgs>
  }

  export type $notificationPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "notification"
    objects: {
      to: Prisma.$userPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      touserid: string
      message: string
      url: string
      createdby: number
      createdat: Date
      readedat: Date | null
    }, ExtArgs["result"]["notification"]>
    composites: {}
  }

  type notificationGetPayload<S extends boolean | null | undefined | notificationDefaultArgs> = $Result.GetResult<Prisma.$notificationPayload, S>

  type notificationCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<notificationFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: NotificationCountAggregateInputType | true
    }

  export interface notificationDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['notification'], meta: { name: 'notification' } }
    /**
     * Find zero or one Notification that matches the filter.
     * @param {notificationFindUniqueArgs} args - Arguments to find a Notification
     * @example
     * // Get one Notification
     * const notification = await prisma.notification.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends notificationFindUniqueArgs>(args: SelectSubset<T, notificationFindUniqueArgs<ExtArgs>>): Prisma__notificationClient<$Result.GetResult<Prisma.$notificationPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Notification that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {notificationFindUniqueOrThrowArgs} args - Arguments to find a Notification
     * @example
     * // Get one Notification
     * const notification = await prisma.notification.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends notificationFindUniqueOrThrowArgs>(args: SelectSubset<T, notificationFindUniqueOrThrowArgs<ExtArgs>>): Prisma__notificationClient<$Result.GetResult<Prisma.$notificationPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Notification that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {notificationFindFirstArgs} args - Arguments to find a Notification
     * @example
     * // Get one Notification
     * const notification = await prisma.notification.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends notificationFindFirstArgs>(args?: SelectSubset<T, notificationFindFirstArgs<ExtArgs>>): Prisma__notificationClient<$Result.GetResult<Prisma.$notificationPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Notification that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {notificationFindFirstOrThrowArgs} args - Arguments to find a Notification
     * @example
     * // Get one Notification
     * const notification = await prisma.notification.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends notificationFindFirstOrThrowArgs>(args?: SelectSubset<T, notificationFindFirstOrThrowArgs<ExtArgs>>): Prisma__notificationClient<$Result.GetResult<Prisma.$notificationPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Notifications that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {notificationFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Notifications
     * const notifications = await prisma.notification.findMany()
     * 
     * // Get first 10 Notifications
     * const notifications = await prisma.notification.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const notificationWithIdOnly = await prisma.notification.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends notificationFindManyArgs>(args?: SelectSubset<T, notificationFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$notificationPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Notification.
     * @param {notificationCreateArgs} args - Arguments to create a Notification.
     * @example
     * // Create one Notification
     * const Notification = await prisma.notification.create({
     *   data: {
     *     // ... data to create a Notification
     *   }
     * })
     * 
     */
    create<T extends notificationCreateArgs>(args: SelectSubset<T, notificationCreateArgs<ExtArgs>>): Prisma__notificationClient<$Result.GetResult<Prisma.$notificationPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Notifications.
     * @param {notificationCreateManyArgs} args - Arguments to create many Notifications.
     * @example
     * // Create many Notifications
     * const notification = await prisma.notification.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends notificationCreateManyArgs>(args?: SelectSubset<T, notificationCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Notifications and returns the data saved in the database.
     * @param {notificationCreateManyAndReturnArgs} args - Arguments to create many Notifications.
     * @example
     * // Create many Notifications
     * const notification = await prisma.notification.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Notifications and only return the `id`
     * const notificationWithIdOnly = await prisma.notification.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends notificationCreateManyAndReturnArgs>(args?: SelectSubset<T, notificationCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$notificationPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Notification.
     * @param {notificationDeleteArgs} args - Arguments to delete one Notification.
     * @example
     * // Delete one Notification
     * const Notification = await prisma.notification.delete({
     *   where: {
     *     // ... filter to delete one Notification
     *   }
     * })
     * 
     */
    delete<T extends notificationDeleteArgs>(args: SelectSubset<T, notificationDeleteArgs<ExtArgs>>): Prisma__notificationClient<$Result.GetResult<Prisma.$notificationPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Notification.
     * @param {notificationUpdateArgs} args - Arguments to update one Notification.
     * @example
     * // Update one Notification
     * const notification = await prisma.notification.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends notificationUpdateArgs>(args: SelectSubset<T, notificationUpdateArgs<ExtArgs>>): Prisma__notificationClient<$Result.GetResult<Prisma.$notificationPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Notifications.
     * @param {notificationDeleteManyArgs} args - Arguments to filter Notifications to delete.
     * @example
     * // Delete a few Notifications
     * const { count } = await prisma.notification.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends notificationDeleteManyArgs>(args?: SelectSubset<T, notificationDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Notifications.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {notificationUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Notifications
     * const notification = await prisma.notification.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends notificationUpdateManyArgs>(args: SelectSubset<T, notificationUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Notifications and returns the data updated in the database.
     * @param {notificationUpdateManyAndReturnArgs} args - Arguments to update many Notifications.
     * @example
     * // Update many Notifications
     * const notification = await prisma.notification.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Notifications and only return the `id`
     * const notificationWithIdOnly = await prisma.notification.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends notificationUpdateManyAndReturnArgs>(args: SelectSubset<T, notificationUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$notificationPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Notification.
     * @param {notificationUpsertArgs} args - Arguments to update or create a Notification.
     * @example
     * // Update or create a Notification
     * const notification = await prisma.notification.upsert({
     *   create: {
     *     // ... data to create a Notification
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Notification we want to update
     *   }
     * })
     */
    upsert<T extends notificationUpsertArgs>(args: SelectSubset<T, notificationUpsertArgs<ExtArgs>>): Prisma__notificationClient<$Result.GetResult<Prisma.$notificationPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Notifications.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {notificationCountArgs} args - Arguments to filter Notifications to count.
     * @example
     * // Count the number of Notifications
     * const count = await prisma.notification.count({
     *   where: {
     *     // ... the filter for the Notifications we want to count
     *   }
     * })
    **/
    count<T extends notificationCountArgs>(
      args?: Subset<T, notificationCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], NotificationCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Notification.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {NotificationAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends NotificationAggregateArgs>(args: Subset<T, NotificationAggregateArgs>): Prisma.PrismaPromise<GetNotificationAggregateType<T>>

    /**
     * Group by Notification.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {notificationGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends notificationGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: notificationGroupByArgs['orderBy'] }
        : { orderBy?: notificationGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, notificationGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetNotificationGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the notification model
   */
  readonly fields: notificationFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for notification.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__notificationClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    to<T extends userDefaultArgs<ExtArgs> = {}>(args?: Subset<T, userDefaultArgs<ExtArgs>>): Prisma__userClient<$Result.GetResult<Prisma.$userPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the notification model
   */
  interface notificationFieldRefs {
    readonly id: FieldRef<"notification", 'String'>
    readonly touserid: FieldRef<"notification", 'String'>
    readonly message: FieldRef<"notification", 'String'>
    readonly url: FieldRef<"notification", 'String'>
    readonly createdby: FieldRef<"notification", 'Int'>
    readonly createdat: FieldRef<"notification", 'DateTime'>
    readonly readedat: FieldRef<"notification", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * notification findUnique
   */
  export type notificationFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the notification
     */
    select?: notificationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the notification
     */
    omit?: notificationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: notificationInclude<ExtArgs> | null
    /**
     * Filter, which notification to fetch.
     */
    where: notificationWhereUniqueInput
  }

  /**
   * notification findUniqueOrThrow
   */
  export type notificationFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the notification
     */
    select?: notificationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the notification
     */
    omit?: notificationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: notificationInclude<ExtArgs> | null
    /**
     * Filter, which notification to fetch.
     */
    where: notificationWhereUniqueInput
  }

  /**
   * notification findFirst
   */
  export type notificationFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the notification
     */
    select?: notificationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the notification
     */
    omit?: notificationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: notificationInclude<ExtArgs> | null
    /**
     * Filter, which notification to fetch.
     */
    where?: notificationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of notifications to fetch.
     */
    orderBy?: notificationOrderByWithRelationInput | notificationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for notifications.
     */
    cursor?: notificationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` notifications from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` notifications.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of notifications.
     */
    distinct?: NotificationScalarFieldEnum | NotificationScalarFieldEnum[]
  }

  /**
   * notification findFirstOrThrow
   */
  export type notificationFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the notification
     */
    select?: notificationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the notification
     */
    omit?: notificationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: notificationInclude<ExtArgs> | null
    /**
     * Filter, which notification to fetch.
     */
    where?: notificationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of notifications to fetch.
     */
    orderBy?: notificationOrderByWithRelationInput | notificationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for notifications.
     */
    cursor?: notificationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` notifications from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` notifications.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of notifications.
     */
    distinct?: NotificationScalarFieldEnum | NotificationScalarFieldEnum[]
  }

  /**
   * notification findMany
   */
  export type notificationFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the notification
     */
    select?: notificationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the notification
     */
    omit?: notificationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: notificationInclude<ExtArgs> | null
    /**
     * Filter, which notifications to fetch.
     */
    where?: notificationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of notifications to fetch.
     */
    orderBy?: notificationOrderByWithRelationInput | notificationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing notifications.
     */
    cursor?: notificationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` notifications from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` notifications.
     */
    skip?: number
    distinct?: NotificationScalarFieldEnum | NotificationScalarFieldEnum[]
  }

  /**
   * notification create
   */
  export type notificationCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the notification
     */
    select?: notificationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the notification
     */
    omit?: notificationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: notificationInclude<ExtArgs> | null
    /**
     * The data needed to create a notification.
     */
    data: XOR<notificationCreateInput, notificationUncheckedCreateInput>
  }

  /**
   * notification createMany
   */
  export type notificationCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many notifications.
     */
    data: notificationCreateManyInput | notificationCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * notification createManyAndReturn
   */
  export type notificationCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the notification
     */
    select?: notificationSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the notification
     */
    omit?: notificationOmit<ExtArgs> | null
    /**
     * The data used to create many notifications.
     */
    data: notificationCreateManyInput | notificationCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: notificationIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * notification update
   */
  export type notificationUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the notification
     */
    select?: notificationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the notification
     */
    omit?: notificationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: notificationInclude<ExtArgs> | null
    /**
     * The data needed to update a notification.
     */
    data: XOR<notificationUpdateInput, notificationUncheckedUpdateInput>
    /**
     * Choose, which notification to update.
     */
    where: notificationWhereUniqueInput
  }

  /**
   * notification updateMany
   */
  export type notificationUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update notifications.
     */
    data: XOR<notificationUpdateManyMutationInput, notificationUncheckedUpdateManyInput>
    /**
     * Filter which notifications to update
     */
    where?: notificationWhereInput
    /**
     * Limit how many notifications to update.
     */
    limit?: number
  }

  /**
   * notification updateManyAndReturn
   */
  export type notificationUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the notification
     */
    select?: notificationSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the notification
     */
    omit?: notificationOmit<ExtArgs> | null
    /**
     * The data used to update notifications.
     */
    data: XOR<notificationUpdateManyMutationInput, notificationUncheckedUpdateManyInput>
    /**
     * Filter which notifications to update
     */
    where?: notificationWhereInput
    /**
     * Limit how many notifications to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: notificationIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * notification upsert
   */
  export type notificationUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the notification
     */
    select?: notificationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the notification
     */
    omit?: notificationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: notificationInclude<ExtArgs> | null
    /**
     * The filter to search for the notification to update in case it exists.
     */
    where: notificationWhereUniqueInput
    /**
     * In case the notification found by the `where` argument doesn't exist, create a new notification with this data.
     */
    create: XOR<notificationCreateInput, notificationUncheckedCreateInput>
    /**
     * In case the notification was found with the provided `where` argument, update it with this data.
     */
    update: XOR<notificationUpdateInput, notificationUncheckedUpdateInput>
  }

  /**
   * notification delete
   */
  export type notificationDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the notification
     */
    select?: notificationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the notification
     */
    omit?: notificationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: notificationInclude<ExtArgs> | null
    /**
     * Filter which notification to delete.
     */
    where: notificationWhereUniqueInput
  }

  /**
   * notification deleteMany
   */
  export type notificationDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which notifications to delete
     */
    where?: notificationWhereInput
    /**
     * Limit how many notifications to delete.
     */
    limit?: number
  }

  /**
   * notification without action
   */
  export type notificationDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the notification
     */
    select?: notificationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the notification
     */
    omit?: notificationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: notificationInclude<ExtArgs> | null
  }


  /**
   * Model permission
   */

  export type AggregatePermission = {
    _count: PermissionCountAggregateOutputType | null
    _min: PermissionMinAggregateOutputType | null
    _max: PermissionMaxAggregateOutputType | null
  }

  export type PermissionMinAggregateOutputType = {
    id: string | null
    name: string | null
    value: string | null
    group: string | null
    description: string | null
    createdby: string | null
    createdat: Date | null
    updatedby: string | null
    updatedat: Date | null
  }

  export type PermissionMaxAggregateOutputType = {
    id: string | null
    name: string | null
    value: string | null
    group: string | null
    description: string | null
    createdby: string | null
    createdat: Date | null
    updatedby: string | null
    updatedat: Date | null
  }

  export type PermissionCountAggregateOutputType = {
    id: number
    name: number
    value: number
    group: number
    description: number
    createdby: number
    createdat: number
    updatedby: number
    updatedat: number
    _all: number
  }


  export type PermissionMinAggregateInputType = {
    id?: true
    name?: true
    value?: true
    group?: true
    description?: true
    createdby?: true
    createdat?: true
    updatedby?: true
    updatedat?: true
  }

  export type PermissionMaxAggregateInputType = {
    id?: true
    name?: true
    value?: true
    group?: true
    description?: true
    createdby?: true
    createdat?: true
    updatedby?: true
    updatedat?: true
  }

  export type PermissionCountAggregateInputType = {
    id?: true
    name?: true
    value?: true
    group?: true
    description?: true
    createdby?: true
    createdat?: true
    updatedby?: true
    updatedat?: true
    _all?: true
  }

  export type PermissionAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which permission to aggregate.
     */
    where?: permissionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of permissions to fetch.
     */
    orderBy?: permissionOrderByWithRelationInput | permissionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: permissionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` permissions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` permissions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned permissions
    **/
    _count?: true | PermissionCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: PermissionMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: PermissionMaxAggregateInputType
  }

  export type GetPermissionAggregateType<T extends PermissionAggregateArgs> = {
        [P in keyof T & keyof AggregatePermission]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregatePermission[P]>
      : GetScalarType<T[P], AggregatePermission[P]>
  }




  export type permissionGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: permissionWhereInput
    orderBy?: permissionOrderByWithAggregationInput | permissionOrderByWithAggregationInput[]
    by: PermissionScalarFieldEnum[] | PermissionScalarFieldEnum
    having?: permissionScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: PermissionCountAggregateInputType | true
    _min?: PermissionMinAggregateInputType
    _max?: PermissionMaxAggregateInputType
  }

  export type PermissionGroupByOutputType = {
    id: string
    name: string
    value: string
    group: string
    description: string
    createdby: string
    createdat: Date
    updatedby: string | null
    updatedat: Date | null
    _count: PermissionCountAggregateOutputType | null
    _min: PermissionMinAggregateOutputType | null
    _max: PermissionMaxAggregateOutputType | null
  }

  type GetPermissionGroupByPayload<T extends permissionGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<PermissionGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof PermissionGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], PermissionGroupByOutputType[P]>
            : GetScalarType<T[P], PermissionGroupByOutputType[P]>
        }
      >
    >


  export type permissionSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    value?: boolean
    group?: boolean
    description?: boolean
    createdby?: boolean
    createdat?: boolean
    updatedby?: boolean
    updatedat?: boolean
    createduser?: boolean | userDefaultArgs<ExtArgs>
    updateduser?: boolean | permission$updateduserArgs<ExtArgs>
    rolepermissions?: boolean | permission$rolepermissionsArgs<ExtArgs>
    userpermissions?: boolean | permission$userpermissionsArgs<ExtArgs>
    _count?: boolean | PermissionCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["permission"]>

  export type permissionSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    value?: boolean
    group?: boolean
    description?: boolean
    createdby?: boolean
    createdat?: boolean
    updatedby?: boolean
    updatedat?: boolean
    createduser?: boolean | userDefaultArgs<ExtArgs>
    updateduser?: boolean | permission$updateduserArgs<ExtArgs>
  }, ExtArgs["result"]["permission"]>

  export type permissionSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    value?: boolean
    group?: boolean
    description?: boolean
    createdby?: boolean
    createdat?: boolean
    updatedby?: boolean
    updatedat?: boolean
    createduser?: boolean | userDefaultArgs<ExtArgs>
    updateduser?: boolean | permission$updateduserArgs<ExtArgs>
  }, ExtArgs["result"]["permission"]>

  export type permissionSelectScalar = {
    id?: boolean
    name?: boolean
    value?: boolean
    group?: boolean
    description?: boolean
    createdby?: boolean
    createdat?: boolean
    updatedby?: boolean
    updatedat?: boolean
  }

  export type permissionOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "name" | "value" | "group" | "description" | "createdby" | "createdat" | "updatedby" | "updatedat", ExtArgs["result"]["permission"]>
  export type permissionInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    createduser?: boolean | userDefaultArgs<ExtArgs>
    updateduser?: boolean | permission$updateduserArgs<ExtArgs>
    rolepermissions?: boolean | permission$rolepermissionsArgs<ExtArgs>
    userpermissions?: boolean | permission$userpermissionsArgs<ExtArgs>
    _count?: boolean | PermissionCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type permissionIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    createduser?: boolean | userDefaultArgs<ExtArgs>
    updateduser?: boolean | permission$updateduserArgs<ExtArgs>
  }
  export type permissionIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    createduser?: boolean | userDefaultArgs<ExtArgs>
    updateduser?: boolean | permission$updateduserArgs<ExtArgs>
  }

  export type $permissionPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "permission"
    objects: {
      createduser: Prisma.$userPayload<ExtArgs>
      updateduser: Prisma.$userPayload<ExtArgs> | null
      rolepermissions: Prisma.$rolepermissionPayload<ExtArgs>[]
      userpermissions: Prisma.$userpermissionPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      name: string
      value: string
      group: string
      description: string
      createdby: string
      createdat: Date
      updatedby: string | null
      updatedat: Date | null
    }, ExtArgs["result"]["permission"]>
    composites: {}
  }

  type permissionGetPayload<S extends boolean | null | undefined | permissionDefaultArgs> = $Result.GetResult<Prisma.$permissionPayload, S>

  type permissionCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<permissionFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: PermissionCountAggregateInputType | true
    }

  export interface permissionDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['permission'], meta: { name: 'permission' } }
    /**
     * Find zero or one Permission that matches the filter.
     * @param {permissionFindUniqueArgs} args - Arguments to find a Permission
     * @example
     * // Get one Permission
     * const permission = await prisma.permission.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends permissionFindUniqueArgs>(args: SelectSubset<T, permissionFindUniqueArgs<ExtArgs>>): Prisma__permissionClient<$Result.GetResult<Prisma.$permissionPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Permission that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {permissionFindUniqueOrThrowArgs} args - Arguments to find a Permission
     * @example
     * // Get one Permission
     * const permission = await prisma.permission.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends permissionFindUniqueOrThrowArgs>(args: SelectSubset<T, permissionFindUniqueOrThrowArgs<ExtArgs>>): Prisma__permissionClient<$Result.GetResult<Prisma.$permissionPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Permission that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {permissionFindFirstArgs} args - Arguments to find a Permission
     * @example
     * // Get one Permission
     * const permission = await prisma.permission.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends permissionFindFirstArgs>(args?: SelectSubset<T, permissionFindFirstArgs<ExtArgs>>): Prisma__permissionClient<$Result.GetResult<Prisma.$permissionPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Permission that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {permissionFindFirstOrThrowArgs} args - Arguments to find a Permission
     * @example
     * // Get one Permission
     * const permission = await prisma.permission.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends permissionFindFirstOrThrowArgs>(args?: SelectSubset<T, permissionFindFirstOrThrowArgs<ExtArgs>>): Prisma__permissionClient<$Result.GetResult<Prisma.$permissionPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Permissions that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {permissionFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Permissions
     * const permissions = await prisma.permission.findMany()
     * 
     * // Get first 10 Permissions
     * const permissions = await prisma.permission.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const permissionWithIdOnly = await prisma.permission.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends permissionFindManyArgs>(args?: SelectSubset<T, permissionFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$permissionPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Permission.
     * @param {permissionCreateArgs} args - Arguments to create a Permission.
     * @example
     * // Create one Permission
     * const Permission = await prisma.permission.create({
     *   data: {
     *     // ... data to create a Permission
     *   }
     * })
     * 
     */
    create<T extends permissionCreateArgs>(args: SelectSubset<T, permissionCreateArgs<ExtArgs>>): Prisma__permissionClient<$Result.GetResult<Prisma.$permissionPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Permissions.
     * @param {permissionCreateManyArgs} args - Arguments to create many Permissions.
     * @example
     * // Create many Permissions
     * const permission = await prisma.permission.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends permissionCreateManyArgs>(args?: SelectSubset<T, permissionCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Permissions and returns the data saved in the database.
     * @param {permissionCreateManyAndReturnArgs} args - Arguments to create many Permissions.
     * @example
     * // Create many Permissions
     * const permission = await prisma.permission.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Permissions and only return the `id`
     * const permissionWithIdOnly = await prisma.permission.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends permissionCreateManyAndReturnArgs>(args?: SelectSubset<T, permissionCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$permissionPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Permission.
     * @param {permissionDeleteArgs} args - Arguments to delete one Permission.
     * @example
     * // Delete one Permission
     * const Permission = await prisma.permission.delete({
     *   where: {
     *     // ... filter to delete one Permission
     *   }
     * })
     * 
     */
    delete<T extends permissionDeleteArgs>(args: SelectSubset<T, permissionDeleteArgs<ExtArgs>>): Prisma__permissionClient<$Result.GetResult<Prisma.$permissionPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Permission.
     * @param {permissionUpdateArgs} args - Arguments to update one Permission.
     * @example
     * // Update one Permission
     * const permission = await prisma.permission.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends permissionUpdateArgs>(args: SelectSubset<T, permissionUpdateArgs<ExtArgs>>): Prisma__permissionClient<$Result.GetResult<Prisma.$permissionPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Permissions.
     * @param {permissionDeleteManyArgs} args - Arguments to filter Permissions to delete.
     * @example
     * // Delete a few Permissions
     * const { count } = await prisma.permission.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends permissionDeleteManyArgs>(args?: SelectSubset<T, permissionDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Permissions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {permissionUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Permissions
     * const permission = await prisma.permission.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends permissionUpdateManyArgs>(args: SelectSubset<T, permissionUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Permissions and returns the data updated in the database.
     * @param {permissionUpdateManyAndReturnArgs} args - Arguments to update many Permissions.
     * @example
     * // Update many Permissions
     * const permission = await prisma.permission.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Permissions and only return the `id`
     * const permissionWithIdOnly = await prisma.permission.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends permissionUpdateManyAndReturnArgs>(args: SelectSubset<T, permissionUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$permissionPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Permission.
     * @param {permissionUpsertArgs} args - Arguments to update or create a Permission.
     * @example
     * // Update or create a Permission
     * const permission = await prisma.permission.upsert({
     *   create: {
     *     // ... data to create a Permission
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Permission we want to update
     *   }
     * })
     */
    upsert<T extends permissionUpsertArgs>(args: SelectSubset<T, permissionUpsertArgs<ExtArgs>>): Prisma__permissionClient<$Result.GetResult<Prisma.$permissionPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Permissions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {permissionCountArgs} args - Arguments to filter Permissions to count.
     * @example
     * // Count the number of Permissions
     * const count = await prisma.permission.count({
     *   where: {
     *     // ... the filter for the Permissions we want to count
     *   }
     * })
    **/
    count<T extends permissionCountArgs>(
      args?: Subset<T, permissionCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], PermissionCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Permission.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PermissionAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends PermissionAggregateArgs>(args: Subset<T, PermissionAggregateArgs>): Prisma.PrismaPromise<GetPermissionAggregateType<T>>

    /**
     * Group by Permission.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {permissionGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends permissionGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: permissionGroupByArgs['orderBy'] }
        : { orderBy?: permissionGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, permissionGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetPermissionGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the permission model
   */
  readonly fields: permissionFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for permission.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__permissionClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    createduser<T extends userDefaultArgs<ExtArgs> = {}>(args?: Subset<T, userDefaultArgs<ExtArgs>>): Prisma__userClient<$Result.GetResult<Prisma.$userPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    updateduser<T extends permission$updateduserArgs<ExtArgs> = {}>(args?: Subset<T, permission$updateduserArgs<ExtArgs>>): Prisma__userClient<$Result.GetResult<Prisma.$userPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    rolepermissions<T extends permission$rolepermissionsArgs<ExtArgs> = {}>(args?: Subset<T, permission$rolepermissionsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$rolepermissionPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    userpermissions<T extends permission$userpermissionsArgs<ExtArgs> = {}>(args?: Subset<T, permission$userpermissionsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$userpermissionPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the permission model
   */
  interface permissionFieldRefs {
    readonly id: FieldRef<"permission", 'String'>
    readonly name: FieldRef<"permission", 'String'>
    readonly value: FieldRef<"permission", 'String'>
    readonly group: FieldRef<"permission", 'String'>
    readonly description: FieldRef<"permission", 'String'>
    readonly createdby: FieldRef<"permission", 'String'>
    readonly createdat: FieldRef<"permission", 'DateTime'>
    readonly updatedby: FieldRef<"permission", 'String'>
    readonly updatedat: FieldRef<"permission", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * permission findUnique
   */
  export type permissionFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the permission
     */
    select?: permissionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the permission
     */
    omit?: permissionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: permissionInclude<ExtArgs> | null
    /**
     * Filter, which permission to fetch.
     */
    where: permissionWhereUniqueInput
  }

  /**
   * permission findUniqueOrThrow
   */
  export type permissionFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the permission
     */
    select?: permissionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the permission
     */
    omit?: permissionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: permissionInclude<ExtArgs> | null
    /**
     * Filter, which permission to fetch.
     */
    where: permissionWhereUniqueInput
  }

  /**
   * permission findFirst
   */
  export type permissionFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the permission
     */
    select?: permissionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the permission
     */
    omit?: permissionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: permissionInclude<ExtArgs> | null
    /**
     * Filter, which permission to fetch.
     */
    where?: permissionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of permissions to fetch.
     */
    orderBy?: permissionOrderByWithRelationInput | permissionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for permissions.
     */
    cursor?: permissionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` permissions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` permissions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of permissions.
     */
    distinct?: PermissionScalarFieldEnum | PermissionScalarFieldEnum[]
  }

  /**
   * permission findFirstOrThrow
   */
  export type permissionFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the permission
     */
    select?: permissionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the permission
     */
    omit?: permissionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: permissionInclude<ExtArgs> | null
    /**
     * Filter, which permission to fetch.
     */
    where?: permissionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of permissions to fetch.
     */
    orderBy?: permissionOrderByWithRelationInput | permissionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for permissions.
     */
    cursor?: permissionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` permissions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` permissions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of permissions.
     */
    distinct?: PermissionScalarFieldEnum | PermissionScalarFieldEnum[]
  }

  /**
   * permission findMany
   */
  export type permissionFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the permission
     */
    select?: permissionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the permission
     */
    omit?: permissionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: permissionInclude<ExtArgs> | null
    /**
     * Filter, which permissions to fetch.
     */
    where?: permissionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of permissions to fetch.
     */
    orderBy?: permissionOrderByWithRelationInput | permissionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing permissions.
     */
    cursor?: permissionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` permissions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` permissions.
     */
    skip?: number
    distinct?: PermissionScalarFieldEnum | PermissionScalarFieldEnum[]
  }

  /**
   * permission create
   */
  export type permissionCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the permission
     */
    select?: permissionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the permission
     */
    omit?: permissionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: permissionInclude<ExtArgs> | null
    /**
     * The data needed to create a permission.
     */
    data: XOR<permissionCreateInput, permissionUncheckedCreateInput>
  }

  /**
   * permission createMany
   */
  export type permissionCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many permissions.
     */
    data: permissionCreateManyInput | permissionCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * permission createManyAndReturn
   */
  export type permissionCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the permission
     */
    select?: permissionSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the permission
     */
    omit?: permissionOmit<ExtArgs> | null
    /**
     * The data used to create many permissions.
     */
    data: permissionCreateManyInput | permissionCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: permissionIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * permission update
   */
  export type permissionUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the permission
     */
    select?: permissionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the permission
     */
    omit?: permissionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: permissionInclude<ExtArgs> | null
    /**
     * The data needed to update a permission.
     */
    data: XOR<permissionUpdateInput, permissionUncheckedUpdateInput>
    /**
     * Choose, which permission to update.
     */
    where: permissionWhereUniqueInput
  }

  /**
   * permission updateMany
   */
  export type permissionUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update permissions.
     */
    data: XOR<permissionUpdateManyMutationInput, permissionUncheckedUpdateManyInput>
    /**
     * Filter which permissions to update
     */
    where?: permissionWhereInput
    /**
     * Limit how many permissions to update.
     */
    limit?: number
  }

  /**
   * permission updateManyAndReturn
   */
  export type permissionUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the permission
     */
    select?: permissionSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the permission
     */
    omit?: permissionOmit<ExtArgs> | null
    /**
     * The data used to update permissions.
     */
    data: XOR<permissionUpdateManyMutationInput, permissionUncheckedUpdateManyInput>
    /**
     * Filter which permissions to update
     */
    where?: permissionWhereInput
    /**
     * Limit how many permissions to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: permissionIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * permission upsert
   */
  export type permissionUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the permission
     */
    select?: permissionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the permission
     */
    omit?: permissionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: permissionInclude<ExtArgs> | null
    /**
     * The filter to search for the permission to update in case it exists.
     */
    where: permissionWhereUniqueInput
    /**
     * In case the permission found by the `where` argument doesn't exist, create a new permission with this data.
     */
    create: XOR<permissionCreateInput, permissionUncheckedCreateInput>
    /**
     * In case the permission was found with the provided `where` argument, update it with this data.
     */
    update: XOR<permissionUpdateInput, permissionUncheckedUpdateInput>
  }

  /**
   * permission delete
   */
  export type permissionDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the permission
     */
    select?: permissionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the permission
     */
    omit?: permissionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: permissionInclude<ExtArgs> | null
    /**
     * Filter which permission to delete.
     */
    where: permissionWhereUniqueInput
  }

  /**
   * permission deleteMany
   */
  export type permissionDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which permissions to delete
     */
    where?: permissionWhereInput
    /**
     * Limit how many permissions to delete.
     */
    limit?: number
  }

  /**
   * permission.updateduser
   */
  export type permission$updateduserArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user
     */
    select?: userSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user
     */
    omit?: userOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: userInclude<ExtArgs> | null
    where?: userWhereInput
  }

  /**
   * permission.rolepermissions
   */
  export type permission$rolepermissionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the rolepermission
     */
    select?: rolepermissionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the rolepermission
     */
    omit?: rolepermissionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: rolepermissionInclude<ExtArgs> | null
    where?: rolepermissionWhereInput
    orderBy?: rolepermissionOrderByWithRelationInput | rolepermissionOrderByWithRelationInput[]
    cursor?: rolepermissionWhereUniqueInput
    take?: number
    skip?: number
    distinct?: RolepermissionScalarFieldEnum | RolepermissionScalarFieldEnum[]
  }

  /**
   * permission.userpermissions
   */
  export type permission$userpermissionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the userpermission
     */
    select?: userpermissionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the userpermission
     */
    omit?: userpermissionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: userpermissionInclude<ExtArgs> | null
    where?: userpermissionWhereInput
    orderBy?: userpermissionOrderByWithRelationInput | userpermissionOrderByWithRelationInput[]
    cursor?: userpermissionWhereUniqueInput
    take?: number
    skip?: number
    distinct?: UserpermissionScalarFieldEnum | UserpermissionScalarFieldEnum[]
  }

  /**
   * permission without action
   */
  export type permissionDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the permission
     */
    select?: permissionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the permission
     */
    omit?: permissionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: permissionInclude<ExtArgs> | null
  }


  /**
   * Model rolepermission
   */

  export type AggregateRolepermission = {
    _count: RolepermissionCountAggregateOutputType | null
    _min: RolepermissionMinAggregateOutputType | null
    _max: RolepermissionMaxAggregateOutputType | null
  }

  export type RolepermissionMinAggregateOutputType = {
    id: string | null
    roleid: string | null
    permissionid: string | null
    createdat: Date | null
    createdby: string | null
    updatedby: string | null
    updatedat: Date | null
  }

  export type RolepermissionMaxAggregateOutputType = {
    id: string | null
    roleid: string | null
    permissionid: string | null
    createdat: Date | null
    createdby: string | null
    updatedby: string | null
    updatedat: Date | null
  }

  export type RolepermissionCountAggregateOutputType = {
    id: number
    roleid: number
    permissionid: number
    createdat: number
    createdby: number
    updatedby: number
    updatedat: number
    _all: number
  }


  export type RolepermissionMinAggregateInputType = {
    id?: true
    roleid?: true
    permissionid?: true
    createdat?: true
    createdby?: true
    updatedby?: true
    updatedat?: true
  }

  export type RolepermissionMaxAggregateInputType = {
    id?: true
    roleid?: true
    permissionid?: true
    createdat?: true
    createdby?: true
    updatedby?: true
    updatedat?: true
  }

  export type RolepermissionCountAggregateInputType = {
    id?: true
    roleid?: true
    permissionid?: true
    createdat?: true
    createdby?: true
    updatedby?: true
    updatedat?: true
    _all?: true
  }

  export type RolepermissionAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which rolepermission to aggregate.
     */
    where?: rolepermissionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of rolepermissions to fetch.
     */
    orderBy?: rolepermissionOrderByWithRelationInput | rolepermissionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: rolepermissionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` rolepermissions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` rolepermissions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned rolepermissions
    **/
    _count?: true | RolepermissionCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: RolepermissionMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: RolepermissionMaxAggregateInputType
  }

  export type GetRolepermissionAggregateType<T extends RolepermissionAggregateArgs> = {
        [P in keyof T & keyof AggregateRolepermission]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateRolepermission[P]>
      : GetScalarType<T[P], AggregateRolepermission[P]>
  }




  export type rolepermissionGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: rolepermissionWhereInput
    orderBy?: rolepermissionOrderByWithAggregationInput | rolepermissionOrderByWithAggregationInput[]
    by: RolepermissionScalarFieldEnum[] | RolepermissionScalarFieldEnum
    having?: rolepermissionScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: RolepermissionCountAggregateInputType | true
    _min?: RolepermissionMinAggregateInputType
    _max?: RolepermissionMaxAggregateInputType
  }

  export type RolepermissionGroupByOutputType = {
    id: string
    roleid: string
    permissionid: string
    createdat: Date
    createdby: string
    updatedby: string | null
    updatedat: Date | null
    _count: RolepermissionCountAggregateOutputType | null
    _min: RolepermissionMinAggregateOutputType | null
    _max: RolepermissionMaxAggregateOutputType | null
  }

  type GetRolepermissionGroupByPayload<T extends rolepermissionGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<RolepermissionGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof RolepermissionGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], RolepermissionGroupByOutputType[P]>
            : GetScalarType<T[P], RolepermissionGroupByOutputType[P]>
        }
      >
    >


  export type rolepermissionSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    roleid?: boolean
    permissionid?: boolean
    createdat?: boolean
    createdby?: boolean
    updatedby?: boolean
    updatedat?: boolean
    createduser?: boolean | userDefaultArgs<ExtArgs>
    permission?: boolean | permissionDefaultArgs<ExtArgs>
    role?: boolean | roleDefaultArgs<ExtArgs>
    updateduser?: boolean | rolepermission$updateduserArgs<ExtArgs>
  }, ExtArgs["result"]["rolepermission"]>

  export type rolepermissionSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    roleid?: boolean
    permissionid?: boolean
    createdat?: boolean
    createdby?: boolean
    updatedby?: boolean
    updatedat?: boolean
    createduser?: boolean | userDefaultArgs<ExtArgs>
    permission?: boolean | permissionDefaultArgs<ExtArgs>
    role?: boolean | roleDefaultArgs<ExtArgs>
    updateduser?: boolean | rolepermission$updateduserArgs<ExtArgs>
  }, ExtArgs["result"]["rolepermission"]>

  export type rolepermissionSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    roleid?: boolean
    permissionid?: boolean
    createdat?: boolean
    createdby?: boolean
    updatedby?: boolean
    updatedat?: boolean
    createduser?: boolean | userDefaultArgs<ExtArgs>
    permission?: boolean | permissionDefaultArgs<ExtArgs>
    role?: boolean | roleDefaultArgs<ExtArgs>
    updateduser?: boolean | rolepermission$updateduserArgs<ExtArgs>
  }, ExtArgs["result"]["rolepermission"]>

  export type rolepermissionSelectScalar = {
    id?: boolean
    roleid?: boolean
    permissionid?: boolean
    createdat?: boolean
    createdby?: boolean
    updatedby?: boolean
    updatedat?: boolean
  }

  export type rolepermissionOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "roleid" | "permissionid" | "createdat" | "createdby" | "updatedby" | "updatedat", ExtArgs["result"]["rolepermission"]>
  export type rolepermissionInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    createduser?: boolean | userDefaultArgs<ExtArgs>
    permission?: boolean | permissionDefaultArgs<ExtArgs>
    role?: boolean | roleDefaultArgs<ExtArgs>
    updateduser?: boolean | rolepermission$updateduserArgs<ExtArgs>
  }
  export type rolepermissionIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    createduser?: boolean | userDefaultArgs<ExtArgs>
    permission?: boolean | permissionDefaultArgs<ExtArgs>
    role?: boolean | roleDefaultArgs<ExtArgs>
    updateduser?: boolean | rolepermission$updateduserArgs<ExtArgs>
  }
  export type rolepermissionIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    createduser?: boolean | userDefaultArgs<ExtArgs>
    permission?: boolean | permissionDefaultArgs<ExtArgs>
    role?: boolean | roleDefaultArgs<ExtArgs>
    updateduser?: boolean | rolepermission$updateduserArgs<ExtArgs>
  }

  export type $rolepermissionPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "rolepermission"
    objects: {
      createduser: Prisma.$userPayload<ExtArgs>
      permission: Prisma.$permissionPayload<ExtArgs>
      role: Prisma.$rolePayload<ExtArgs>
      updateduser: Prisma.$userPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      roleid: string
      permissionid: string
      createdat: Date
      createdby: string
      updatedby: string | null
      updatedat: Date | null
    }, ExtArgs["result"]["rolepermission"]>
    composites: {}
  }

  type rolepermissionGetPayload<S extends boolean | null | undefined | rolepermissionDefaultArgs> = $Result.GetResult<Prisma.$rolepermissionPayload, S>

  type rolepermissionCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<rolepermissionFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: RolepermissionCountAggregateInputType | true
    }

  export interface rolepermissionDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['rolepermission'], meta: { name: 'rolepermission' } }
    /**
     * Find zero or one Rolepermission that matches the filter.
     * @param {rolepermissionFindUniqueArgs} args - Arguments to find a Rolepermission
     * @example
     * // Get one Rolepermission
     * const rolepermission = await prisma.rolepermission.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends rolepermissionFindUniqueArgs>(args: SelectSubset<T, rolepermissionFindUniqueArgs<ExtArgs>>): Prisma__rolepermissionClient<$Result.GetResult<Prisma.$rolepermissionPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Rolepermission that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {rolepermissionFindUniqueOrThrowArgs} args - Arguments to find a Rolepermission
     * @example
     * // Get one Rolepermission
     * const rolepermission = await prisma.rolepermission.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends rolepermissionFindUniqueOrThrowArgs>(args: SelectSubset<T, rolepermissionFindUniqueOrThrowArgs<ExtArgs>>): Prisma__rolepermissionClient<$Result.GetResult<Prisma.$rolepermissionPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Rolepermission that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {rolepermissionFindFirstArgs} args - Arguments to find a Rolepermission
     * @example
     * // Get one Rolepermission
     * const rolepermission = await prisma.rolepermission.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends rolepermissionFindFirstArgs>(args?: SelectSubset<T, rolepermissionFindFirstArgs<ExtArgs>>): Prisma__rolepermissionClient<$Result.GetResult<Prisma.$rolepermissionPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Rolepermission that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {rolepermissionFindFirstOrThrowArgs} args - Arguments to find a Rolepermission
     * @example
     * // Get one Rolepermission
     * const rolepermission = await prisma.rolepermission.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends rolepermissionFindFirstOrThrowArgs>(args?: SelectSubset<T, rolepermissionFindFirstOrThrowArgs<ExtArgs>>): Prisma__rolepermissionClient<$Result.GetResult<Prisma.$rolepermissionPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Rolepermissions that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {rolepermissionFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Rolepermissions
     * const rolepermissions = await prisma.rolepermission.findMany()
     * 
     * // Get first 10 Rolepermissions
     * const rolepermissions = await prisma.rolepermission.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const rolepermissionWithIdOnly = await prisma.rolepermission.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends rolepermissionFindManyArgs>(args?: SelectSubset<T, rolepermissionFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$rolepermissionPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Rolepermission.
     * @param {rolepermissionCreateArgs} args - Arguments to create a Rolepermission.
     * @example
     * // Create one Rolepermission
     * const Rolepermission = await prisma.rolepermission.create({
     *   data: {
     *     // ... data to create a Rolepermission
     *   }
     * })
     * 
     */
    create<T extends rolepermissionCreateArgs>(args: SelectSubset<T, rolepermissionCreateArgs<ExtArgs>>): Prisma__rolepermissionClient<$Result.GetResult<Prisma.$rolepermissionPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Rolepermissions.
     * @param {rolepermissionCreateManyArgs} args - Arguments to create many Rolepermissions.
     * @example
     * // Create many Rolepermissions
     * const rolepermission = await prisma.rolepermission.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends rolepermissionCreateManyArgs>(args?: SelectSubset<T, rolepermissionCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Rolepermissions and returns the data saved in the database.
     * @param {rolepermissionCreateManyAndReturnArgs} args - Arguments to create many Rolepermissions.
     * @example
     * // Create many Rolepermissions
     * const rolepermission = await prisma.rolepermission.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Rolepermissions and only return the `id`
     * const rolepermissionWithIdOnly = await prisma.rolepermission.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends rolepermissionCreateManyAndReturnArgs>(args?: SelectSubset<T, rolepermissionCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$rolepermissionPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Rolepermission.
     * @param {rolepermissionDeleteArgs} args - Arguments to delete one Rolepermission.
     * @example
     * // Delete one Rolepermission
     * const Rolepermission = await prisma.rolepermission.delete({
     *   where: {
     *     // ... filter to delete one Rolepermission
     *   }
     * })
     * 
     */
    delete<T extends rolepermissionDeleteArgs>(args: SelectSubset<T, rolepermissionDeleteArgs<ExtArgs>>): Prisma__rolepermissionClient<$Result.GetResult<Prisma.$rolepermissionPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Rolepermission.
     * @param {rolepermissionUpdateArgs} args - Arguments to update one Rolepermission.
     * @example
     * // Update one Rolepermission
     * const rolepermission = await prisma.rolepermission.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends rolepermissionUpdateArgs>(args: SelectSubset<T, rolepermissionUpdateArgs<ExtArgs>>): Prisma__rolepermissionClient<$Result.GetResult<Prisma.$rolepermissionPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Rolepermissions.
     * @param {rolepermissionDeleteManyArgs} args - Arguments to filter Rolepermissions to delete.
     * @example
     * // Delete a few Rolepermissions
     * const { count } = await prisma.rolepermission.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends rolepermissionDeleteManyArgs>(args?: SelectSubset<T, rolepermissionDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Rolepermissions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {rolepermissionUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Rolepermissions
     * const rolepermission = await prisma.rolepermission.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends rolepermissionUpdateManyArgs>(args: SelectSubset<T, rolepermissionUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Rolepermissions and returns the data updated in the database.
     * @param {rolepermissionUpdateManyAndReturnArgs} args - Arguments to update many Rolepermissions.
     * @example
     * // Update many Rolepermissions
     * const rolepermission = await prisma.rolepermission.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Rolepermissions and only return the `id`
     * const rolepermissionWithIdOnly = await prisma.rolepermission.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends rolepermissionUpdateManyAndReturnArgs>(args: SelectSubset<T, rolepermissionUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$rolepermissionPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Rolepermission.
     * @param {rolepermissionUpsertArgs} args - Arguments to update or create a Rolepermission.
     * @example
     * // Update or create a Rolepermission
     * const rolepermission = await prisma.rolepermission.upsert({
     *   create: {
     *     // ... data to create a Rolepermission
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Rolepermission we want to update
     *   }
     * })
     */
    upsert<T extends rolepermissionUpsertArgs>(args: SelectSubset<T, rolepermissionUpsertArgs<ExtArgs>>): Prisma__rolepermissionClient<$Result.GetResult<Prisma.$rolepermissionPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Rolepermissions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {rolepermissionCountArgs} args - Arguments to filter Rolepermissions to count.
     * @example
     * // Count the number of Rolepermissions
     * const count = await prisma.rolepermission.count({
     *   where: {
     *     // ... the filter for the Rolepermissions we want to count
     *   }
     * })
    **/
    count<T extends rolepermissionCountArgs>(
      args?: Subset<T, rolepermissionCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], RolepermissionCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Rolepermission.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RolepermissionAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends RolepermissionAggregateArgs>(args: Subset<T, RolepermissionAggregateArgs>): Prisma.PrismaPromise<GetRolepermissionAggregateType<T>>

    /**
     * Group by Rolepermission.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {rolepermissionGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends rolepermissionGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: rolepermissionGroupByArgs['orderBy'] }
        : { orderBy?: rolepermissionGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, rolepermissionGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetRolepermissionGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the rolepermission model
   */
  readonly fields: rolepermissionFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for rolepermission.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__rolepermissionClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    createduser<T extends userDefaultArgs<ExtArgs> = {}>(args?: Subset<T, userDefaultArgs<ExtArgs>>): Prisma__userClient<$Result.GetResult<Prisma.$userPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    permission<T extends permissionDefaultArgs<ExtArgs> = {}>(args?: Subset<T, permissionDefaultArgs<ExtArgs>>): Prisma__permissionClient<$Result.GetResult<Prisma.$permissionPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    role<T extends roleDefaultArgs<ExtArgs> = {}>(args?: Subset<T, roleDefaultArgs<ExtArgs>>): Prisma__roleClient<$Result.GetResult<Prisma.$rolePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    updateduser<T extends rolepermission$updateduserArgs<ExtArgs> = {}>(args?: Subset<T, rolepermission$updateduserArgs<ExtArgs>>): Prisma__userClient<$Result.GetResult<Prisma.$userPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the rolepermission model
   */
  interface rolepermissionFieldRefs {
    readonly id: FieldRef<"rolepermission", 'String'>
    readonly roleid: FieldRef<"rolepermission", 'String'>
    readonly permissionid: FieldRef<"rolepermission", 'String'>
    readonly createdat: FieldRef<"rolepermission", 'DateTime'>
    readonly createdby: FieldRef<"rolepermission", 'String'>
    readonly updatedby: FieldRef<"rolepermission", 'String'>
    readonly updatedat: FieldRef<"rolepermission", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * rolepermission findUnique
   */
  export type rolepermissionFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the rolepermission
     */
    select?: rolepermissionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the rolepermission
     */
    omit?: rolepermissionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: rolepermissionInclude<ExtArgs> | null
    /**
     * Filter, which rolepermission to fetch.
     */
    where: rolepermissionWhereUniqueInput
  }

  /**
   * rolepermission findUniqueOrThrow
   */
  export type rolepermissionFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the rolepermission
     */
    select?: rolepermissionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the rolepermission
     */
    omit?: rolepermissionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: rolepermissionInclude<ExtArgs> | null
    /**
     * Filter, which rolepermission to fetch.
     */
    where: rolepermissionWhereUniqueInput
  }

  /**
   * rolepermission findFirst
   */
  export type rolepermissionFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the rolepermission
     */
    select?: rolepermissionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the rolepermission
     */
    omit?: rolepermissionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: rolepermissionInclude<ExtArgs> | null
    /**
     * Filter, which rolepermission to fetch.
     */
    where?: rolepermissionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of rolepermissions to fetch.
     */
    orderBy?: rolepermissionOrderByWithRelationInput | rolepermissionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for rolepermissions.
     */
    cursor?: rolepermissionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` rolepermissions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` rolepermissions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of rolepermissions.
     */
    distinct?: RolepermissionScalarFieldEnum | RolepermissionScalarFieldEnum[]
  }

  /**
   * rolepermission findFirstOrThrow
   */
  export type rolepermissionFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the rolepermission
     */
    select?: rolepermissionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the rolepermission
     */
    omit?: rolepermissionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: rolepermissionInclude<ExtArgs> | null
    /**
     * Filter, which rolepermission to fetch.
     */
    where?: rolepermissionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of rolepermissions to fetch.
     */
    orderBy?: rolepermissionOrderByWithRelationInput | rolepermissionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for rolepermissions.
     */
    cursor?: rolepermissionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` rolepermissions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` rolepermissions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of rolepermissions.
     */
    distinct?: RolepermissionScalarFieldEnum | RolepermissionScalarFieldEnum[]
  }

  /**
   * rolepermission findMany
   */
  export type rolepermissionFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the rolepermission
     */
    select?: rolepermissionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the rolepermission
     */
    omit?: rolepermissionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: rolepermissionInclude<ExtArgs> | null
    /**
     * Filter, which rolepermissions to fetch.
     */
    where?: rolepermissionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of rolepermissions to fetch.
     */
    orderBy?: rolepermissionOrderByWithRelationInput | rolepermissionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing rolepermissions.
     */
    cursor?: rolepermissionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` rolepermissions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` rolepermissions.
     */
    skip?: number
    distinct?: RolepermissionScalarFieldEnum | RolepermissionScalarFieldEnum[]
  }

  /**
   * rolepermission create
   */
  export type rolepermissionCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the rolepermission
     */
    select?: rolepermissionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the rolepermission
     */
    omit?: rolepermissionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: rolepermissionInclude<ExtArgs> | null
    /**
     * The data needed to create a rolepermission.
     */
    data: XOR<rolepermissionCreateInput, rolepermissionUncheckedCreateInput>
  }

  /**
   * rolepermission createMany
   */
  export type rolepermissionCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many rolepermissions.
     */
    data: rolepermissionCreateManyInput | rolepermissionCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * rolepermission createManyAndReturn
   */
  export type rolepermissionCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the rolepermission
     */
    select?: rolepermissionSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the rolepermission
     */
    omit?: rolepermissionOmit<ExtArgs> | null
    /**
     * The data used to create many rolepermissions.
     */
    data: rolepermissionCreateManyInput | rolepermissionCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: rolepermissionIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * rolepermission update
   */
  export type rolepermissionUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the rolepermission
     */
    select?: rolepermissionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the rolepermission
     */
    omit?: rolepermissionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: rolepermissionInclude<ExtArgs> | null
    /**
     * The data needed to update a rolepermission.
     */
    data: XOR<rolepermissionUpdateInput, rolepermissionUncheckedUpdateInput>
    /**
     * Choose, which rolepermission to update.
     */
    where: rolepermissionWhereUniqueInput
  }

  /**
   * rolepermission updateMany
   */
  export type rolepermissionUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update rolepermissions.
     */
    data: XOR<rolepermissionUpdateManyMutationInput, rolepermissionUncheckedUpdateManyInput>
    /**
     * Filter which rolepermissions to update
     */
    where?: rolepermissionWhereInput
    /**
     * Limit how many rolepermissions to update.
     */
    limit?: number
  }

  /**
   * rolepermission updateManyAndReturn
   */
  export type rolepermissionUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the rolepermission
     */
    select?: rolepermissionSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the rolepermission
     */
    omit?: rolepermissionOmit<ExtArgs> | null
    /**
     * The data used to update rolepermissions.
     */
    data: XOR<rolepermissionUpdateManyMutationInput, rolepermissionUncheckedUpdateManyInput>
    /**
     * Filter which rolepermissions to update
     */
    where?: rolepermissionWhereInput
    /**
     * Limit how many rolepermissions to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: rolepermissionIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * rolepermission upsert
   */
  export type rolepermissionUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the rolepermission
     */
    select?: rolepermissionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the rolepermission
     */
    omit?: rolepermissionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: rolepermissionInclude<ExtArgs> | null
    /**
     * The filter to search for the rolepermission to update in case it exists.
     */
    where: rolepermissionWhereUniqueInput
    /**
     * In case the rolepermission found by the `where` argument doesn't exist, create a new rolepermission with this data.
     */
    create: XOR<rolepermissionCreateInput, rolepermissionUncheckedCreateInput>
    /**
     * In case the rolepermission was found with the provided `where` argument, update it with this data.
     */
    update: XOR<rolepermissionUpdateInput, rolepermissionUncheckedUpdateInput>
  }

  /**
   * rolepermission delete
   */
  export type rolepermissionDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the rolepermission
     */
    select?: rolepermissionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the rolepermission
     */
    omit?: rolepermissionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: rolepermissionInclude<ExtArgs> | null
    /**
     * Filter which rolepermission to delete.
     */
    where: rolepermissionWhereUniqueInput
  }

  /**
   * rolepermission deleteMany
   */
  export type rolepermissionDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which rolepermissions to delete
     */
    where?: rolepermissionWhereInput
    /**
     * Limit how many rolepermissions to delete.
     */
    limit?: number
  }

  /**
   * rolepermission.updateduser
   */
  export type rolepermission$updateduserArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user
     */
    select?: userSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user
     */
    omit?: userOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: userInclude<ExtArgs> | null
    where?: userWhereInput
  }

  /**
   * rolepermission without action
   */
  export type rolepermissionDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the rolepermission
     */
    select?: rolepermissionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the rolepermission
     */
    omit?: rolepermissionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: rolepermissionInclude<ExtArgs> | null
  }


  /**
   * Model user
   */

  export type AggregateUser = {
    _count: UserCountAggregateOutputType | null
    _avg: UserAvgAggregateOutputType | null
    _sum: UserSumAggregateOutputType | null
    _min: UserMinAggregateOutputType | null
    _max: UserMaxAggregateOutputType | null
  }

  export type UserAvgAggregateOutputType = {
    status: number | null
  }

  export type UserSumAggregateOutputType = {
    status: number | null
  }

  export type UserMinAggregateOutputType = {
    id: string | null
    firstname: string | null
    lastname: string | null
    phone: string | null
    email: string | null
    password: string | null
    appLanguage: string | null
    learningLanguage: string | null
    learningLevel: string | null
    theme: string | null
    avatar: string | null
    createdby: string | null
    createdat: Date | null
    updatedby: string | null
    updatedat: Date | null
    status: number | null
    lastentranceat: Date | null
    lastexitat: Date | null
    lastloginat: Date | null
    stripeCustomerId: string | null
  }

  export type UserMaxAggregateOutputType = {
    id: string | null
    firstname: string | null
    lastname: string | null
    phone: string | null
    email: string | null
    password: string | null
    appLanguage: string | null
    learningLanguage: string | null
    learningLevel: string | null
    theme: string | null
    avatar: string | null
    createdby: string | null
    createdat: Date | null
    updatedby: string | null
    updatedat: Date | null
    status: number | null
    lastentranceat: Date | null
    lastexitat: Date | null
    lastloginat: Date | null
    stripeCustomerId: string | null
  }

  export type UserCountAggregateOutputType = {
    id: number
    firstname: number
    lastname: number
    phone: number
    email: number
    password: number
    appLanguage: number
    learningLanguage: number
    learningLevel: number
    theme: number
    avatar: number
    createdby: number
    createdat: number
    updatedby: number
    updatedat: number
    status: number
    lastentranceat: number
    lastexitat: number
    lastloginat: number
    stripeCustomerId: number
    _all: number
  }


  export type UserAvgAggregateInputType = {
    status?: true
  }

  export type UserSumAggregateInputType = {
    status?: true
  }

  export type UserMinAggregateInputType = {
    id?: true
    firstname?: true
    lastname?: true
    phone?: true
    email?: true
    password?: true
    appLanguage?: true
    learningLanguage?: true
    learningLevel?: true
    theme?: true
    avatar?: true
    createdby?: true
    createdat?: true
    updatedby?: true
    updatedat?: true
    status?: true
    lastentranceat?: true
    lastexitat?: true
    lastloginat?: true
    stripeCustomerId?: true
  }

  export type UserMaxAggregateInputType = {
    id?: true
    firstname?: true
    lastname?: true
    phone?: true
    email?: true
    password?: true
    appLanguage?: true
    learningLanguage?: true
    learningLevel?: true
    theme?: true
    avatar?: true
    createdby?: true
    createdat?: true
    updatedby?: true
    updatedat?: true
    status?: true
    lastentranceat?: true
    lastexitat?: true
    lastloginat?: true
    stripeCustomerId?: true
  }

  export type UserCountAggregateInputType = {
    id?: true
    firstname?: true
    lastname?: true
    phone?: true
    email?: true
    password?: true
    appLanguage?: true
    learningLanguage?: true
    learningLevel?: true
    theme?: true
    avatar?: true
    createdby?: true
    createdat?: true
    updatedby?: true
    updatedat?: true
    status?: true
    lastentranceat?: true
    lastexitat?: true
    lastloginat?: true
    stripeCustomerId?: true
    _all?: true
  }

  export type UserAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which user to aggregate.
     */
    where?: userWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of users to fetch.
     */
    orderBy?: userOrderByWithRelationInput | userOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: userWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` users.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned users
    **/
    _count?: true | UserCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: UserAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: UserSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: UserMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: UserMaxAggregateInputType
  }

  export type GetUserAggregateType<T extends UserAggregateArgs> = {
        [P in keyof T & keyof AggregateUser]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateUser[P]>
      : GetScalarType<T[P], AggregateUser[P]>
  }




  export type userGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: userWhereInput
    orderBy?: userOrderByWithAggregationInput | userOrderByWithAggregationInput[]
    by: UserScalarFieldEnum[] | UserScalarFieldEnum
    having?: userScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: UserCountAggregateInputType | true
    _avg?: UserAvgAggregateInputType
    _sum?: UserSumAggregateInputType
    _min?: UserMinAggregateInputType
    _max?: UserMaxAggregateInputType
  }

  export type UserGroupByOutputType = {
    id: string
    firstname: string
    lastname: string
    phone: string | null
    email: string
    password: string
    appLanguage: string | null
    learningLanguage: string | null
    learningLevel: string | null
    theme: string | null
    avatar: string | null
    createdby: string
    createdat: Date
    updatedby: string | null
    updatedat: Date | null
    status: number
    lastentranceat: Date | null
    lastexitat: Date | null
    lastloginat: Date | null
    stripeCustomerId: string | null
    _count: UserCountAggregateOutputType | null
    _avg: UserAvgAggregateOutputType | null
    _sum: UserSumAggregateOutputType | null
    _min: UserMinAggregateOutputType | null
    _max: UserMaxAggregateOutputType | null
  }

  type GetUserGroupByPayload<T extends userGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<UserGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof UserGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], UserGroupByOutputType[P]>
            : GetScalarType<T[P], UserGroupByOutputType[P]>
        }
      >
    >


  export type userSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    firstname?: boolean
    lastname?: boolean
    phone?: boolean
    email?: boolean
    password?: boolean
    appLanguage?: boolean
    learningLanguage?: boolean
    learningLevel?: boolean
    theme?: boolean
    avatar?: boolean
    createdby?: boolean
    createdat?: boolean
    updatedby?: boolean
    updatedat?: boolean
    status?: boolean
    lastentranceat?: boolean
    lastexitat?: boolean
    lastloginat?: boolean
    stripeCustomerId?: boolean
    notificationuser?: boolean | user$notificationuserArgs<ExtArgs>
    createdapiclients?: boolean | user$createdapiclientsArgs<ExtArgs>
    updatedapiclients?: boolean | user$updatedapiclientsArgs<ExtArgs>
    createdpermissions?: boolean | user$createdpermissionsArgs<ExtArgs>
    updatedpermissions?: boolean | user$updatedpermissionsArgs<ExtArgs>
    refreshtokens?: boolean | user$refreshtokensArgs<ExtArgs>
    createdroles?: boolean | user$createdrolesArgs<ExtArgs>
    updatedroles?: boolean | user$updatedrolesArgs<ExtArgs>
    createdrolepermissions?: boolean | user$createdrolepermissionsArgs<ExtArgs>
    updatedrolepermissions?: boolean | user$updatedrolepermissionsArgs<ExtArgs>
    createduser?: boolean | userDefaultArgs<ExtArgs>
    createdusers?: boolean | user$createdusersArgs<ExtArgs>
    updateduser?: boolean | user$updateduserArgs<ExtArgs>
    updatedusers?: boolean | user$updatedusersArgs<ExtArgs>
    createduserpermissions?: boolean | user$createduserpermissionsArgs<ExtArgs>
    updateduserpermissions?: boolean | user$updateduserpermissionsArgs<ExtArgs>
    userpermissions?: boolean | user$userpermissionsArgs<ExtArgs>
    createduserroles?: boolean | user$createduserrolesArgs<ExtArgs>
    updateduserroles?: boolean | user$updateduserrolesArgs<ExtArgs>
    userroles?: boolean | user$userrolesArgs<ExtArgs>
    language?: boolean | user$languageArgs<ExtArgs>
    learningProgress?: boolean | user$learningProgressArgs<ExtArgs>
    chats?: boolean | user$chatsArgs<ExtArgs>
    chatRooms?: boolean | user$chatRoomsArgs<ExtArgs>
    subscriptions?: boolean | user$subscriptionsArgs<ExtArgs>
    _count?: boolean | UserCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["user"]>

  export type userSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    firstname?: boolean
    lastname?: boolean
    phone?: boolean
    email?: boolean
    password?: boolean
    appLanguage?: boolean
    learningLanguage?: boolean
    learningLevel?: boolean
    theme?: boolean
    avatar?: boolean
    createdby?: boolean
    createdat?: boolean
    updatedby?: boolean
    updatedat?: boolean
    status?: boolean
    lastentranceat?: boolean
    lastexitat?: boolean
    lastloginat?: boolean
    stripeCustomerId?: boolean
    createduser?: boolean | userDefaultArgs<ExtArgs>
    updateduser?: boolean | user$updateduserArgs<ExtArgs>
  }, ExtArgs["result"]["user"]>

  export type userSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    firstname?: boolean
    lastname?: boolean
    phone?: boolean
    email?: boolean
    password?: boolean
    appLanguage?: boolean
    learningLanguage?: boolean
    learningLevel?: boolean
    theme?: boolean
    avatar?: boolean
    createdby?: boolean
    createdat?: boolean
    updatedby?: boolean
    updatedat?: boolean
    status?: boolean
    lastentranceat?: boolean
    lastexitat?: boolean
    lastloginat?: boolean
    stripeCustomerId?: boolean
    createduser?: boolean | userDefaultArgs<ExtArgs>
    updateduser?: boolean | user$updateduserArgs<ExtArgs>
  }, ExtArgs["result"]["user"]>

  export type userSelectScalar = {
    id?: boolean
    firstname?: boolean
    lastname?: boolean
    phone?: boolean
    email?: boolean
    password?: boolean
    appLanguage?: boolean
    learningLanguage?: boolean
    learningLevel?: boolean
    theme?: boolean
    avatar?: boolean
    createdby?: boolean
    createdat?: boolean
    updatedby?: boolean
    updatedat?: boolean
    status?: boolean
    lastentranceat?: boolean
    lastexitat?: boolean
    lastloginat?: boolean
    stripeCustomerId?: boolean
  }

  export type userOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "firstname" | "lastname" | "phone" | "email" | "password" | "appLanguage" | "learningLanguage" | "learningLevel" | "theme" | "avatar" | "createdby" | "createdat" | "updatedby" | "updatedat" | "status" | "lastentranceat" | "lastexitat" | "lastloginat" | "stripeCustomerId", ExtArgs["result"]["user"]>
  export type userInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    notificationuser?: boolean | user$notificationuserArgs<ExtArgs>
    createdapiclients?: boolean | user$createdapiclientsArgs<ExtArgs>
    updatedapiclients?: boolean | user$updatedapiclientsArgs<ExtArgs>
    createdpermissions?: boolean | user$createdpermissionsArgs<ExtArgs>
    updatedpermissions?: boolean | user$updatedpermissionsArgs<ExtArgs>
    refreshtokens?: boolean | user$refreshtokensArgs<ExtArgs>
    createdroles?: boolean | user$createdrolesArgs<ExtArgs>
    updatedroles?: boolean | user$updatedrolesArgs<ExtArgs>
    createdrolepermissions?: boolean | user$createdrolepermissionsArgs<ExtArgs>
    updatedrolepermissions?: boolean | user$updatedrolepermissionsArgs<ExtArgs>
    createduser?: boolean | userDefaultArgs<ExtArgs>
    createdusers?: boolean | user$createdusersArgs<ExtArgs>
    updateduser?: boolean | user$updateduserArgs<ExtArgs>
    updatedusers?: boolean | user$updatedusersArgs<ExtArgs>
    createduserpermissions?: boolean | user$createduserpermissionsArgs<ExtArgs>
    updateduserpermissions?: boolean | user$updateduserpermissionsArgs<ExtArgs>
    userpermissions?: boolean | user$userpermissionsArgs<ExtArgs>
    createduserroles?: boolean | user$createduserrolesArgs<ExtArgs>
    updateduserroles?: boolean | user$updateduserrolesArgs<ExtArgs>
    userroles?: boolean | user$userrolesArgs<ExtArgs>
    language?: boolean | user$languageArgs<ExtArgs>
    learningProgress?: boolean | user$learningProgressArgs<ExtArgs>
    chats?: boolean | user$chatsArgs<ExtArgs>
    chatRooms?: boolean | user$chatRoomsArgs<ExtArgs>
    subscriptions?: boolean | user$subscriptionsArgs<ExtArgs>
    _count?: boolean | UserCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type userIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    createduser?: boolean | userDefaultArgs<ExtArgs>
    updateduser?: boolean | user$updateduserArgs<ExtArgs>
  }
  export type userIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    createduser?: boolean | userDefaultArgs<ExtArgs>
    updateduser?: boolean | user$updateduserArgs<ExtArgs>
  }

  export type $userPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "user"
    objects: {
      notificationuser: Prisma.$notificationPayload<ExtArgs>[]
      createdapiclients: Prisma.$apiclientPayload<ExtArgs>[]
      updatedapiclients: Prisma.$apiclientPayload<ExtArgs>[]
      createdpermissions: Prisma.$permissionPayload<ExtArgs>[]
      updatedpermissions: Prisma.$permissionPayload<ExtArgs>[]
      refreshtokens: Prisma.$refreshtokenPayload<ExtArgs>[]
      createdroles: Prisma.$rolePayload<ExtArgs>[]
      updatedroles: Prisma.$rolePayload<ExtArgs>[]
      createdrolepermissions: Prisma.$rolepermissionPayload<ExtArgs>[]
      updatedrolepermissions: Prisma.$rolepermissionPayload<ExtArgs>[]
      createduser: Prisma.$userPayload<ExtArgs>
      createdusers: Prisma.$userPayload<ExtArgs>[]
      updateduser: Prisma.$userPayload<ExtArgs> | null
      updatedusers: Prisma.$userPayload<ExtArgs>[]
      createduserpermissions: Prisma.$userpermissionPayload<ExtArgs>[]
      updateduserpermissions: Prisma.$userpermissionPayload<ExtArgs>[]
      userpermissions: Prisma.$userpermissionPayload<ExtArgs>[]
      createduserroles: Prisma.$userrolePayload<ExtArgs>[]
      updateduserroles: Prisma.$userrolePayload<ExtArgs>[]
      userroles: Prisma.$userrolePayload<ExtArgs>[]
      language: Prisma.$languagesPayload<ExtArgs>[]
      learningProgress: Prisma.$learningProgressPayload<ExtArgs>[]
      chats: Prisma.$chatPayload<ExtArgs>[]
      chatRooms: Prisma.$chatRoomPayload<ExtArgs>[]
      subscriptions: Prisma.$subscriptionPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      firstname: string
      lastname: string
      phone: string | null
      email: string
      password: string
      appLanguage: string | null
      learningLanguage: string | null
      learningLevel: string | null
      theme: string | null
      avatar: string | null
      createdby: string
      createdat: Date
      updatedby: string | null
      updatedat: Date | null
      status: number
      lastentranceat: Date | null
      lastexitat: Date | null
      lastloginat: Date | null
      stripeCustomerId: string | null
    }, ExtArgs["result"]["user"]>
    composites: {}
  }

  type userGetPayload<S extends boolean | null | undefined | userDefaultArgs> = $Result.GetResult<Prisma.$userPayload, S>

  type userCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<userFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: UserCountAggregateInputType | true
    }

  export interface userDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['user'], meta: { name: 'user' } }
    /**
     * Find zero or one User that matches the filter.
     * @param {userFindUniqueArgs} args - Arguments to find a User
     * @example
     * // Get one User
     * const user = await prisma.user.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends userFindUniqueArgs>(args: SelectSubset<T, userFindUniqueArgs<ExtArgs>>): Prisma__userClient<$Result.GetResult<Prisma.$userPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one User that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {userFindUniqueOrThrowArgs} args - Arguments to find a User
     * @example
     * // Get one User
     * const user = await prisma.user.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends userFindUniqueOrThrowArgs>(args: SelectSubset<T, userFindUniqueOrThrowArgs<ExtArgs>>): Prisma__userClient<$Result.GetResult<Prisma.$userPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first User that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {userFindFirstArgs} args - Arguments to find a User
     * @example
     * // Get one User
     * const user = await prisma.user.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends userFindFirstArgs>(args?: SelectSubset<T, userFindFirstArgs<ExtArgs>>): Prisma__userClient<$Result.GetResult<Prisma.$userPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first User that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {userFindFirstOrThrowArgs} args - Arguments to find a User
     * @example
     * // Get one User
     * const user = await prisma.user.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends userFindFirstOrThrowArgs>(args?: SelectSubset<T, userFindFirstOrThrowArgs<ExtArgs>>): Prisma__userClient<$Result.GetResult<Prisma.$userPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Users that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {userFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Users
     * const users = await prisma.user.findMany()
     * 
     * // Get first 10 Users
     * const users = await prisma.user.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const userWithIdOnly = await prisma.user.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends userFindManyArgs>(args?: SelectSubset<T, userFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$userPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a User.
     * @param {userCreateArgs} args - Arguments to create a User.
     * @example
     * // Create one User
     * const User = await prisma.user.create({
     *   data: {
     *     // ... data to create a User
     *   }
     * })
     * 
     */
    create<T extends userCreateArgs>(args: SelectSubset<T, userCreateArgs<ExtArgs>>): Prisma__userClient<$Result.GetResult<Prisma.$userPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Users.
     * @param {userCreateManyArgs} args - Arguments to create many Users.
     * @example
     * // Create many Users
     * const user = await prisma.user.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends userCreateManyArgs>(args?: SelectSubset<T, userCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Users and returns the data saved in the database.
     * @param {userCreateManyAndReturnArgs} args - Arguments to create many Users.
     * @example
     * // Create many Users
     * const user = await prisma.user.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Users and only return the `id`
     * const userWithIdOnly = await prisma.user.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends userCreateManyAndReturnArgs>(args?: SelectSubset<T, userCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$userPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a User.
     * @param {userDeleteArgs} args - Arguments to delete one User.
     * @example
     * // Delete one User
     * const User = await prisma.user.delete({
     *   where: {
     *     // ... filter to delete one User
     *   }
     * })
     * 
     */
    delete<T extends userDeleteArgs>(args: SelectSubset<T, userDeleteArgs<ExtArgs>>): Prisma__userClient<$Result.GetResult<Prisma.$userPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one User.
     * @param {userUpdateArgs} args - Arguments to update one User.
     * @example
     * // Update one User
     * const user = await prisma.user.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends userUpdateArgs>(args: SelectSubset<T, userUpdateArgs<ExtArgs>>): Prisma__userClient<$Result.GetResult<Prisma.$userPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Users.
     * @param {userDeleteManyArgs} args - Arguments to filter Users to delete.
     * @example
     * // Delete a few Users
     * const { count } = await prisma.user.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends userDeleteManyArgs>(args?: SelectSubset<T, userDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Users.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {userUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Users
     * const user = await prisma.user.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends userUpdateManyArgs>(args: SelectSubset<T, userUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Users and returns the data updated in the database.
     * @param {userUpdateManyAndReturnArgs} args - Arguments to update many Users.
     * @example
     * // Update many Users
     * const user = await prisma.user.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Users and only return the `id`
     * const userWithIdOnly = await prisma.user.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends userUpdateManyAndReturnArgs>(args: SelectSubset<T, userUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$userPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one User.
     * @param {userUpsertArgs} args - Arguments to update or create a User.
     * @example
     * // Update or create a User
     * const user = await prisma.user.upsert({
     *   create: {
     *     // ... data to create a User
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the User we want to update
     *   }
     * })
     */
    upsert<T extends userUpsertArgs>(args: SelectSubset<T, userUpsertArgs<ExtArgs>>): Prisma__userClient<$Result.GetResult<Prisma.$userPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Users.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {userCountArgs} args - Arguments to filter Users to count.
     * @example
     * // Count the number of Users
     * const count = await prisma.user.count({
     *   where: {
     *     // ... the filter for the Users we want to count
     *   }
     * })
    **/
    count<T extends userCountArgs>(
      args?: Subset<T, userCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], UserCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a User.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends UserAggregateArgs>(args: Subset<T, UserAggregateArgs>): Prisma.PrismaPromise<GetUserAggregateType<T>>

    /**
     * Group by User.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {userGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends userGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: userGroupByArgs['orderBy'] }
        : { orderBy?: userGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, userGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetUserGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the user model
   */
  readonly fields: userFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for user.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__userClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    notificationuser<T extends user$notificationuserArgs<ExtArgs> = {}>(args?: Subset<T, user$notificationuserArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$notificationPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    createdapiclients<T extends user$createdapiclientsArgs<ExtArgs> = {}>(args?: Subset<T, user$createdapiclientsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$apiclientPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    updatedapiclients<T extends user$updatedapiclientsArgs<ExtArgs> = {}>(args?: Subset<T, user$updatedapiclientsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$apiclientPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    createdpermissions<T extends user$createdpermissionsArgs<ExtArgs> = {}>(args?: Subset<T, user$createdpermissionsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$permissionPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    updatedpermissions<T extends user$updatedpermissionsArgs<ExtArgs> = {}>(args?: Subset<T, user$updatedpermissionsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$permissionPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    refreshtokens<T extends user$refreshtokensArgs<ExtArgs> = {}>(args?: Subset<T, user$refreshtokensArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$refreshtokenPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    createdroles<T extends user$createdrolesArgs<ExtArgs> = {}>(args?: Subset<T, user$createdrolesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$rolePayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    updatedroles<T extends user$updatedrolesArgs<ExtArgs> = {}>(args?: Subset<T, user$updatedrolesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$rolePayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    createdrolepermissions<T extends user$createdrolepermissionsArgs<ExtArgs> = {}>(args?: Subset<T, user$createdrolepermissionsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$rolepermissionPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    updatedrolepermissions<T extends user$updatedrolepermissionsArgs<ExtArgs> = {}>(args?: Subset<T, user$updatedrolepermissionsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$rolepermissionPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    createduser<T extends userDefaultArgs<ExtArgs> = {}>(args?: Subset<T, userDefaultArgs<ExtArgs>>): Prisma__userClient<$Result.GetResult<Prisma.$userPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    createdusers<T extends user$createdusersArgs<ExtArgs> = {}>(args?: Subset<T, user$createdusersArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$userPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    updateduser<T extends user$updateduserArgs<ExtArgs> = {}>(args?: Subset<T, user$updateduserArgs<ExtArgs>>): Prisma__userClient<$Result.GetResult<Prisma.$userPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    updatedusers<T extends user$updatedusersArgs<ExtArgs> = {}>(args?: Subset<T, user$updatedusersArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$userPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    createduserpermissions<T extends user$createduserpermissionsArgs<ExtArgs> = {}>(args?: Subset<T, user$createduserpermissionsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$userpermissionPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    updateduserpermissions<T extends user$updateduserpermissionsArgs<ExtArgs> = {}>(args?: Subset<T, user$updateduserpermissionsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$userpermissionPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    userpermissions<T extends user$userpermissionsArgs<ExtArgs> = {}>(args?: Subset<T, user$userpermissionsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$userpermissionPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    createduserroles<T extends user$createduserrolesArgs<ExtArgs> = {}>(args?: Subset<T, user$createduserrolesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$userrolePayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    updateduserroles<T extends user$updateduserrolesArgs<ExtArgs> = {}>(args?: Subset<T, user$updateduserrolesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$userrolePayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    userroles<T extends user$userrolesArgs<ExtArgs> = {}>(args?: Subset<T, user$userrolesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$userrolePayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    language<T extends user$languageArgs<ExtArgs> = {}>(args?: Subset<T, user$languageArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$languagesPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    learningProgress<T extends user$learningProgressArgs<ExtArgs> = {}>(args?: Subset<T, user$learningProgressArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$learningProgressPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    chats<T extends user$chatsArgs<ExtArgs> = {}>(args?: Subset<T, user$chatsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$chatPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    chatRooms<T extends user$chatRoomsArgs<ExtArgs> = {}>(args?: Subset<T, user$chatRoomsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$chatRoomPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    subscriptions<T extends user$subscriptionsArgs<ExtArgs> = {}>(args?: Subset<T, user$subscriptionsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$subscriptionPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the user model
   */
  interface userFieldRefs {
    readonly id: FieldRef<"user", 'String'>
    readonly firstname: FieldRef<"user", 'String'>
    readonly lastname: FieldRef<"user", 'String'>
    readonly phone: FieldRef<"user", 'String'>
    readonly email: FieldRef<"user", 'String'>
    readonly password: FieldRef<"user", 'String'>
    readonly appLanguage: FieldRef<"user", 'String'>
    readonly learningLanguage: FieldRef<"user", 'String'>
    readonly learningLevel: FieldRef<"user", 'String'>
    readonly theme: FieldRef<"user", 'String'>
    readonly avatar: FieldRef<"user", 'String'>
    readonly createdby: FieldRef<"user", 'String'>
    readonly createdat: FieldRef<"user", 'DateTime'>
    readonly updatedby: FieldRef<"user", 'String'>
    readonly updatedat: FieldRef<"user", 'DateTime'>
    readonly status: FieldRef<"user", 'Int'>
    readonly lastentranceat: FieldRef<"user", 'DateTime'>
    readonly lastexitat: FieldRef<"user", 'DateTime'>
    readonly lastloginat: FieldRef<"user", 'DateTime'>
    readonly stripeCustomerId: FieldRef<"user", 'String'>
  }
    

  // Custom InputTypes
  /**
   * user findUnique
   */
  export type userFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user
     */
    select?: userSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user
     */
    omit?: userOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: userInclude<ExtArgs> | null
    /**
     * Filter, which user to fetch.
     */
    where: userWhereUniqueInput
  }

  /**
   * user findUniqueOrThrow
   */
  export type userFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user
     */
    select?: userSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user
     */
    omit?: userOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: userInclude<ExtArgs> | null
    /**
     * Filter, which user to fetch.
     */
    where: userWhereUniqueInput
  }

  /**
   * user findFirst
   */
  export type userFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user
     */
    select?: userSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user
     */
    omit?: userOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: userInclude<ExtArgs> | null
    /**
     * Filter, which user to fetch.
     */
    where?: userWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of users to fetch.
     */
    orderBy?: userOrderByWithRelationInput | userOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for users.
     */
    cursor?: userWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` users.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of users.
     */
    distinct?: UserScalarFieldEnum | UserScalarFieldEnum[]
  }

  /**
   * user findFirstOrThrow
   */
  export type userFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user
     */
    select?: userSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user
     */
    omit?: userOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: userInclude<ExtArgs> | null
    /**
     * Filter, which user to fetch.
     */
    where?: userWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of users to fetch.
     */
    orderBy?: userOrderByWithRelationInput | userOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for users.
     */
    cursor?: userWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` users.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of users.
     */
    distinct?: UserScalarFieldEnum | UserScalarFieldEnum[]
  }

  /**
   * user findMany
   */
  export type userFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user
     */
    select?: userSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user
     */
    omit?: userOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: userInclude<ExtArgs> | null
    /**
     * Filter, which users to fetch.
     */
    where?: userWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of users to fetch.
     */
    orderBy?: userOrderByWithRelationInput | userOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing users.
     */
    cursor?: userWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` users.
     */
    skip?: number
    distinct?: UserScalarFieldEnum | UserScalarFieldEnum[]
  }

  /**
   * user create
   */
  export type userCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user
     */
    select?: userSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user
     */
    omit?: userOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: userInclude<ExtArgs> | null
    /**
     * The data needed to create a user.
     */
    data: XOR<userCreateInput, userUncheckedCreateInput>
  }

  /**
   * user createMany
   */
  export type userCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many users.
     */
    data: userCreateManyInput | userCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * user createManyAndReturn
   */
  export type userCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user
     */
    select?: userSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the user
     */
    omit?: userOmit<ExtArgs> | null
    /**
     * The data used to create many users.
     */
    data: userCreateManyInput | userCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: userIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * user update
   */
  export type userUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user
     */
    select?: userSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user
     */
    omit?: userOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: userInclude<ExtArgs> | null
    /**
     * The data needed to update a user.
     */
    data: XOR<userUpdateInput, userUncheckedUpdateInput>
    /**
     * Choose, which user to update.
     */
    where: userWhereUniqueInput
  }

  /**
   * user updateMany
   */
  export type userUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update users.
     */
    data: XOR<userUpdateManyMutationInput, userUncheckedUpdateManyInput>
    /**
     * Filter which users to update
     */
    where?: userWhereInput
    /**
     * Limit how many users to update.
     */
    limit?: number
  }

  /**
   * user updateManyAndReturn
   */
  export type userUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user
     */
    select?: userSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the user
     */
    omit?: userOmit<ExtArgs> | null
    /**
     * The data used to update users.
     */
    data: XOR<userUpdateManyMutationInput, userUncheckedUpdateManyInput>
    /**
     * Filter which users to update
     */
    where?: userWhereInput
    /**
     * Limit how many users to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: userIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * user upsert
   */
  export type userUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user
     */
    select?: userSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user
     */
    omit?: userOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: userInclude<ExtArgs> | null
    /**
     * The filter to search for the user to update in case it exists.
     */
    where: userWhereUniqueInput
    /**
     * In case the user found by the `where` argument doesn't exist, create a new user with this data.
     */
    create: XOR<userCreateInput, userUncheckedCreateInput>
    /**
     * In case the user was found with the provided `where` argument, update it with this data.
     */
    update: XOR<userUpdateInput, userUncheckedUpdateInput>
  }

  /**
   * user delete
   */
  export type userDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user
     */
    select?: userSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user
     */
    omit?: userOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: userInclude<ExtArgs> | null
    /**
     * Filter which user to delete.
     */
    where: userWhereUniqueInput
  }

  /**
   * user deleteMany
   */
  export type userDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which users to delete
     */
    where?: userWhereInput
    /**
     * Limit how many users to delete.
     */
    limit?: number
  }

  /**
   * user.notificationuser
   */
  export type user$notificationuserArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the notification
     */
    select?: notificationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the notification
     */
    omit?: notificationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: notificationInclude<ExtArgs> | null
    where?: notificationWhereInput
    orderBy?: notificationOrderByWithRelationInput | notificationOrderByWithRelationInput[]
    cursor?: notificationWhereUniqueInput
    take?: number
    skip?: number
    distinct?: NotificationScalarFieldEnum | NotificationScalarFieldEnum[]
  }

  /**
   * user.createdapiclients
   */
  export type user$createdapiclientsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the apiclient
     */
    select?: apiclientSelect<ExtArgs> | null
    /**
     * Omit specific fields from the apiclient
     */
    omit?: apiclientOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: apiclientInclude<ExtArgs> | null
    where?: apiclientWhereInput
    orderBy?: apiclientOrderByWithRelationInput | apiclientOrderByWithRelationInput[]
    cursor?: apiclientWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ApiclientScalarFieldEnum | ApiclientScalarFieldEnum[]
  }

  /**
   * user.updatedapiclients
   */
  export type user$updatedapiclientsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the apiclient
     */
    select?: apiclientSelect<ExtArgs> | null
    /**
     * Omit specific fields from the apiclient
     */
    omit?: apiclientOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: apiclientInclude<ExtArgs> | null
    where?: apiclientWhereInput
    orderBy?: apiclientOrderByWithRelationInput | apiclientOrderByWithRelationInput[]
    cursor?: apiclientWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ApiclientScalarFieldEnum | ApiclientScalarFieldEnum[]
  }

  /**
   * user.createdpermissions
   */
  export type user$createdpermissionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the permission
     */
    select?: permissionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the permission
     */
    omit?: permissionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: permissionInclude<ExtArgs> | null
    where?: permissionWhereInput
    orderBy?: permissionOrderByWithRelationInput | permissionOrderByWithRelationInput[]
    cursor?: permissionWhereUniqueInput
    take?: number
    skip?: number
    distinct?: PermissionScalarFieldEnum | PermissionScalarFieldEnum[]
  }

  /**
   * user.updatedpermissions
   */
  export type user$updatedpermissionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the permission
     */
    select?: permissionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the permission
     */
    omit?: permissionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: permissionInclude<ExtArgs> | null
    where?: permissionWhereInput
    orderBy?: permissionOrderByWithRelationInput | permissionOrderByWithRelationInput[]
    cursor?: permissionWhereUniqueInput
    take?: number
    skip?: number
    distinct?: PermissionScalarFieldEnum | PermissionScalarFieldEnum[]
  }

  /**
   * user.refreshtokens
   */
  export type user$refreshtokensArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the refreshtoken
     */
    select?: refreshtokenSelect<ExtArgs> | null
    /**
     * Omit specific fields from the refreshtoken
     */
    omit?: refreshtokenOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: refreshtokenInclude<ExtArgs> | null
    where?: refreshtokenWhereInput
    orderBy?: refreshtokenOrderByWithRelationInput | refreshtokenOrderByWithRelationInput[]
    cursor?: refreshtokenWhereUniqueInput
    take?: number
    skip?: number
    distinct?: RefreshtokenScalarFieldEnum | RefreshtokenScalarFieldEnum[]
  }

  /**
   * user.createdroles
   */
  export type user$createdrolesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the role
     */
    select?: roleSelect<ExtArgs> | null
    /**
     * Omit specific fields from the role
     */
    omit?: roleOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: roleInclude<ExtArgs> | null
    where?: roleWhereInput
    orderBy?: roleOrderByWithRelationInput | roleOrderByWithRelationInput[]
    cursor?: roleWhereUniqueInput
    take?: number
    skip?: number
    distinct?: RoleScalarFieldEnum | RoleScalarFieldEnum[]
  }

  /**
   * user.updatedroles
   */
  export type user$updatedrolesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the role
     */
    select?: roleSelect<ExtArgs> | null
    /**
     * Omit specific fields from the role
     */
    omit?: roleOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: roleInclude<ExtArgs> | null
    where?: roleWhereInput
    orderBy?: roleOrderByWithRelationInput | roleOrderByWithRelationInput[]
    cursor?: roleWhereUniqueInput
    take?: number
    skip?: number
    distinct?: RoleScalarFieldEnum | RoleScalarFieldEnum[]
  }

  /**
   * user.createdrolepermissions
   */
  export type user$createdrolepermissionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the rolepermission
     */
    select?: rolepermissionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the rolepermission
     */
    omit?: rolepermissionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: rolepermissionInclude<ExtArgs> | null
    where?: rolepermissionWhereInput
    orderBy?: rolepermissionOrderByWithRelationInput | rolepermissionOrderByWithRelationInput[]
    cursor?: rolepermissionWhereUniqueInput
    take?: number
    skip?: number
    distinct?: RolepermissionScalarFieldEnum | RolepermissionScalarFieldEnum[]
  }

  /**
   * user.updatedrolepermissions
   */
  export type user$updatedrolepermissionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the rolepermission
     */
    select?: rolepermissionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the rolepermission
     */
    omit?: rolepermissionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: rolepermissionInclude<ExtArgs> | null
    where?: rolepermissionWhereInput
    orderBy?: rolepermissionOrderByWithRelationInput | rolepermissionOrderByWithRelationInput[]
    cursor?: rolepermissionWhereUniqueInput
    take?: number
    skip?: number
    distinct?: RolepermissionScalarFieldEnum | RolepermissionScalarFieldEnum[]
  }

  /**
   * user.createdusers
   */
  export type user$createdusersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user
     */
    select?: userSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user
     */
    omit?: userOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: userInclude<ExtArgs> | null
    where?: userWhereInput
    orderBy?: userOrderByWithRelationInput | userOrderByWithRelationInput[]
    cursor?: userWhereUniqueInput
    take?: number
    skip?: number
    distinct?: UserScalarFieldEnum | UserScalarFieldEnum[]
  }

  /**
   * user.updateduser
   */
  export type user$updateduserArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user
     */
    select?: userSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user
     */
    omit?: userOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: userInclude<ExtArgs> | null
    where?: userWhereInput
  }

  /**
   * user.updatedusers
   */
  export type user$updatedusersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user
     */
    select?: userSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user
     */
    omit?: userOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: userInclude<ExtArgs> | null
    where?: userWhereInput
    orderBy?: userOrderByWithRelationInput | userOrderByWithRelationInput[]
    cursor?: userWhereUniqueInput
    take?: number
    skip?: number
    distinct?: UserScalarFieldEnum | UserScalarFieldEnum[]
  }

  /**
   * user.createduserpermissions
   */
  export type user$createduserpermissionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the userpermission
     */
    select?: userpermissionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the userpermission
     */
    omit?: userpermissionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: userpermissionInclude<ExtArgs> | null
    where?: userpermissionWhereInput
    orderBy?: userpermissionOrderByWithRelationInput | userpermissionOrderByWithRelationInput[]
    cursor?: userpermissionWhereUniqueInput
    take?: number
    skip?: number
    distinct?: UserpermissionScalarFieldEnum | UserpermissionScalarFieldEnum[]
  }

  /**
   * user.updateduserpermissions
   */
  export type user$updateduserpermissionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the userpermission
     */
    select?: userpermissionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the userpermission
     */
    omit?: userpermissionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: userpermissionInclude<ExtArgs> | null
    where?: userpermissionWhereInput
    orderBy?: userpermissionOrderByWithRelationInput | userpermissionOrderByWithRelationInput[]
    cursor?: userpermissionWhereUniqueInput
    take?: number
    skip?: number
    distinct?: UserpermissionScalarFieldEnum | UserpermissionScalarFieldEnum[]
  }

  /**
   * user.userpermissions
   */
  export type user$userpermissionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the userpermission
     */
    select?: userpermissionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the userpermission
     */
    omit?: userpermissionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: userpermissionInclude<ExtArgs> | null
    where?: userpermissionWhereInput
    orderBy?: userpermissionOrderByWithRelationInput | userpermissionOrderByWithRelationInput[]
    cursor?: userpermissionWhereUniqueInput
    take?: number
    skip?: number
    distinct?: UserpermissionScalarFieldEnum | UserpermissionScalarFieldEnum[]
  }

  /**
   * user.createduserroles
   */
  export type user$createduserrolesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the userrole
     */
    select?: userroleSelect<ExtArgs> | null
    /**
     * Omit specific fields from the userrole
     */
    omit?: userroleOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: userroleInclude<ExtArgs> | null
    where?: userroleWhereInput
    orderBy?: userroleOrderByWithRelationInput | userroleOrderByWithRelationInput[]
    cursor?: userroleWhereUniqueInput
    take?: number
    skip?: number
    distinct?: UserroleScalarFieldEnum | UserroleScalarFieldEnum[]
  }

  /**
   * user.updateduserroles
   */
  export type user$updateduserrolesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the userrole
     */
    select?: userroleSelect<ExtArgs> | null
    /**
     * Omit specific fields from the userrole
     */
    omit?: userroleOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: userroleInclude<ExtArgs> | null
    where?: userroleWhereInput
    orderBy?: userroleOrderByWithRelationInput | userroleOrderByWithRelationInput[]
    cursor?: userroleWhereUniqueInput
    take?: number
    skip?: number
    distinct?: UserroleScalarFieldEnum | UserroleScalarFieldEnum[]
  }

  /**
   * user.userroles
   */
  export type user$userrolesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the userrole
     */
    select?: userroleSelect<ExtArgs> | null
    /**
     * Omit specific fields from the userrole
     */
    omit?: userroleOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: userroleInclude<ExtArgs> | null
    where?: userroleWhereInput
    orderBy?: userroleOrderByWithRelationInput | userroleOrderByWithRelationInput[]
    cursor?: userroleWhereUniqueInput
    take?: number
    skip?: number
    distinct?: UserroleScalarFieldEnum | UserroleScalarFieldEnum[]
  }

  /**
   * user.language
   */
  export type user$languageArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the languages
     */
    select?: languagesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the languages
     */
    omit?: languagesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: languagesInclude<ExtArgs> | null
    where?: languagesWhereInput
    orderBy?: languagesOrderByWithRelationInput | languagesOrderByWithRelationInput[]
    cursor?: languagesWhereUniqueInput
    take?: number
    skip?: number
    distinct?: LanguagesScalarFieldEnum | LanguagesScalarFieldEnum[]
  }

  /**
   * user.learningProgress
   */
  export type user$learningProgressArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the learningProgress
     */
    select?: learningProgressSelect<ExtArgs> | null
    /**
     * Omit specific fields from the learningProgress
     */
    omit?: learningProgressOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: learningProgressInclude<ExtArgs> | null
    where?: learningProgressWhereInput
    orderBy?: learningProgressOrderByWithRelationInput | learningProgressOrderByWithRelationInput[]
    cursor?: learningProgressWhereUniqueInput
    take?: number
    skip?: number
    distinct?: LearningProgressScalarFieldEnum | LearningProgressScalarFieldEnum[]
  }

  /**
   * user.chats
   */
  export type user$chatsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the chat
     */
    select?: chatSelect<ExtArgs> | null
    /**
     * Omit specific fields from the chat
     */
    omit?: chatOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: chatInclude<ExtArgs> | null
    where?: chatWhereInput
    orderBy?: chatOrderByWithRelationInput | chatOrderByWithRelationInput[]
    cursor?: chatWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ChatScalarFieldEnum | ChatScalarFieldEnum[]
  }

  /**
   * user.chatRooms
   */
  export type user$chatRoomsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the chatRoom
     */
    select?: chatRoomSelect<ExtArgs> | null
    /**
     * Omit specific fields from the chatRoom
     */
    omit?: chatRoomOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: chatRoomInclude<ExtArgs> | null
    where?: chatRoomWhereInput
    orderBy?: chatRoomOrderByWithRelationInput | chatRoomOrderByWithRelationInput[]
    cursor?: chatRoomWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ChatRoomScalarFieldEnum | ChatRoomScalarFieldEnum[]
  }

  /**
   * user.subscriptions
   */
  export type user$subscriptionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the subscription
     */
    select?: subscriptionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the subscription
     */
    omit?: subscriptionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: subscriptionInclude<ExtArgs> | null
    where?: subscriptionWhereInput
    orderBy?: subscriptionOrderByWithRelationInput | subscriptionOrderByWithRelationInput[]
    cursor?: subscriptionWhereUniqueInput
    take?: number
    skip?: number
    distinct?: SubscriptionScalarFieldEnum | SubscriptionScalarFieldEnum[]
  }

  /**
   * user without action
   */
  export type userDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user
     */
    select?: userSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user
     */
    omit?: userOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: userInclude<ExtArgs> | null
  }


  /**
   * Model userpermission
   */

  export type AggregateUserpermission = {
    _count: UserpermissionCountAggregateOutputType | null
    _min: UserpermissionMinAggregateOutputType | null
    _max: UserpermissionMaxAggregateOutputType | null
  }

  export type UserpermissionMinAggregateOutputType = {
    id: string | null
    userid: string | null
    permissionid: string | null
    createdby: string | null
    createdat: Date | null
    updatedby: string | null
    updatedat: Date | null
  }

  export type UserpermissionMaxAggregateOutputType = {
    id: string | null
    userid: string | null
    permissionid: string | null
    createdby: string | null
    createdat: Date | null
    updatedby: string | null
    updatedat: Date | null
  }

  export type UserpermissionCountAggregateOutputType = {
    id: number
    userid: number
    permissionid: number
    createdby: number
    createdat: number
    updatedby: number
    updatedat: number
    _all: number
  }


  export type UserpermissionMinAggregateInputType = {
    id?: true
    userid?: true
    permissionid?: true
    createdby?: true
    createdat?: true
    updatedby?: true
    updatedat?: true
  }

  export type UserpermissionMaxAggregateInputType = {
    id?: true
    userid?: true
    permissionid?: true
    createdby?: true
    createdat?: true
    updatedby?: true
    updatedat?: true
  }

  export type UserpermissionCountAggregateInputType = {
    id?: true
    userid?: true
    permissionid?: true
    createdby?: true
    createdat?: true
    updatedby?: true
    updatedat?: true
    _all?: true
  }

  export type UserpermissionAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which userpermission to aggregate.
     */
    where?: userpermissionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of userpermissions to fetch.
     */
    orderBy?: userpermissionOrderByWithRelationInput | userpermissionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: userpermissionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` userpermissions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` userpermissions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned userpermissions
    **/
    _count?: true | UserpermissionCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: UserpermissionMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: UserpermissionMaxAggregateInputType
  }

  export type GetUserpermissionAggregateType<T extends UserpermissionAggregateArgs> = {
        [P in keyof T & keyof AggregateUserpermission]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateUserpermission[P]>
      : GetScalarType<T[P], AggregateUserpermission[P]>
  }




  export type userpermissionGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: userpermissionWhereInput
    orderBy?: userpermissionOrderByWithAggregationInput | userpermissionOrderByWithAggregationInput[]
    by: UserpermissionScalarFieldEnum[] | UserpermissionScalarFieldEnum
    having?: userpermissionScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: UserpermissionCountAggregateInputType | true
    _min?: UserpermissionMinAggregateInputType
    _max?: UserpermissionMaxAggregateInputType
  }

  export type UserpermissionGroupByOutputType = {
    id: string
    userid: string
    permissionid: string
    createdby: string
    createdat: Date
    updatedby: string | null
    updatedat: Date | null
    _count: UserpermissionCountAggregateOutputType | null
    _min: UserpermissionMinAggregateOutputType | null
    _max: UserpermissionMaxAggregateOutputType | null
  }

  type GetUserpermissionGroupByPayload<T extends userpermissionGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<UserpermissionGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof UserpermissionGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], UserpermissionGroupByOutputType[P]>
            : GetScalarType<T[P], UserpermissionGroupByOutputType[P]>
        }
      >
    >


  export type userpermissionSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    userid?: boolean
    permissionid?: boolean
    createdby?: boolean
    createdat?: boolean
    updatedby?: boolean
    updatedat?: boolean
    createduser?: boolean | userDefaultArgs<ExtArgs>
    permission?: boolean | permissionDefaultArgs<ExtArgs>
    updateduser?: boolean | userpermission$updateduserArgs<ExtArgs>
    user?: boolean | userDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["userpermission"]>

  export type userpermissionSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    userid?: boolean
    permissionid?: boolean
    createdby?: boolean
    createdat?: boolean
    updatedby?: boolean
    updatedat?: boolean
    createduser?: boolean | userDefaultArgs<ExtArgs>
    permission?: boolean | permissionDefaultArgs<ExtArgs>
    updateduser?: boolean | userpermission$updateduserArgs<ExtArgs>
    user?: boolean | userDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["userpermission"]>

  export type userpermissionSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    userid?: boolean
    permissionid?: boolean
    createdby?: boolean
    createdat?: boolean
    updatedby?: boolean
    updatedat?: boolean
    createduser?: boolean | userDefaultArgs<ExtArgs>
    permission?: boolean | permissionDefaultArgs<ExtArgs>
    updateduser?: boolean | userpermission$updateduserArgs<ExtArgs>
    user?: boolean | userDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["userpermission"]>

  export type userpermissionSelectScalar = {
    id?: boolean
    userid?: boolean
    permissionid?: boolean
    createdby?: boolean
    createdat?: boolean
    updatedby?: boolean
    updatedat?: boolean
  }

  export type userpermissionOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "userid" | "permissionid" | "createdby" | "createdat" | "updatedby" | "updatedat", ExtArgs["result"]["userpermission"]>
  export type userpermissionInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    createduser?: boolean | userDefaultArgs<ExtArgs>
    permission?: boolean | permissionDefaultArgs<ExtArgs>
    updateduser?: boolean | userpermission$updateduserArgs<ExtArgs>
    user?: boolean | userDefaultArgs<ExtArgs>
  }
  export type userpermissionIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    createduser?: boolean | userDefaultArgs<ExtArgs>
    permission?: boolean | permissionDefaultArgs<ExtArgs>
    updateduser?: boolean | userpermission$updateduserArgs<ExtArgs>
    user?: boolean | userDefaultArgs<ExtArgs>
  }
  export type userpermissionIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    createduser?: boolean | userDefaultArgs<ExtArgs>
    permission?: boolean | permissionDefaultArgs<ExtArgs>
    updateduser?: boolean | userpermission$updateduserArgs<ExtArgs>
    user?: boolean | userDefaultArgs<ExtArgs>
  }

  export type $userpermissionPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "userpermission"
    objects: {
      createduser: Prisma.$userPayload<ExtArgs>
      permission: Prisma.$permissionPayload<ExtArgs>
      updateduser: Prisma.$userPayload<ExtArgs> | null
      user: Prisma.$userPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      userid: string
      permissionid: string
      createdby: string
      createdat: Date
      updatedby: string | null
      updatedat: Date | null
    }, ExtArgs["result"]["userpermission"]>
    composites: {}
  }

  type userpermissionGetPayload<S extends boolean | null | undefined | userpermissionDefaultArgs> = $Result.GetResult<Prisma.$userpermissionPayload, S>

  type userpermissionCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<userpermissionFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: UserpermissionCountAggregateInputType | true
    }

  export interface userpermissionDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['userpermission'], meta: { name: 'userpermission' } }
    /**
     * Find zero or one Userpermission that matches the filter.
     * @param {userpermissionFindUniqueArgs} args - Arguments to find a Userpermission
     * @example
     * // Get one Userpermission
     * const userpermission = await prisma.userpermission.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends userpermissionFindUniqueArgs>(args: SelectSubset<T, userpermissionFindUniqueArgs<ExtArgs>>): Prisma__userpermissionClient<$Result.GetResult<Prisma.$userpermissionPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Userpermission that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {userpermissionFindUniqueOrThrowArgs} args - Arguments to find a Userpermission
     * @example
     * // Get one Userpermission
     * const userpermission = await prisma.userpermission.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends userpermissionFindUniqueOrThrowArgs>(args: SelectSubset<T, userpermissionFindUniqueOrThrowArgs<ExtArgs>>): Prisma__userpermissionClient<$Result.GetResult<Prisma.$userpermissionPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Userpermission that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {userpermissionFindFirstArgs} args - Arguments to find a Userpermission
     * @example
     * // Get one Userpermission
     * const userpermission = await prisma.userpermission.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends userpermissionFindFirstArgs>(args?: SelectSubset<T, userpermissionFindFirstArgs<ExtArgs>>): Prisma__userpermissionClient<$Result.GetResult<Prisma.$userpermissionPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Userpermission that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {userpermissionFindFirstOrThrowArgs} args - Arguments to find a Userpermission
     * @example
     * // Get one Userpermission
     * const userpermission = await prisma.userpermission.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends userpermissionFindFirstOrThrowArgs>(args?: SelectSubset<T, userpermissionFindFirstOrThrowArgs<ExtArgs>>): Prisma__userpermissionClient<$Result.GetResult<Prisma.$userpermissionPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Userpermissions that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {userpermissionFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Userpermissions
     * const userpermissions = await prisma.userpermission.findMany()
     * 
     * // Get first 10 Userpermissions
     * const userpermissions = await prisma.userpermission.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const userpermissionWithIdOnly = await prisma.userpermission.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends userpermissionFindManyArgs>(args?: SelectSubset<T, userpermissionFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$userpermissionPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Userpermission.
     * @param {userpermissionCreateArgs} args - Arguments to create a Userpermission.
     * @example
     * // Create one Userpermission
     * const Userpermission = await prisma.userpermission.create({
     *   data: {
     *     // ... data to create a Userpermission
     *   }
     * })
     * 
     */
    create<T extends userpermissionCreateArgs>(args: SelectSubset<T, userpermissionCreateArgs<ExtArgs>>): Prisma__userpermissionClient<$Result.GetResult<Prisma.$userpermissionPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Userpermissions.
     * @param {userpermissionCreateManyArgs} args - Arguments to create many Userpermissions.
     * @example
     * // Create many Userpermissions
     * const userpermission = await prisma.userpermission.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends userpermissionCreateManyArgs>(args?: SelectSubset<T, userpermissionCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Userpermissions and returns the data saved in the database.
     * @param {userpermissionCreateManyAndReturnArgs} args - Arguments to create many Userpermissions.
     * @example
     * // Create many Userpermissions
     * const userpermission = await prisma.userpermission.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Userpermissions and only return the `id`
     * const userpermissionWithIdOnly = await prisma.userpermission.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends userpermissionCreateManyAndReturnArgs>(args?: SelectSubset<T, userpermissionCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$userpermissionPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Userpermission.
     * @param {userpermissionDeleteArgs} args - Arguments to delete one Userpermission.
     * @example
     * // Delete one Userpermission
     * const Userpermission = await prisma.userpermission.delete({
     *   where: {
     *     // ... filter to delete one Userpermission
     *   }
     * })
     * 
     */
    delete<T extends userpermissionDeleteArgs>(args: SelectSubset<T, userpermissionDeleteArgs<ExtArgs>>): Prisma__userpermissionClient<$Result.GetResult<Prisma.$userpermissionPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Userpermission.
     * @param {userpermissionUpdateArgs} args - Arguments to update one Userpermission.
     * @example
     * // Update one Userpermission
     * const userpermission = await prisma.userpermission.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends userpermissionUpdateArgs>(args: SelectSubset<T, userpermissionUpdateArgs<ExtArgs>>): Prisma__userpermissionClient<$Result.GetResult<Prisma.$userpermissionPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Userpermissions.
     * @param {userpermissionDeleteManyArgs} args - Arguments to filter Userpermissions to delete.
     * @example
     * // Delete a few Userpermissions
     * const { count } = await prisma.userpermission.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends userpermissionDeleteManyArgs>(args?: SelectSubset<T, userpermissionDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Userpermissions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {userpermissionUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Userpermissions
     * const userpermission = await prisma.userpermission.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends userpermissionUpdateManyArgs>(args: SelectSubset<T, userpermissionUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Userpermissions and returns the data updated in the database.
     * @param {userpermissionUpdateManyAndReturnArgs} args - Arguments to update many Userpermissions.
     * @example
     * // Update many Userpermissions
     * const userpermission = await prisma.userpermission.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Userpermissions and only return the `id`
     * const userpermissionWithIdOnly = await prisma.userpermission.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends userpermissionUpdateManyAndReturnArgs>(args: SelectSubset<T, userpermissionUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$userpermissionPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Userpermission.
     * @param {userpermissionUpsertArgs} args - Arguments to update or create a Userpermission.
     * @example
     * // Update or create a Userpermission
     * const userpermission = await prisma.userpermission.upsert({
     *   create: {
     *     // ... data to create a Userpermission
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Userpermission we want to update
     *   }
     * })
     */
    upsert<T extends userpermissionUpsertArgs>(args: SelectSubset<T, userpermissionUpsertArgs<ExtArgs>>): Prisma__userpermissionClient<$Result.GetResult<Prisma.$userpermissionPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Userpermissions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {userpermissionCountArgs} args - Arguments to filter Userpermissions to count.
     * @example
     * // Count the number of Userpermissions
     * const count = await prisma.userpermission.count({
     *   where: {
     *     // ... the filter for the Userpermissions we want to count
     *   }
     * })
    **/
    count<T extends userpermissionCountArgs>(
      args?: Subset<T, userpermissionCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], UserpermissionCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Userpermission.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserpermissionAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends UserpermissionAggregateArgs>(args: Subset<T, UserpermissionAggregateArgs>): Prisma.PrismaPromise<GetUserpermissionAggregateType<T>>

    /**
     * Group by Userpermission.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {userpermissionGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends userpermissionGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: userpermissionGroupByArgs['orderBy'] }
        : { orderBy?: userpermissionGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, userpermissionGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetUserpermissionGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the userpermission model
   */
  readonly fields: userpermissionFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for userpermission.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__userpermissionClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    createduser<T extends userDefaultArgs<ExtArgs> = {}>(args?: Subset<T, userDefaultArgs<ExtArgs>>): Prisma__userClient<$Result.GetResult<Prisma.$userPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    permission<T extends permissionDefaultArgs<ExtArgs> = {}>(args?: Subset<T, permissionDefaultArgs<ExtArgs>>): Prisma__permissionClient<$Result.GetResult<Prisma.$permissionPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    updateduser<T extends userpermission$updateduserArgs<ExtArgs> = {}>(args?: Subset<T, userpermission$updateduserArgs<ExtArgs>>): Prisma__userClient<$Result.GetResult<Prisma.$userPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    user<T extends userDefaultArgs<ExtArgs> = {}>(args?: Subset<T, userDefaultArgs<ExtArgs>>): Prisma__userClient<$Result.GetResult<Prisma.$userPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the userpermission model
   */
  interface userpermissionFieldRefs {
    readonly id: FieldRef<"userpermission", 'String'>
    readonly userid: FieldRef<"userpermission", 'String'>
    readonly permissionid: FieldRef<"userpermission", 'String'>
    readonly createdby: FieldRef<"userpermission", 'String'>
    readonly createdat: FieldRef<"userpermission", 'DateTime'>
    readonly updatedby: FieldRef<"userpermission", 'String'>
    readonly updatedat: FieldRef<"userpermission", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * userpermission findUnique
   */
  export type userpermissionFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the userpermission
     */
    select?: userpermissionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the userpermission
     */
    omit?: userpermissionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: userpermissionInclude<ExtArgs> | null
    /**
     * Filter, which userpermission to fetch.
     */
    where: userpermissionWhereUniqueInput
  }

  /**
   * userpermission findUniqueOrThrow
   */
  export type userpermissionFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the userpermission
     */
    select?: userpermissionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the userpermission
     */
    omit?: userpermissionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: userpermissionInclude<ExtArgs> | null
    /**
     * Filter, which userpermission to fetch.
     */
    where: userpermissionWhereUniqueInput
  }

  /**
   * userpermission findFirst
   */
  export type userpermissionFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the userpermission
     */
    select?: userpermissionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the userpermission
     */
    omit?: userpermissionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: userpermissionInclude<ExtArgs> | null
    /**
     * Filter, which userpermission to fetch.
     */
    where?: userpermissionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of userpermissions to fetch.
     */
    orderBy?: userpermissionOrderByWithRelationInput | userpermissionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for userpermissions.
     */
    cursor?: userpermissionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` userpermissions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` userpermissions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of userpermissions.
     */
    distinct?: UserpermissionScalarFieldEnum | UserpermissionScalarFieldEnum[]
  }

  /**
   * userpermission findFirstOrThrow
   */
  export type userpermissionFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the userpermission
     */
    select?: userpermissionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the userpermission
     */
    omit?: userpermissionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: userpermissionInclude<ExtArgs> | null
    /**
     * Filter, which userpermission to fetch.
     */
    where?: userpermissionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of userpermissions to fetch.
     */
    orderBy?: userpermissionOrderByWithRelationInput | userpermissionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for userpermissions.
     */
    cursor?: userpermissionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` userpermissions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` userpermissions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of userpermissions.
     */
    distinct?: UserpermissionScalarFieldEnum | UserpermissionScalarFieldEnum[]
  }

  /**
   * userpermission findMany
   */
  export type userpermissionFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the userpermission
     */
    select?: userpermissionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the userpermission
     */
    omit?: userpermissionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: userpermissionInclude<ExtArgs> | null
    /**
     * Filter, which userpermissions to fetch.
     */
    where?: userpermissionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of userpermissions to fetch.
     */
    orderBy?: userpermissionOrderByWithRelationInput | userpermissionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing userpermissions.
     */
    cursor?: userpermissionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` userpermissions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` userpermissions.
     */
    skip?: number
    distinct?: UserpermissionScalarFieldEnum | UserpermissionScalarFieldEnum[]
  }

  /**
   * userpermission create
   */
  export type userpermissionCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the userpermission
     */
    select?: userpermissionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the userpermission
     */
    omit?: userpermissionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: userpermissionInclude<ExtArgs> | null
    /**
     * The data needed to create a userpermission.
     */
    data: XOR<userpermissionCreateInput, userpermissionUncheckedCreateInput>
  }

  /**
   * userpermission createMany
   */
  export type userpermissionCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many userpermissions.
     */
    data: userpermissionCreateManyInput | userpermissionCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * userpermission createManyAndReturn
   */
  export type userpermissionCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the userpermission
     */
    select?: userpermissionSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the userpermission
     */
    omit?: userpermissionOmit<ExtArgs> | null
    /**
     * The data used to create many userpermissions.
     */
    data: userpermissionCreateManyInput | userpermissionCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: userpermissionIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * userpermission update
   */
  export type userpermissionUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the userpermission
     */
    select?: userpermissionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the userpermission
     */
    omit?: userpermissionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: userpermissionInclude<ExtArgs> | null
    /**
     * The data needed to update a userpermission.
     */
    data: XOR<userpermissionUpdateInput, userpermissionUncheckedUpdateInput>
    /**
     * Choose, which userpermission to update.
     */
    where: userpermissionWhereUniqueInput
  }

  /**
   * userpermission updateMany
   */
  export type userpermissionUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update userpermissions.
     */
    data: XOR<userpermissionUpdateManyMutationInput, userpermissionUncheckedUpdateManyInput>
    /**
     * Filter which userpermissions to update
     */
    where?: userpermissionWhereInput
    /**
     * Limit how many userpermissions to update.
     */
    limit?: number
  }

  /**
   * userpermission updateManyAndReturn
   */
  export type userpermissionUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the userpermission
     */
    select?: userpermissionSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the userpermission
     */
    omit?: userpermissionOmit<ExtArgs> | null
    /**
     * The data used to update userpermissions.
     */
    data: XOR<userpermissionUpdateManyMutationInput, userpermissionUncheckedUpdateManyInput>
    /**
     * Filter which userpermissions to update
     */
    where?: userpermissionWhereInput
    /**
     * Limit how many userpermissions to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: userpermissionIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * userpermission upsert
   */
  export type userpermissionUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the userpermission
     */
    select?: userpermissionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the userpermission
     */
    omit?: userpermissionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: userpermissionInclude<ExtArgs> | null
    /**
     * The filter to search for the userpermission to update in case it exists.
     */
    where: userpermissionWhereUniqueInput
    /**
     * In case the userpermission found by the `where` argument doesn't exist, create a new userpermission with this data.
     */
    create: XOR<userpermissionCreateInput, userpermissionUncheckedCreateInput>
    /**
     * In case the userpermission was found with the provided `where` argument, update it with this data.
     */
    update: XOR<userpermissionUpdateInput, userpermissionUncheckedUpdateInput>
  }

  /**
   * userpermission delete
   */
  export type userpermissionDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the userpermission
     */
    select?: userpermissionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the userpermission
     */
    omit?: userpermissionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: userpermissionInclude<ExtArgs> | null
    /**
     * Filter which userpermission to delete.
     */
    where: userpermissionWhereUniqueInput
  }

  /**
   * userpermission deleteMany
   */
  export type userpermissionDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which userpermissions to delete
     */
    where?: userpermissionWhereInput
    /**
     * Limit how many userpermissions to delete.
     */
    limit?: number
  }

  /**
   * userpermission.updateduser
   */
  export type userpermission$updateduserArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user
     */
    select?: userSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user
     */
    omit?: userOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: userInclude<ExtArgs> | null
    where?: userWhereInput
  }

  /**
   * userpermission without action
   */
  export type userpermissionDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the userpermission
     */
    select?: userpermissionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the userpermission
     */
    omit?: userpermissionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: userpermissionInclude<ExtArgs> | null
  }


  /**
   * Model userrole
   */

  export type AggregateUserrole = {
    _count: UserroleCountAggregateOutputType | null
    _min: UserroleMinAggregateOutputType | null
    _max: UserroleMaxAggregateOutputType | null
  }

  export type UserroleMinAggregateOutputType = {
    id: string | null
    userid: string | null
    roleid: string | null
    createdby: string | null
    createdat: Date | null
    updatedby: string | null
    updatedat: Date | null
  }

  export type UserroleMaxAggregateOutputType = {
    id: string | null
    userid: string | null
    roleid: string | null
    createdby: string | null
    createdat: Date | null
    updatedby: string | null
    updatedat: Date | null
  }

  export type UserroleCountAggregateOutputType = {
    id: number
    userid: number
    roleid: number
    createdby: number
    createdat: number
    updatedby: number
    updatedat: number
    _all: number
  }


  export type UserroleMinAggregateInputType = {
    id?: true
    userid?: true
    roleid?: true
    createdby?: true
    createdat?: true
    updatedby?: true
    updatedat?: true
  }

  export type UserroleMaxAggregateInputType = {
    id?: true
    userid?: true
    roleid?: true
    createdby?: true
    createdat?: true
    updatedby?: true
    updatedat?: true
  }

  export type UserroleCountAggregateInputType = {
    id?: true
    userid?: true
    roleid?: true
    createdby?: true
    createdat?: true
    updatedby?: true
    updatedat?: true
    _all?: true
  }

  export type UserroleAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which userrole to aggregate.
     */
    where?: userroleWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of userroles to fetch.
     */
    orderBy?: userroleOrderByWithRelationInput | userroleOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: userroleWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` userroles from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` userroles.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned userroles
    **/
    _count?: true | UserroleCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: UserroleMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: UserroleMaxAggregateInputType
  }

  export type GetUserroleAggregateType<T extends UserroleAggregateArgs> = {
        [P in keyof T & keyof AggregateUserrole]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateUserrole[P]>
      : GetScalarType<T[P], AggregateUserrole[P]>
  }




  export type userroleGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: userroleWhereInput
    orderBy?: userroleOrderByWithAggregationInput | userroleOrderByWithAggregationInput[]
    by: UserroleScalarFieldEnum[] | UserroleScalarFieldEnum
    having?: userroleScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: UserroleCountAggregateInputType | true
    _min?: UserroleMinAggregateInputType
    _max?: UserroleMaxAggregateInputType
  }

  export type UserroleGroupByOutputType = {
    id: string
    userid: string
    roleid: string
    createdby: string
    createdat: Date
    updatedby: string | null
    updatedat: Date | null
    _count: UserroleCountAggregateOutputType | null
    _min: UserroleMinAggregateOutputType | null
    _max: UserroleMaxAggregateOutputType | null
  }

  type GetUserroleGroupByPayload<T extends userroleGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<UserroleGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof UserroleGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], UserroleGroupByOutputType[P]>
            : GetScalarType<T[P], UserroleGroupByOutputType[P]>
        }
      >
    >


  export type userroleSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    userid?: boolean
    roleid?: boolean
    createdby?: boolean
    createdat?: boolean
    updatedby?: boolean
    updatedat?: boolean
    createduser?: boolean | userDefaultArgs<ExtArgs>
    role?: boolean | roleDefaultArgs<ExtArgs>
    updateduser?: boolean | userrole$updateduserArgs<ExtArgs>
    user?: boolean | userDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["userrole"]>

  export type userroleSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    userid?: boolean
    roleid?: boolean
    createdby?: boolean
    createdat?: boolean
    updatedby?: boolean
    updatedat?: boolean
    createduser?: boolean | userDefaultArgs<ExtArgs>
    role?: boolean | roleDefaultArgs<ExtArgs>
    updateduser?: boolean | userrole$updateduserArgs<ExtArgs>
    user?: boolean | userDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["userrole"]>

  export type userroleSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    userid?: boolean
    roleid?: boolean
    createdby?: boolean
    createdat?: boolean
    updatedby?: boolean
    updatedat?: boolean
    createduser?: boolean | userDefaultArgs<ExtArgs>
    role?: boolean | roleDefaultArgs<ExtArgs>
    updateduser?: boolean | userrole$updateduserArgs<ExtArgs>
    user?: boolean | userDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["userrole"]>

  export type userroleSelectScalar = {
    id?: boolean
    userid?: boolean
    roleid?: boolean
    createdby?: boolean
    createdat?: boolean
    updatedby?: boolean
    updatedat?: boolean
  }

  export type userroleOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "userid" | "roleid" | "createdby" | "createdat" | "updatedby" | "updatedat", ExtArgs["result"]["userrole"]>
  export type userroleInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    createduser?: boolean | userDefaultArgs<ExtArgs>
    role?: boolean | roleDefaultArgs<ExtArgs>
    updateduser?: boolean | userrole$updateduserArgs<ExtArgs>
    user?: boolean | userDefaultArgs<ExtArgs>
  }
  export type userroleIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    createduser?: boolean | userDefaultArgs<ExtArgs>
    role?: boolean | roleDefaultArgs<ExtArgs>
    updateduser?: boolean | userrole$updateduserArgs<ExtArgs>
    user?: boolean | userDefaultArgs<ExtArgs>
  }
  export type userroleIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    createduser?: boolean | userDefaultArgs<ExtArgs>
    role?: boolean | roleDefaultArgs<ExtArgs>
    updateduser?: boolean | userrole$updateduserArgs<ExtArgs>
    user?: boolean | userDefaultArgs<ExtArgs>
  }

  export type $userrolePayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "userrole"
    objects: {
      createduser: Prisma.$userPayload<ExtArgs>
      role: Prisma.$rolePayload<ExtArgs>
      updateduser: Prisma.$userPayload<ExtArgs> | null
      user: Prisma.$userPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      userid: string
      roleid: string
      createdby: string
      createdat: Date
      updatedby: string | null
      updatedat: Date | null
    }, ExtArgs["result"]["userrole"]>
    composites: {}
  }

  type userroleGetPayload<S extends boolean | null | undefined | userroleDefaultArgs> = $Result.GetResult<Prisma.$userrolePayload, S>

  type userroleCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<userroleFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: UserroleCountAggregateInputType | true
    }

  export interface userroleDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['userrole'], meta: { name: 'userrole' } }
    /**
     * Find zero or one Userrole that matches the filter.
     * @param {userroleFindUniqueArgs} args - Arguments to find a Userrole
     * @example
     * // Get one Userrole
     * const userrole = await prisma.userrole.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends userroleFindUniqueArgs>(args: SelectSubset<T, userroleFindUniqueArgs<ExtArgs>>): Prisma__userroleClient<$Result.GetResult<Prisma.$userrolePayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Userrole that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {userroleFindUniqueOrThrowArgs} args - Arguments to find a Userrole
     * @example
     * // Get one Userrole
     * const userrole = await prisma.userrole.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends userroleFindUniqueOrThrowArgs>(args: SelectSubset<T, userroleFindUniqueOrThrowArgs<ExtArgs>>): Prisma__userroleClient<$Result.GetResult<Prisma.$userrolePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Userrole that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {userroleFindFirstArgs} args - Arguments to find a Userrole
     * @example
     * // Get one Userrole
     * const userrole = await prisma.userrole.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends userroleFindFirstArgs>(args?: SelectSubset<T, userroleFindFirstArgs<ExtArgs>>): Prisma__userroleClient<$Result.GetResult<Prisma.$userrolePayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Userrole that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {userroleFindFirstOrThrowArgs} args - Arguments to find a Userrole
     * @example
     * // Get one Userrole
     * const userrole = await prisma.userrole.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends userroleFindFirstOrThrowArgs>(args?: SelectSubset<T, userroleFindFirstOrThrowArgs<ExtArgs>>): Prisma__userroleClient<$Result.GetResult<Prisma.$userrolePayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Userroles that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {userroleFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Userroles
     * const userroles = await prisma.userrole.findMany()
     * 
     * // Get first 10 Userroles
     * const userroles = await prisma.userrole.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const userroleWithIdOnly = await prisma.userrole.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends userroleFindManyArgs>(args?: SelectSubset<T, userroleFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$userrolePayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Userrole.
     * @param {userroleCreateArgs} args - Arguments to create a Userrole.
     * @example
     * // Create one Userrole
     * const Userrole = await prisma.userrole.create({
     *   data: {
     *     // ... data to create a Userrole
     *   }
     * })
     * 
     */
    create<T extends userroleCreateArgs>(args: SelectSubset<T, userroleCreateArgs<ExtArgs>>): Prisma__userroleClient<$Result.GetResult<Prisma.$userrolePayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Userroles.
     * @param {userroleCreateManyArgs} args - Arguments to create many Userroles.
     * @example
     * // Create many Userroles
     * const userrole = await prisma.userrole.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends userroleCreateManyArgs>(args?: SelectSubset<T, userroleCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Userroles and returns the data saved in the database.
     * @param {userroleCreateManyAndReturnArgs} args - Arguments to create many Userroles.
     * @example
     * // Create many Userroles
     * const userrole = await prisma.userrole.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Userroles and only return the `id`
     * const userroleWithIdOnly = await prisma.userrole.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends userroleCreateManyAndReturnArgs>(args?: SelectSubset<T, userroleCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$userrolePayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Userrole.
     * @param {userroleDeleteArgs} args - Arguments to delete one Userrole.
     * @example
     * // Delete one Userrole
     * const Userrole = await prisma.userrole.delete({
     *   where: {
     *     // ... filter to delete one Userrole
     *   }
     * })
     * 
     */
    delete<T extends userroleDeleteArgs>(args: SelectSubset<T, userroleDeleteArgs<ExtArgs>>): Prisma__userroleClient<$Result.GetResult<Prisma.$userrolePayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Userrole.
     * @param {userroleUpdateArgs} args - Arguments to update one Userrole.
     * @example
     * // Update one Userrole
     * const userrole = await prisma.userrole.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends userroleUpdateArgs>(args: SelectSubset<T, userroleUpdateArgs<ExtArgs>>): Prisma__userroleClient<$Result.GetResult<Prisma.$userrolePayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Userroles.
     * @param {userroleDeleteManyArgs} args - Arguments to filter Userroles to delete.
     * @example
     * // Delete a few Userroles
     * const { count } = await prisma.userrole.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends userroleDeleteManyArgs>(args?: SelectSubset<T, userroleDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Userroles.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {userroleUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Userroles
     * const userrole = await prisma.userrole.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends userroleUpdateManyArgs>(args: SelectSubset<T, userroleUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Userroles and returns the data updated in the database.
     * @param {userroleUpdateManyAndReturnArgs} args - Arguments to update many Userroles.
     * @example
     * // Update many Userroles
     * const userrole = await prisma.userrole.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Userroles and only return the `id`
     * const userroleWithIdOnly = await prisma.userrole.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends userroleUpdateManyAndReturnArgs>(args: SelectSubset<T, userroleUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$userrolePayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Userrole.
     * @param {userroleUpsertArgs} args - Arguments to update or create a Userrole.
     * @example
     * // Update or create a Userrole
     * const userrole = await prisma.userrole.upsert({
     *   create: {
     *     // ... data to create a Userrole
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Userrole we want to update
     *   }
     * })
     */
    upsert<T extends userroleUpsertArgs>(args: SelectSubset<T, userroleUpsertArgs<ExtArgs>>): Prisma__userroleClient<$Result.GetResult<Prisma.$userrolePayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Userroles.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {userroleCountArgs} args - Arguments to filter Userroles to count.
     * @example
     * // Count the number of Userroles
     * const count = await prisma.userrole.count({
     *   where: {
     *     // ... the filter for the Userroles we want to count
     *   }
     * })
    **/
    count<T extends userroleCountArgs>(
      args?: Subset<T, userroleCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], UserroleCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Userrole.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserroleAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends UserroleAggregateArgs>(args: Subset<T, UserroleAggregateArgs>): Prisma.PrismaPromise<GetUserroleAggregateType<T>>

    /**
     * Group by Userrole.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {userroleGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends userroleGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: userroleGroupByArgs['orderBy'] }
        : { orderBy?: userroleGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, userroleGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetUserroleGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the userrole model
   */
  readonly fields: userroleFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for userrole.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__userroleClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    createduser<T extends userDefaultArgs<ExtArgs> = {}>(args?: Subset<T, userDefaultArgs<ExtArgs>>): Prisma__userClient<$Result.GetResult<Prisma.$userPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    role<T extends roleDefaultArgs<ExtArgs> = {}>(args?: Subset<T, roleDefaultArgs<ExtArgs>>): Prisma__roleClient<$Result.GetResult<Prisma.$rolePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    updateduser<T extends userrole$updateduserArgs<ExtArgs> = {}>(args?: Subset<T, userrole$updateduserArgs<ExtArgs>>): Prisma__userClient<$Result.GetResult<Prisma.$userPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    user<T extends userDefaultArgs<ExtArgs> = {}>(args?: Subset<T, userDefaultArgs<ExtArgs>>): Prisma__userClient<$Result.GetResult<Prisma.$userPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the userrole model
   */
  interface userroleFieldRefs {
    readonly id: FieldRef<"userrole", 'String'>
    readonly userid: FieldRef<"userrole", 'String'>
    readonly roleid: FieldRef<"userrole", 'String'>
    readonly createdby: FieldRef<"userrole", 'String'>
    readonly createdat: FieldRef<"userrole", 'DateTime'>
    readonly updatedby: FieldRef<"userrole", 'String'>
    readonly updatedat: FieldRef<"userrole", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * userrole findUnique
   */
  export type userroleFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the userrole
     */
    select?: userroleSelect<ExtArgs> | null
    /**
     * Omit specific fields from the userrole
     */
    omit?: userroleOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: userroleInclude<ExtArgs> | null
    /**
     * Filter, which userrole to fetch.
     */
    where: userroleWhereUniqueInput
  }

  /**
   * userrole findUniqueOrThrow
   */
  export type userroleFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the userrole
     */
    select?: userroleSelect<ExtArgs> | null
    /**
     * Omit specific fields from the userrole
     */
    omit?: userroleOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: userroleInclude<ExtArgs> | null
    /**
     * Filter, which userrole to fetch.
     */
    where: userroleWhereUniqueInput
  }

  /**
   * userrole findFirst
   */
  export type userroleFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the userrole
     */
    select?: userroleSelect<ExtArgs> | null
    /**
     * Omit specific fields from the userrole
     */
    omit?: userroleOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: userroleInclude<ExtArgs> | null
    /**
     * Filter, which userrole to fetch.
     */
    where?: userroleWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of userroles to fetch.
     */
    orderBy?: userroleOrderByWithRelationInput | userroleOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for userroles.
     */
    cursor?: userroleWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` userroles from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` userroles.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of userroles.
     */
    distinct?: UserroleScalarFieldEnum | UserroleScalarFieldEnum[]
  }

  /**
   * userrole findFirstOrThrow
   */
  export type userroleFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the userrole
     */
    select?: userroleSelect<ExtArgs> | null
    /**
     * Omit specific fields from the userrole
     */
    omit?: userroleOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: userroleInclude<ExtArgs> | null
    /**
     * Filter, which userrole to fetch.
     */
    where?: userroleWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of userroles to fetch.
     */
    orderBy?: userroleOrderByWithRelationInput | userroleOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for userroles.
     */
    cursor?: userroleWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` userroles from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` userroles.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of userroles.
     */
    distinct?: UserroleScalarFieldEnum | UserroleScalarFieldEnum[]
  }

  /**
   * userrole findMany
   */
  export type userroleFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the userrole
     */
    select?: userroleSelect<ExtArgs> | null
    /**
     * Omit specific fields from the userrole
     */
    omit?: userroleOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: userroleInclude<ExtArgs> | null
    /**
     * Filter, which userroles to fetch.
     */
    where?: userroleWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of userroles to fetch.
     */
    orderBy?: userroleOrderByWithRelationInput | userroleOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing userroles.
     */
    cursor?: userroleWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` userroles from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` userroles.
     */
    skip?: number
    distinct?: UserroleScalarFieldEnum | UserroleScalarFieldEnum[]
  }

  /**
   * userrole create
   */
  export type userroleCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the userrole
     */
    select?: userroleSelect<ExtArgs> | null
    /**
     * Omit specific fields from the userrole
     */
    omit?: userroleOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: userroleInclude<ExtArgs> | null
    /**
     * The data needed to create a userrole.
     */
    data: XOR<userroleCreateInput, userroleUncheckedCreateInput>
  }

  /**
   * userrole createMany
   */
  export type userroleCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many userroles.
     */
    data: userroleCreateManyInput | userroleCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * userrole createManyAndReturn
   */
  export type userroleCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the userrole
     */
    select?: userroleSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the userrole
     */
    omit?: userroleOmit<ExtArgs> | null
    /**
     * The data used to create many userroles.
     */
    data: userroleCreateManyInput | userroleCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: userroleIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * userrole update
   */
  export type userroleUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the userrole
     */
    select?: userroleSelect<ExtArgs> | null
    /**
     * Omit specific fields from the userrole
     */
    omit?: userroleOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: userroleInclude<ExtArgs> | null
    /**
     * The data needed to update a userrole.
     */
    data: XOR<userroleUpdateInput, userroleUncheckedUpdateInput>
    /**
     * Choose, which userrole to update.
     */
    where: userroleWhereUniqueInput
  }

  /**
   * userrole updateMany
   */
  export type userroleUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update userroles.
     */
    data: XOR<userroleUpdateManyMutationInput, userroleUncheckedUpdateManyInput>
    /**
     * Filter which userroles to update
     */
    where?: userroleWhereInput
    /**
     * Limit how many userroles to update.
     */
    limit?: number
  }

  /**
   * userrole updateManyAndReturn
   */
  export type userroleUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the userrole
     */
    select?: userroleSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the userrole
     */
    omit?: userroleOmit<ExtArgs> | null
    /**
     * The data used to update userroles.
     */
    data: XOR<userroleUpdateManyMutationInput, userroleUncheckedUpdateManyInput>
    /**
     * Filter which userroles to update
     */
    where?: userroleWhereInput
    /**
     * Limit how many userroles to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: userroleIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * userrole upsert
   */
  export type userroleUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the userrole
     */
    select?: userroleSelect<ExtArgs> | null
    /**
     * Omit specific fields from the userrole
     */
    omit?: userroleOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: userroleInclude<ExtArgs> | null
    /**
     * The filter to search for the userrole to update in case it exists.
     */
    where: userroleWhereUniqueInput
    /**
     * In case the userrole found by the `where` argument doesn't exist, create a new userrole with this data.
     */
    create: XOR<userroleCreateInput, userroleUncheckedCreateInput>
    /**
     * In case the userrole was found with the provided `where` argument, update it with this data.
     */
    update: XOR<userroleUpdateInput, userroleUncheckedUpdateInput>
  }

  /**
   * userrole delete
   */
  export type userroleDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the userrole
     */
    select?: userroleSelect<ExtArgs> | null
    /**
     * Omit specific fields from the userrole
     */
    omit?: userroleOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: userroleInclude<ExtArgs> | null
    /**
     * Filter which userrole to delete.
     */
    where: userroleWhereUniqueInput
  }

  /**
   * userrole deleteMany
   */
  export type userroleDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which userroles to delete
     */
    where?: userroleWhereInput
    /**
     * Limit how many userroles to delete.
     */
    limit?: number
  }

  /**
   * userrole.updateduser
   */
  export type userrole$updateduserArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user
     */
    select?: userSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user
     */
    omit?: userOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: userInclude<ExtArgs> | null
    where?: userWhereInput
  }

  /**
   * userrole without action
   */
  export type userroleDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the userrole
     */
    select?: userroleSelect<ExtArgs> | null
    /**
     * Omit specific fields from the userrole
     */
    omit?: userroleOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: userroleInclude<ExtArgs> | null
  }


  /**
   * Enums
   */

  export const TransactionIsolationLevel: {
    ReadUncommitted: 'ReadUncommitted',
    ReadCommitted: 'ReadCommitted',
    RepeatableRead: 'RepeatableRead',
    Serializable: 'Serializable'
  };

  export type TransactionIsolationLevel = (typeof TransactionIsolationLevel)[keyof typeof TransactionIsolationLevel]


  export const PackageFeatureScalarFieldEnum: {
    id: 'id',
    feature: 'feature',
    available: 'available',
    packageId: 'packageId'
  };

  export type PackageFeatureScalarFieldEnum = (typeof PackageFeatureScalarFieldEnum)[keyof typeof PackageFeatureScalarFieldEnum]


  export const PackagesScalarFieldEnum: {
    id: 'id',
    name: 'name',
    description: 'description',
    icon: 'icon',
    duration: 'duration',
    popular: 'popular',
    highlightColor: 'highlightColor',
    savings: 'savings',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type PackagesScalarFieldEnum = (typeof PackagesScalarFieldEnum)[keyof typeof PackagesScalarFieldEnum]


  export const PriceScalarFieldEnum: {
    id: 'id',
    currency: 'currency',
    amount: 'amount',
    packageId: 'packageId'
  };

  export type PriceScalarFieldEnum = (typeof PriceScalarFieldEnum)[keyof typeof PriceScalarFieldEnum]


  export const SubscriptionScalarFieldEnum: {
    id: 'id',
    userId: 'userId',
    packageId: 'packageId',
    startDate: 'startDate',
    endDate: 'endDate',
    status: 'status',
    lastPaymentStatus: 'lastPaymentStatus',
    stripeCustomerId: 'stripeCustomerId',
    stripePaymentId: 'stripePaymentId',
    stripePriceId: 'stripePriceId',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type SubscriptionScalarFieldEnum = (typeof SubscriptionScalarFieldEnum)[keyof typeof SubscriptionScalarFieldEnum]


  export const ChatRoomScalarFieldEnum: {
    id: 'id',
    userId: 'userId',
    title: 'title',
    language: 'language',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type ChatRoomScalarFieldEnum = (typeof ChatRoomScalarFieldEnum)[keyof typeof ChatRoomScalarFieldEnum]


  export const ChatScalarFieldEnum: {
    id: 'id',
    roomId: 'roomId',
    userId: 'userId',
    message: 'message',
    role: 'role',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type ChatScalarFieldEnum = (typeof ChatScalarFieldEnum)[keyof typeof ChatScalarFieldEnum]


  export const LearningProgressScalarFieldEnum: {
    id: 'id',
    userid: 'userid',
    languageID: 'languageID',
    progress: 'progress',
    createdat: 'createdat',
    updatedat: 'updatedat'
  };

  export type LearningProgressScalarFieldEnum = (typeof LearningProgressScalarFieldEnum)[keyof typeof LearningProgressScalarFieldEnum]


  export const LanguagesScalarFieldEnum: {
    id: 'id',
    flag: 'flag',
    name: 'name',
    code: 'code'
  };

  export type LanguagesScalarFieldEnum = (typeof LanguagesScalarFieldEnum)[keyof typeof LanguagesScalarFieldEnum]


  export const EntranceScalarFieldEnum: {
    id: 'id',
    type: 'type',
    useragent: 'useragent',
    ipaddress: 'ipaddress',
    userid: 'userid',
    createdat: 'createdat'
  };

  export type EntranceScalarFieldEnum = (typeof EntranceScalarFieldEnum)[keyof typeof EntranceScalarFieldEnum]


  export const ApiclientScalarFieldEnum: {
    id: 'id',
    name: 'name',
    key: 'key',
    secret: 'secret',
    type: 'type',
    createdat: 'createdat',
    createdby: 'createdby',
    updatedat: 'updatedat',
    updatedby: 'updatedby',
    isactive: 'isactive'
  };

  export type ApiclientScalarFieldEnum = (typeof ApiclientScalarFieldEnum)[keyof typeof ApiclientScalarFieldEnum]


  export const RefreshtokenScalarFieldEnum: {
    id: 'id',
    userid: 'userid',
    token: 'token',
    createdat: 'createdat',
    updatedat: 'updatedat',
    expiresat: 'expiresat'
  };

  export type RefreshtokenScalarFieldEnum = (typeof RefreshtokenScalarFieldEnum)[keyof typeof RefreshtokenScalarFieldEnum]


  export const RevokedtokenScalarFieldEnum: {
    id: 'id',
    token: 'token',
    date: 'date'
  };

  export type RevokedtokenScalarFieldEnum = (typeof RevokedtokenScalarFieldEnum)[keyof typeof RevokedtokenScalarFieldEnum]


  export const RoleScalarFieldEnum: {
    id: 'id',
    name: 'name',
    createdby: 'createdby',
    createdat: 'createdat',
    updatedby: 'updatedby',
    updatedat: 'updatedat',
    issystemrole: 'issystemrole'
  };

  export type RoleScalarFieldEnum = (typeof RoleScalarFieldEnum)[keyof typeof RoleScalarFieldEnum]


  export const NotificationScalarFieldEnum: {
    id: 'id',
    touserid: 'touserid',
    message: 'message',
    url: 'url',
    createdby: 'createdby',
    createdat: 'createdat',
    readedat: 'readedat'
  };

  export type NotificationScalarFieldEnum = (typeof NotificationScalarFieldEnum)[keyof typeof NotificationScalarFieldEnum]


  export const PermissionScalarFieldEnum: {
    id: 'id',
    name: 'name',
    value: 'value',
    group: 'group',
    description: 'description',
    createdby: 'createdby',
    createdat: 'createdat',
    updatedby: 'updatedby',
    updatedat: 'updatedat'
  };

  export type PermissionScalarFieldEnum = (typeof PermissionScalarFieldEnum)[keyof typeof PermissionScalarFieldEnum]


  export const RolepermissionScalarFieldEnum: {
    id: 'id',
    roleid: 'roleid',
    permissionid: 'permissionid',
    createdat: 'createdat',
    createdby: 'createdby',
    updatedby: 'updatedby',
    updatedat: 'updatedat'
  };

  export type RolepermissionScalarFieldEnum = (typeof RolepermissionScalarFieldEnum)[keyof typeof RolepermissionScalarFieldEnum]


  export const UserScalarFieldEnum: {
    id: 'id',
    firstname: 'firstname',
    lastname: 'lastname',
    phone: 'phone',
    email: 'email',
    password: 'password',
    appLanguage: 'appLanguage',
    learningLanguage: 'learningLanguage',
    learningLevel: 'learningLevel',
    theme: 'theme',
    avatar: 'avatar',
    createdby: 'createdby',
    createdat: 'createdat',
    updatedby: 'updatedby',
    updatedat: 'updatedat',
    status: 'status',
    lastentranceat: 'lastentranceat',
    lastexitat: 'lastexitat',
    lastloginat: 'lastloginat',
    stripeCustomerId: 'stripeCustomerId'
  };

  export type UserScalarFieldEnum = (typeof UserScalarFieldEnum)[keyof typeof UserScalarFieldEnum]


  export const UserpermissionScalarFieldEnum: {
    id: 'id',
    userid: 'userid',
    permissionid: 'permissionid',
    createdby: 'createdby',
    createdat: 'createdat',
    updatedby: 'updatedby',
    updatedat: 'updatedat'
  };

  export type UserpermissionScalarFieldEnum = (typeof UserpermissionScalarFieldEnum)[keyof typeof UserpermissionScalarFieldEnum]


  export const UserroleScalarFieldEnum: {
    id: 'id',
    userid: 'userid',
    roleid: 'roleid',
    createdby: 'createdby',
    createdat: 'createdat',
    updatedby: 'updatedby',
    updatedat: 'updatedat'
  };

  export type UserroleScalarFieldEnum = (typeof UserroleScalarFieldEnum)[keyof typeof UserroleScalarFieldEnum]


  export const SortOrder: {
    asc: 'asc',
    desc: 'desc'
  };

  export type SortOrder = (typeof SortOrder)[keyof typeof SortOrder]


  export const QueryMode: {
    default: 'default',
    insensitive: 'insensitive'
  };

  export type QueryMode = (typeof QueryMode)[keyof typeof QueryMode]


  export const NullsOrder: {
    first: 'first',
    last: 'last'
  };

  export type NullsOrder = (typeof NullsOrder)[keyof typeof NullsOrder]


  /**
   * Field references
   */


  /**
   * Reference to a field of type 'String'
   */
  export type StringFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'String'>
    


  /**
   * Reference to a field of type 'String[]'
   */
  export type ListStringFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'String[]'>
    


  /**
   * Reference to a field of type 'Boolean'
   */
  export type BooleanFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Boolean'>
    


  /**
   * Reference to a field of type 'duration'
   */
  export type EnumdurationFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'duration'>
    


  /**
   * Reference to a field of type 'duration[]'
   */
  export type ListEnumdurationFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'duration[]'>
    


  /**
   * Reference to a field of type 'DateTime'
   */
  export type DateTimeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'DateTime'>
    


  /**
   * Reference to a field of type 'DateTime[]'
   */
  export type ListDateTimeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'DateTime[]'>
    


  /**
   * Reference to a field of type 'Currency'
   */
  export type EnumCurrencyFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Currency'>
    


  /**
   * Reference to a field of type 'Currency[]'
   */
  export type ListEnumCurrencyFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Currency[]'>
    


  /**
   * Reference to a field of type 'Decimal'
   */
  export type DecimalFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Decimal'>
    


  /**
   * Reference to a field of type 'Decimal[]'
   */
  export type ListDecimalFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Decimal[]'>
    


  /**
   * Reference to a field of type 'SubscriptionStatus'
   */
  export type EnumSubscriptionStatusFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'SubscriptionStatus'>
    


  /**
   * Reference to a field of type 'SubscriptionStatus[]'
   */
  export type ListEnumSubscriptionStatusFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'SubscriptionStatus[]'>
    


  /**
   * Reference to a field of type 'Int'
   */
  export type IntFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Int'>
    


  /**
   * Reference to a field of type 'Int[]'
   */
  export type ListIntFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Int[]'>
    


  /**
   * Reference to a field of type 'Float'
   */
  export type FloatFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Float'>
    


  /**
   * Reference to a field of type 'Float[]'
   */
  export type ListFloatFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Float[]'>
    
  /**
   * Deep Input Types
   */


  export type packageFeatureWhereInput = {
    AND?: packageFeatureWhereInput | packageFeatureWhereInput[]
    OR?: packageFeatureWhereInput[]
    NOT?: packageFeatureWhereInput | packageFeatureWhereInput[]
    id?: StringFilter<"packageFeature"> | string
    feature?: StringFilter<"packageFeature"> | string
    available?: BoolFilter<"packageFeature"> | boolean
    packageId?: StringFilter<"packageFeature"> | string
    package?: XOR<PackagesScalarRelationFilter, packagesWhereInput>
  }

  export type packageFeatureOrderByWithRelationInput = {
    id?: SortOrder
    feature?: SortOrder
    available?: SortOrder
    packageId?: SortOrder
    package?: packagesOrderByWithRelationInput
  }

  export type packageFeatureWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: packageFeatureWhereInput | packageFeatureWhereInput[]
    OR?: packageFeatureWhereInput[]
    NOT?: packageFeatureWhereInput | packageFeatureWhereInput[]
    feature?: StringFilter<"packageFeature"> | string
    available?: BoolFilter<"packageFeature"> | boolean
    packageId?: StringFilter<"packageFeature"> | string
    package?: XOR<PackagesScalarRelationFilter, packagesWhereInput>
  }, "id">

  export type packageFeatureOrderByWithAggregationInput = {
    id?: SortOrder
    feature?: SortOrder
    available?: SortOrder
    packageId?: SortOrder
    _count?: packageFeatureCountOrderByAggregateInput
    _max?: packageFeatureMaxOrderByAggregateInput
    _min?: packageFeatureMinOrderByAggregateInput
  }

  export type packageFeatureScalarWhereWithAggregatesInput = {
    AND?: packageFeatureScalarWhereWithAggregatesInput | packageFeatureScalarWhereWithAggregatesInput[]
    OR?: packageFeatureScalarWhereWithAggregatesInput[]
    NOT?: packageFeatureScalarWhereWithAggregatesInput | packageFeatureScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"packageFeature"> | string
    feature?: StringWithAggregatesFilter<"packageFeature"> | string
    available?: BoolWithAggregatesFilter<"packageFeature"> | boolean
    packageId?: StringWithAggregatesFilter<"packageFeature"> | string
  }

  export type packagesWhereInput = {
    AND?: packagesWhereInput | packagesWhereInput[]
    OR?: packagesWhereInput[]
    NOT?: packagesWhereInput | packagesWhereInput[]
    id?: StringFilter<"packages"> | string
    name?: StringFilter<"packages"> | string
    description?: StringFilter<"packages"> | string
    icon?: StringFilter<"packages"> | string
    duration?: EnumdurationFilter<"packages"> | $Enums.duration
    popular?: BoolFilter<"packages"> | boolean
    highlightColor?: StringNullableFilter<"packages"> | string | null
    savings?: StringNullableFilter<"packages"> | string | null
    createdAt?: DateTimeFilter<"packages"> | Date | string
    updatedAt?: DateTimeFilter<"packages"> | Date | string
    features?: PackageFeatureListRelationFilter
    prices?: PriceListRelationFilter
    subscriptions?: SubscriptionListRelationFilter
  }

  export type packagesOrderByWithRelationInput = {
    id?: SortOrder
    name?: SortOrder
    description?: SortOrder
    icon?: SortOrder
    duration?: SortOrder
    popular?: SortOrder
    highlightColor?: SortOrderInput | SortOrder
    savings?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    features?: packageFeatureOrderByRelationAggregateInput
    prices?: priceOrderByRelationAggregateInput
    subscriptions?: subscriptionOrderByRelationAggregateInput
  }

  export type packagesWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    name?: string
    AND?: packagesWhereInput | packagesWhereInput[]
    OR?: packagesWhereInput[]
    NOT?: packagesWhereInput | packagesWhereInput[]
    description?: StringFilter<"packages"> | string
    icon?: StringFilter<"packages"> | string
    duration?: EnumdurationFilter<"packages"> | $Enums.duration
    popular?: BoolFilter<"packages"> | boolean
    highlightColor?: StringNullableFilter<"packages"> | string | null
    savings?: StringNullableFilter<"packages"> | string | null
    createdAt?: DateTimeFilter<"packages"> | Date | string
    updatedAt?: DateTimeFilter<"packages"> | Date | string
    features?: PackageFeatureListRelationFilter
    prices?: PriceListRelationFilter
    subscriptions?: SubscriptionListRelationFilter
  }, "id" | "name">

  export type packagesOrderByWithAggregationInput = {
    id?: SortOrder
    name?: SortOrder
    description?: SortOrder
    icon?: SortOrder
    duration?: SortOrder
    popular?: SortOrder
    highlightColor?: SortOrderInput | SortOrder
    savings?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: packagesCountOrderByAggregateInput
    _max?: packagesMaxOrderByAggregateInput
    _min?: packagesMinOrderByAggregateInput
  }

  export type packagesScalarWhereWithAggregatesInput = {
    AND?: packagesScalarWhereWithAggregatesInput | packagesScalarWhereWithAggregatesInput[]
    OR?: packagesScalarWhereWithAggregatesInput[]
    NOT?: packagesScalarWhereWithAggregatesInput | packagesScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"packages"> | string
    name?: StringWithAggregatesFilter<"packages"> | string
    description?: StringWithAggregatesFilter<"packages"> | string
    icon?: StringWithAggregatesFilter<"packages"> | string
    duration?: EnumdurationWithAggregatesFilter<"packages"> | $Enums.duration
    popular?: BoolWithAggregatesFilter<"packages"> | boolean
    highlightColor?: StringNullableWithAggregatesFilter<"packages"> | string | null
    savings?: StringNullableWithAggregatesFilter<"packages"> | string | null
    createdAt?: DateTimeWithAggregatesFilter<"packages"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"packages"> | Date | string
  }

  export type priceWhereInput = {
    AND?: priceWhereInput | priceWhereInput[]
    OR?: priceWhereInput[]
    NOT?: priceWhereInput | priceWhereInput[]
    id?: StringFilter<"price"> | string
    currency?: EnumCurrencyFilter<"price"> | $Enums.Currency
    amount?: DecimalFilter<"price"> | Decimal | DecimalJsLike | number | string
    packageId?: StringFilter<"price"> | string
    package?: XOR<PackagesScalarRelationFilter, packagesWhereInput>
  }

  export type priceOrderByWithRelationInput = {
    id?: SortOrder
    currency?: SortOrder
    amount?: SortOrder
    packageId?: SortOrder
    package?: packagesOrderByWithRelationInput
  }

  export type priceWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: priceWhereInput | priceWhereInput[]
    OR?: priceWhereInput[]
    NOT?: priceWhereInput | priceWhereInput[]
    currency?: EnumCurrencyFilter<"price"> | $Enums.Currency
    amount?: DecimalFilter<"price"> | Decimal | DecimalJsLike | number | string
    packageId?: StringFilter<"price"> | string
    package?: XOR<PackagesScalarRelationFilter, packagesWhereInput>
  }, "id">

  export type priceOrderByWithAggregationInput = {
    id?: SortOrder
    currency?: SortOrder
    amount?: SortOrder
    packageId?: SortOrder
    _count?: priceCountOrderByAggregateInput
    _avg?: priceAvgOrderByAggregateInput
    _max?: priceMaxOrderByAggregateInput
    _min?: priceMinOrderByAggregateInput
    _sum?: priceSumOrderByAggregateInput
  }

  export type priceScalarWhereWithAggregatesInput = {
    AND?: priceScalarWhereWithAggregatesInput | priceScalarWhereWithAggregatesInput[]
    OR?: priceScalarWhereWithAggregatesInput[]
    NOT?: priceScalarWhereWithAggregatesInput | priceScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"price"> | string
    currency?: EnumCurrencyWithAggregatesFilter<"price"> | $Enums.Currency
    amount?: DecimalWithAggregatesFilter<"price"> | Decimal | DecimalJsLike | number | string
    packageId?: StringWithAggregatesFilter<"price"> | string
  }

  export type subscriptionWhereInput = {
    AND?: subscriptionWhereInput | subscriptionWhereInput[]
    OR?: subscriptionWhereInput[]
    NOT?: subscriptionWhereInput | subscriptionWhereInput[]
    id?: StringFilter<"subscription"> | string
    userId?: StringFilter<"subscription"> | string
    packageId?: StringFilter<"subscription"> | string
    startDate?: DateTimeFilter<"subscription"> | Date | string
    endDate?: DateTimeFilter<"subscription"> | Date | string
    status?: EnumSubscriptionStatusFilter<"subscription"> | $Enums.SubscriptionStatus
    lastPaymentStatus?: StringNullableFilter<"subscription"> | string | null
    stripeCustomerId?: StringNullableFilter<"subscription"> | string | null
    stripePaymentId?: StringNullableFilter<"subscription"> | string | null
    stripePriceId?: StringNullableFilter<"subscription"> | string | null
    createdAt?: DateTimeFilter<"subscription"> | Date | string
    updatedAt?: DateTimeFilter<"subscription"> | Date | string
    user?: XOR<UserScalarRelationFilter, userWhereInput>
    package?: XOR<PackagesScalarRelationFilter, packagesWhereInput>
  }

  export type subscriptionOrderByWithRelationInput = {
    id?: SortOrder
    userId?: SortOrder
    packageId?: SortOrder
    startDate?: SortOrder
    endDate?: SortOrder
    status?: SortOrder
    lastPaymentStatus?: SortOrderInput | SortOrder
    stripeCustomerId?: SortOrderInput | SortOrder
    stripePaymentId?: SortOrderInput | SortOrder
    stripePriceId?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    user?: userOrderByWithRelationInput
    package?: packagesOrderByWithRelationInput
  }

  export type subscriptionWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: subscriptionWhereInput | subscriptionWhereInput[]
    OR?: subscriptionWhereInput[]
    NOT?: subscriptionWhereInput | subscriptionWhereInput[]
    userId?: StringFilter<"subscription"> | string
    packageId?: StringFilter<"subscription"> | string
    startDate?: DateTimeFilter<"subscription"> | Date | string
    endDate?: DateTimeFilter<"subscription"> | Date | string
    status?: EnumSubscriptionStatusFilter<"subscription"> | $Enums.SubscriptionStatus
    lastPaymentStatus?: StringNullableFilter<"subscription"> | string | null
    stripeCustomerId?: StringNullableFilter<"subscription"> | string | null
    stripePaymentId?: StringNullableFilter<"subscription"> | string | null
    stripePriceId?: StringNullableFilter<"subscription"> | string | null
    createdAt?: DateTimeFilter<"subscription"> | Date | string
    updatedAt?: DateTimeFilter<"subscription"> | Date | string
    user?: XOR<UserScalarRelationFilter, userWhereInput>
    package?: XOR<PackagesScalarRelationFilter, packagesWhereInput>
  }, "id">

  export type subscriptionOrderByWithAggregationInput = {
    id?: SortOrder
    userId?: SortOrder
    packageId?: SortOrder
    startDate?: SortOrder
    endDate?: SortOrder
    status?: SortOrder
    lastPaymentStatus?: SortOrderInput | SortOrder
    stripeCustomerId?: SortOrderInput | SortOrder
    stripePaymentId?: SortOrderInput | SortOrder
    stripePriceId?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: subscriptionCountOrderByAggregateInput
    _max?: subscriptionMaxOrderByAggregateInput
    _min?: subscriptionMinOrderByAggregateInput
  }

  export type subscriptionScalarWhereWithAggregatesInput = {
    AND?: subscriptionScalarWhereWithAggregatesInput | subscriptionScalarWhereWithAggregatesInput[]
    OR?: subscriptionScalarWhereWithAggregatesInput[]
    NOT?: subscriptionScalarWhereWithAggregatesInput | subscriptionScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"subscription"> | string
    userId?: StringWithAggregatesFilter<"subscription"> | string
    packageId?: StringWithAggregatesFilter<"subscription"> | string
    startDate?: DateTimeWithAggregatesFilter<"subscription"> | Date | string
    endDate?: DateTimeWithAggregatesFilter<"subscription"> | Date | string
    status?: EnumSubscriptionStatusWithAggregatesFilter<"subscription"> | $Enums.SubscriptionStatus
    lastPaymentStatus?: StringNullableWithAggregatesFilter<"subscription"> | string | null
    stripeCustomerId?: StringNullableWithAggregatesFilter<"subscription"> | string | null
    stripePaymentId?: StringNullableWithAggregatesFilter<"subscription"> | string | null
    stripePriceId?: StringNullableWithAggregatesFilter<"subscription"> | string | null
    createdAt?: DateTimeWithAggregatesFilter<"subscription"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"subscription"> | Date | string
  }

  export type chatRoomWhereInput = {
    AND?: chatRoomWhereInput | chatRoomWhereInput[]
    OR?: chatRoomWhereInput[]
    NOT?: chatRoomWhereInput | chatRoomWhereInput[]
    id?: StringFilter<"chatRoom"> | string
    userId?: StringFilter<"chatRoom"> | string
    title?: StringFilter<"chatRoom"> | string
    language?: StringFilter<"chatRoom"> | string
    createdAt?: DateTimeFilter<"chatRoom"> | Date | string
    updatedAt?: DateTimeNullableFilter<"chatRoom"> | Date | string | null
    user?: XOR<UserScalarRelationFilter, userWhereInput>
    messages?: ChatListRelationFilter
  }

  export type chatRoomOrderByWithRelationInput = {
    id?: SortOrder
    userId?: SortOrder
    title?: SortOrder
    language?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrderInput | SortOrder
    user?: userOrderByWithRelationInput
    messages?: chatOrderByRelationAggregateInput
  }

  export type chatRoomWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: chatRoomWhereInput | chatRoomWhereInput[]
    OR?: chatRoomWhereInput[]
    NOT?: chatRoomWhereInput | chatRoomWhereInput[]
    userId?: StringFilter<"chatRoom"> | string
    title?: StringFilter<"chatRoom"> | string
    language?: StringFilter<"chatRoom"> | string
    createdAt?: DateTimeFilter<"chatRoom"> | Date | string
    updatedAt?: DateTimeNullableFilter<"chatRoom"> | Date | string | null
    user?: XOR<UserScalarRelationFilter, userWhereInput>
    messages?: ChatListRelationFilter
  }, "id">

  export type chatRoomOrderByWithAggregationInput = {
    id?: SortOrder
    userId?: SortOrder
    title?: SortOrder
    language?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrderInput | SortOrder
    _count?: chatRoomCountOrderByAggregateInput
    _max?: chatRoomMaxOrderByAggregateInput
    _min?: chatRoomMinOrderByAggregateInput
  }

  export type chatRoomScalarWhereWithAggregatesInput = {
    AND?: chatRoomScalarWhereWithAggregatesInput | chatRoomScalarWhereWithAggregatesInput[]
    OR?: chatRoomScalarWhereWithAggregatesInput[]
    NOT?: chatRoomScalarWhereWithAggregatesInput | chatRoomScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"chatRoom"> | string
    userId?: StringWithAggregatesFilter<"chatRoom"> | string
    title?: StringWithAggregatesFilter<"chatRoom"> | string
    language?: StringWithAggregatesFilter<"chatRoom"> | string
    createdAt?: DateTimeWithAggregatesFilter<"chatRoom"> | Date | string
    updatedAt?: DateTimeNullableWithAggregatesFilter<"chatRoom"> | Date | string | null
  }

  export type chatWhereInput = {
    AND?: chatWhereInput | chatWhereInput[]
    OR?: chatWhereInput[]
    NOT?: chatWhereInput | chatWhereInput[]
    id?: StringFilter<"chat"> | string
    roomId?: StringFilter<"chat"> | string
    userId?: StringFilter<"chat"> | string
    message?: StringFilter<"chat"> | string
    role?: StringFilter<"chat"> | string
    createdAt?: DateTimeFilter<"chat"> | Date | string
    updatedAt?: DateTimeNullableFilter<"chat"> | Date | string | null
    user?: XOR<UserScalarRelationFilter, userWhereInput>
    room?: XOR<ChatRoomScalarRelationFilter, chatRoomWhereInput>
  }

  export type chatOrderByWithRelationInput = {
    id?: SortOrder
    roomId?: SortOrder
    userId?: SortOrder
    message?: SortOrder
    role?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrderInput | SortOrder
    user?: userOrderByWithRelationInput
    room?: chatRoomOrderByWithRelationInput
  }

  export type chatWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: chatWhereInput | chatWhereInput[]
    OR?: chatWhereInput[]
    NOT?: chatWhereInput | chatWhereInput[]
    roomId?: StringFilter<"chat"> | string
    userId?: StringFilter<"chat"> | string
    message?: StringFilter<"chat"> | string
    role?: StringFilter<"chat"> | string
    createdAt?: DateTimeFilter<"chat"> | Date | string
    updatedAt?: DateTimeNullableFilter<"chat"> | Date | string | null
    user?: XOR<UserScalarRelationFilter, userWhereInput>
    room?: XOR<ChatRoomScalarRelationFilter, chatRoomWhereInput>
  }, "id">

  export type chatOrderByWithAggregationInput = {
    id?: SortOrder
    roomId?: SortOrder
    userId?: SortOrder
    message?: SortOrder
    role?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrderInput | SortOrder
    _count?: chatCountOrderByAggregateInput
    _max?: chatMaxOrderByAggregateInput
    _min?: chatMinOrderByAggregateInput
  }

  export type chatScalarWhereWithAggregatesInput = {
    AND?: chatScalarWhereWithAggregatesInput | chatScalarWhereWithAggregatesInput[]
    OR?: chatScalarWhereWithAggregatesInput[]
    NOT?: chatScalarWhereWithAggregatesInput | chatScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"chat"> | string
    roomId?: StringWithAggregatesFilter<"chat"> | string
    userId?: StringWithAggregatesFilter<"chat"> | string
    message?: StringWithAggregatesFilter<"chat"> | string
    role?: StringWithAggregatesFilter<"chat"> | string
    createdAt?: DateTimeWithAggregatesFilter<"chat"> | Date | string
    updatedAt?: DateTimeNullableWithAggregatesFilter<"chat"> | Date | string | null
  }

  export type learningProgressWhereInput = {
    AND?: learningProgressWhereInput | learningProgressWhereInput[]
    OR?: learningProgressWhereInput[]
    NOT?: learningProgressWhereInput | learningProgressWhereInput[]
    id?: StringFilter<"learningProgress"> | string
    userid?: StringFilter<"learningProgress"> | string
    languageID?: StringFilter<"learningProgress"> | string
    progress?: IntFilter<"learningProgress"> | number
    createdat?: DateTimeFilter<"learningProgress"> | Date | string
    updatedat?: DateTimeNullableFilter<"learningProgress"> | Date | string | null
    user?: XOR<UserScalarRelationFilter, userWhereInput>
    language?: XOR<LanguagesScalarRelationFilter, languagesWhereInput>
  }

  export type learningProgressOrderByWithRelationInput = {
    id?: SortOrder
    userid?: SortOrder
    languageID?: SortOrder
    progress?: SortOrder
    createdat?: SortOrder
    updatedat?: SortOrderInput | SortOrder
    user?: userOrderByWithRelationInput
    language?: languagesOrderByWithRelationInput
  }

  export type learningProgressWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: learningProgressWhereInput | learningProgressWhereInput[]
    OR?: learningProgressWhereInput[]
    NOT?: learningProgressWhereInput | learningProgressWhereInput[]
    userid?: StringFilter<"learningProgress"> | string
    languageID?: StringFilter<"learningProgress"> | string
    progress?: IntFilter<"learningProgress"> | number
    createdat?: DateTimeFilter<"learningProgress"> | Date | string
    updatedat?: DateTimeNullableFilter<"learningProgress"> | Date | string | null
    user?: XOR<UserScalarRelationFilter, userWhereInput>
    language?: XOR<LanguagesScalarRelationFilter, languagesWhereInput>
  }, "id">

  export type learningProgressOrderByWithAggregationInput = {
    id?: SortOrder
    userid?: SortOrder
    languageID?: SortOrder
    progress?: SortOrder
    createdat?: SortOrder
    updatedat?: SortOrderInput | SortOrder
    _count?: learningProgressCountOrderByAggregateInput
    _avg?: learningProgressAvgOrderByAggregateInput
    _max?: learningProgressMaxOrderByAggregateInput
    _min?: learningProgressMinOrderByAggregateInput
    _sum?: learningProgressSumOrderByAggregateInput
  }

  export type learningProgressScalarWhereWithAggregatesInput = {
    AND?: learningProgressScalarWhereWithAggregatesInput | learningProgressScalarWhereWithAggregatesInput[]
    OR?: learningProgressScalarWhereWithAggregatesInput[]
    NOT?: learningProgressScalarWhereWithAggregatesInput | learningProgressScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"learningProgress"> | string
    userid?: StringWithAggregatesFilter<"learningProgress"> | string
    languageID?: StringWithAggregatesFilter<"learningProgress"> | string
    progress?: IntWithAggregatesFilter<"learningProgress"> | number
    createdat?: DateTimeWithAggregatesFilter<"learningProgress"> | Date | string
    updatedat?: DateTimeNullableWithAggregatesFilter<"learningProgress"> | Date | string | null
  }

  export type languagesWhereInput = {
    AND?: languagesWhereInput | languagesWhereInput[]
    OR?: languagesWhereInput[]
    NOT?: languagesWhereInput | languagesWhereInput[]
    id?: StringFilter<"languages"> | string
    flag?: StringFilter<"languages"> | string
    name?: StringFilter<"languages"> | string
    code?: StringFilter<"languages"> | string
    learningProgress?: LearningProgressListRelationFilter
    user?: UserListRelationFilter
  }

  export type languagesOrderByWithRelationInput = {
    id?: SortOrder
    flag?: SortOrder
    name?: SortOrder
    code?: SortOrder
    learningProgress?: learningProgressOrderByRelationAggregateInput
    user?: userOrderByRelationAggregateInput
  }

  export type languagesWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    code?: string
    AND?: languagesWhereInput | languagesWhereInput[]
    OR?: languagesWhereInput[]
    NOT?: languagesWhereInput | languagesWhereInput[]
    flag?: StringFilter<"languages"> | string
    name?: StringFilter<"languages"> | string
    learningProgress?: LearningProgressListRelationFilter
    user?: UserListRelationFilter
  }, "id" | "code">

  export type languagesOrderByWithAggregationInput = {
    id?: SortOrder
    flag?: SortOrder
    name?: SortOrder
    code?: SortOrder
    _count?: languagesCountOrderByAggregateInput
    _max?: languagesMaxOrderByAggregateInput
    _min?: languagesMinOrderByAggregateInput
  }

  export type languagesScalarWhereWithAggregatesInput = {
    AND?: languagesScalarWhereWithAggregatesInput | languagesScalarWhereWithAggregatesInput[]
    OR?: languagesScalarWhereWithAggregatesInput[]
    NOT?: languagesScalarWhereWithAggregatesInput | languagesScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"languages"> | string
    flag?: StringWithAggregatesFilter<"languages"> | string
    name?: StringWithAggregatesFilter<"languages"> | string
    code?: StringWithAggregatesFilter<"languages"> | string
  }

  export type entranceWhereInput = {
    AND?: entranceWhereInput | entranceWhereInput[]
    OR?: entranceWhereInput[]
    NOT?: entranceWhereInput | entranceWhereInput[]
    id?: StringFilter<"entrance"> | string
    type?: IntFilter<"entrance"> | number
    useragent?: StringFilter<"entrance"> | string
    ipaddress?: StringFilter<"entrance"> | string
    userid?: StringFilter<"entrance"> | string
    createdat?: DateTimeFilter<"entrance"> | Date | string
  }

  export type entranceOrderByWithRelationInput = {
    id?: SortOrder
    type?: SortOrder
    useragent?: SortOrder
    ipaddress?: SortOrder
    userid?: SortOrder
    createdat?: SortOrder
  }

  export type entranceWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: entranceWhereInput | entranceWhereInput[]
    OR?: entranceWhereInput[]
    NOT?: entranceWhereInput | entranceWhereInput[]
    type?: IntFilter<"entrance"> | number
    useragent?: StringFilter<"entrance"> | string
    ipaddress?: StringFilter<"entrance"> | string
    userid?: StringFilter<"entrance"> | string
    createdat?: DateTimeFilter<"entrance"> | Date | string
  }, "id">

  export type entranceOrderByWithAggregationInput = {
    id?: SortOrder
    type?: SortOrder
    useragent?: SortOrder
    ipaddress?: SortOrder
    userid?: SortOrder
    createdat?: SortOrder
    _count?: entranceCountOrderByAggregateInput
    _avg?: entranceAvgOrderByAggregateInput
    _max?: entranceMaxOrderByAggregateInput
    _min?: entranceMinOrderByAggregateInput
    _sum?: entranceSumOrderByAggregateInput
  }

  export type entranceScalarWhereWithAggregatesInput = {
    AND?: entranceScalarWhereWithAggregatesInput | entranceScalarWhereWithAggregatesInput[]
    OR?: entranceScalarWhereWithAggregatesInput[]
    NOT?: entranceScalarWhereWithAggregatesInput | entranceScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"entrance"> | string
    type?: IntWithAggregatesFilter<"entrance"> | number
    useragent?: StringWithAggregatesFilter<"entrance"> | string
    ipaddress?: StringWithAggregatesFilter<"entrance"> | string
    userid?: StringWithAggregatesFilter<"entrance"> | string
    createdat?: DateTimeWithAggregatesFilter<"entrance"> | Date | string
  }

  export type apiclientWhereInput = {
    AND?: apiclientWhereInput | apiclientWhereInput[]
    OR?: apiclientWhereInput[]
    NOT?: apiclientWhereInput | apiclientWhereInput[]
    id?: StringFilter<"apiclient"> | string
    name?: StringFilter<"apiclient"> | string
    key?: StringFilter<"apiclient"> | string
    secret?: StringFilter<"apiclient"> | string
    type?: IntFilter<"apiclient"> | number
    createdat?: DateTimeFilter<"apiclient"> | Date | string
    createdby?: StringFilter<"apiclient"> | string
    updatedat?: DateTimeNullableFilter<"apiclient"> | Date | string | null
    updatedby?: StringNullableFilter<"apiclient"> | string | null
    isactive?: BoolFilter<"apiclient"> | boolean
    createduser?: XOR<UserScalarRelationFilter, userWhereInput>
    updateduser?: XOR<UserNullableScalarRelationFilter, userWhereInput> | null
  }

  export type apiclientOrderByWithRelationInput = {
    id?: SortOrder
    name?: SortOrder
    key?: SortOrder
    secret?: SortOrder
    type?: SortOrder
    createdat?: SortOrder
    createdby?: SortOrder
    updatedat?: SortOrderInput | SortOrder
    updatedby?: SortOrderInput | SortOrder
    isactive?: SortOrder
    createduser?: userOrderByWithRelationInput
    updateduser?: userOrderByWithRelationInput
  }

  export type apiclientWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    key?: string
    secret?: string
    AND?: apiclientWhereInput | apiclientWhereInput[]
    OR?: apiclientWhereInput[]
    NOT?: apiclientWhereInput | apiclientWhereInput[]
    name?: StringFilter<"apiclient"> | string
    type?: IntFilter<"apiclient"> | number
    createdat?: DateTimeFilter<"apiclient"> | Date | string
    createdby?: StringFilter<"apiclient"> | string
    updatedat?: DateTimeNullableFilter<"apiclient"> | Date | string | null
    updatedby?: StringNullableFilter<"apiclient"> | string | null
    isactive?: BoolFilter<"apiclient"> | boolean
    createduser?: XOR<UserScalarRelationFilter, userWhereInput>
    updateduser?: XOR<UserNullableScalarRelationFilter, userWhereInput> | null
  }, "id" | "key" | "secret">

  export type apiclientOrderByWithAggregationInput = {
    id?: SortOrder
    name?: SortOrder
    key?: SortOrder
    secret?: SortOrder
    type?: SortOrder
    createdat?: SortOrder
    createdby?: SortOrder
    updatedat?: SortOrderInput | SortOrder
    updatedby?: SortOrderInput | SortOrder
    isactive?: SortOrder
    _count?: apiclientCountOrderByAggregateInput
    _avg?: apiclientAvgOrderByAggregateInput
    _max?: apiclientMaxOrderByAggregateInput
    _min?: apiclientMinOrderByAggregateInput
    _sum?: apiclientSumOrderByAggregateInput
  }

  export type apiclientScalarWhereWithAggregatesInput = {
    AND?: apiclientScalarWhereWithAggregatesInput | apiclientScalarWhereWithAggregatesInput[]
    OR?: apiclientScalarWhereWithAggregatesInput[]
    NOT?: apiclientScalarWhereWithAggregatesInput | apiclientScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"apiclient"> | string
    name?: StringWithAggregatesFilter<"apiclient"> | string
    key?: StringWithAggregatesFilter<"apiclient"> | string
    secret?: StringWithAggregatesFilter<"apiclient"> | string
    type?: IntWithAggregatesFilter<"apiclient"> | number
    createdat?: DateTimeWithAggregatesFilter<"apiclient"> | Date | string
    createdby?: StringWithAggregatesFilter<"apiclient"> | string
    updatedat?: DateTimeNullableWithAggregatesFilter<"apiclient"> | Date | string | null
    updatedby?: StringNullableWithAggregatesFilter<"apiclient"> | string | null
    isactive?: BoolWithAggregatesFilter<"apiclient"> | boolean
  }

  export type refreshtokenWhereInput = {
    AND?: refreshtokenWhereInput | refreshtokenWhereInput[]
    OR?: refreshtokenWhereInput[]
    NOT?: refreshtokenWhereInput | refreshtokenWhereInput[]
    id?: StringFilter<"refreshtoken"> | string
    userid?: StringFilter<"refreshtoken"> | string
    token?: StringFilter<"refreshtoken"> | string
    createdat?: DateTimeFilter<"refreshtoken"> | Date | string
    updatedat?: DateTimeNullableFilter<"refreshtoken"> | Date | string | null
    expiresat?: DateTimeNullableFilter<"refreshtoken"> | Date | string | null
    user?: XOR<UserScalarRelationFilter, userWhereInput>
  }

  export type refreshtokenOrderByWithRelationInput = {
    id?: SortOrder
    userid?: SortOrder
    token?: SortOrder
    createdat?: SortOrder
    updatedat?: SortOrderInput | SortOrder
    expiresat?: SortOrderInput | SortOrder
    user?: userOrderByWithRelationInput
  }

  export type refreshtokenWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: refreshtokenWhereInput | refreshtokenWhereInput[]
    OR?: refreshtokenWhereInput[]
    NOT?: refreshtokenWhereInput | refreshtokenWhereInput[]
    userid?: StringFilter<"refreshtoken"> | string
    token?: StringFilter<"refreshtoken"> | string
    createdat?: DateTimeFilter<"refreshtoken"> | Date | string
    updatedat?: DateTimeNullableFilter<"refreshtoken"> | Date | string | null
    expiresat?: DateTimeNullableFilter<"refreshtoken"> | Date | string | null
    user?: XOR<UserScalarRelationFilter, userWhereInput>
  }, "id">

  export type refreshtokenOrderByWithAggregationInput = {
    id?: SortOrder
    userid?: SortOrder
    token?: SortOrder
    createdat?: SortOrder
    updatedat?: SortOrderInput | SortOrder
    expiresat?: SortOrderInput | SortOrder
    _count?: refreshtokenCountOrderByAggregateInput
    _max?: refreshtokenMaxOrderByAggregateInput
    _min?: refreshtokenMinOrderByAggregateInput
  }

  export type refreshtokenScalarWhereWithAggregatesInput = {
    AND?: refreshtokenScalarWhereWithAggregatesInput | refreshtokenScalarWhereWithAggregatesInput[]
    OR?: refreshtokenScalarWhereWithAggregatesInput[]
    NOT?: refreshtokenScalarWhereWithAggregatesInput | refreshtokenScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"refreshtoken"> | string
    userid?: StringWithAggregatesFilter<"refreshtoken"> | string
    token?: StringWithAggregatesFilter<"refreshtoken"> | string
    createdat?: DateTimeWithAggregatesFilter<"refreshtoken"> | Date | string
    updatedat?: DateTimeNullableWithAggregatesFilter<"refreshtoken"> | Date | string | null
    expiresat?: DateTimeNullableWithAggregatesFilter<"refreshtoken"> | Date | string | null
  }

  export type revokedtokenWhereInput = {
    AND?: revokedtokenWhereInput | revokedtokenWhereInput[]
    OR?: revokedtokenWhereInput[]
    NOT?: revokedtokenWhereInput | revokedtokenWhereInput[]
    id?: StringFilter<"revokedtoken"> | string
    token?: StringFilter<"revokedtoken"> | string
    date?: DateTimeFilter<"revokedtoken"> | Date | string
  }

  export type revokedtokenOrderByWithRelationInput = {
    id?: SortOrder
    token?: SortOrder
    date?: SortOrder
  }

  export type revokedtokenWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    token?: string
    AND?: revokedtokenWhereInput | revokedtokenWhereInput[]
    OR?: revokedtokenWhereInput[]
    NOT?: revokedtokenWhereInput | revokedtokenWhereInput[]
    date?: DateTimeFilter<"revokedtoken"> | Date | string
  }, "id" | "token">

  export type revokedtokenOrderByWithAggregationInput = {
    id?: SortOrder
    token?: SortOrder
    date?: SortOrder
    _count?: revokedtokenCountOrderByAggregateInput
    _max?: revokedtokenMaxOrderByAggregateInput
    _min?: revokedtokenMinOrderByAggregateInput
  }

  export type revokedtokenScalarWhereWithAggregatesInput = {
    AND?: revokedtokenScalarWhereWithAggregatesInput | revokedtokenScalarWhereWithAggregatesInput[]
    OR?: revokedtokenScalarWhereWithAggregatesInput[]
    NOT?: revokedtokenScalarWhereWithAggregatesInput | revokedtokenScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"revokedtoken"> | string
    token?: StringWithAggregatesFilter<"revokedtoken"> | string
    date?: DateTimeWithAggregatesFilter<"revokedtoken"> | Date | string
  }

  export type roleWhereInput = {
    AND?: roleWhereInput | roleWhereInput[]
    OR?: roleWhereInput[]
    NOT?: roleWhereInput | roleWhereInput[]
    id?: StringFilter<"role"> | string
    name?: StringFilter<"role"> | string
    createdby?: StringFilter<"role"> | string
    createdat?: DateTimeFilter<"role"> | Date | string
    updatedby?: StringNullableFilter<"role"> | string | null
    updatedat?: DateTimeNullableFilter<"role"> | Date | string | null
    issystemrole?: BoolFilter<"role"> | boolean
    createduser?: XOR<UserScalarRelationFilter, userWhereInput>
    updateduser?: XOR<UserNullableScalarRelationFilter, userWhereInput> | null
    rolepermissions?: RolepermissionListRelationFilter
    userroles?: UserroleListRelationFilter
  }

  export type roleOrderByWithRelationInput = {
    id?: SortOrder
    name?: SortOrder
    createdby?: SortOrder
    createdat?: SortOrder
    updatedby?: SortOrderInput | SortOrder
    updatedat?: SortOrderInput | SortOrder
    issystemrole?: SortOrder
    createduser?: userOrderByWithRelationInput
    updateduser?: userOrderByWithRelationInput
    rolepermissions?: rolepermissionOrderByRelationAggregateInput
    userroles?: userroleOrderByRelationAggregateInput
  }

  export type roleWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: roleWhereInput | roleWhereInput[]
    OR?: roleWhereInput[]
    NOT?: roleWhereInput | roleWhereInput[]
    name?: StringFilter<"role"> | string
    createdby?: StringFilter<"role"> | string
    createdat?: DateTimeFilter<"role"> | Date | string
    updatedby?: StringNullableFilter<"role"> | string | null
    updatedat?: DateTimeNullableFilter<"role"> | Date | string | null
    issystemrole?: BoolFilter<"role"> | boolean
    createduser?: XOR<UserScalarRelationFilter, userWhereInput>
    updateduser?: XOR<UserNullableScalarRelationFilter, userWhereInput> | null
    rolepermissions?: RolepermissionListRelationFilter
    userroles?: UserroleListRelationFilter
  }, "id">

  export type roleOrderByWithAggregationInput = {
    id?: SortOrder
    name?: SortOrder
    createdby?: SortOrder
    createdat?: SortOrder
    updatedby?: SortOrderInput | SortOrder
    updatedat?: SortOrderInput | SortOrder
    issystemrole?: SortOrder
    _count?: roleCountOrderByAggregateInput
    _max?: roleMaxOrderByAggregateInput
    _min?: roleMinOrderByAggregateInput
  }

  export type roleScalarWhereWithAggregatesInput = {
    AND?: roleScalarWhereWithAggregatesInput | roleScalarWhereWithAggregatesInput[]
    OR?: roleScalarWhereWithAggregatesInput[]
    NOT?: roleScalarWhereWithAggregatesInput | roleScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"role"> | string
    name?: StringWithAggregatesFilter<"role"> | string
    createdby?: StringWithAggregatesFilter<"role"> | string
    createdat?: DateTimeWithAggregatesFilter<"role"> | Date | string
    updatedby?: StringNullableWithAggregatesFilter<"role"> | string | null
    updatedat?: DateTimeNullableWithAggregatesFilter<"role"> | Date | string | null
    issystemrole?: BoolWithAggregatesFilter<"role"> | boolean
  }

  export type notificationWhereInput = {
    AND?: notificationWhereInput | notificationWhereInput[]
    OR?: notificationWhereInput[]
    NOT?: notificationWhereInput | notificationWhereInput[]
    id?: StringFilter<"notification"> | string
    touserid?: StringFilter<"notification"> | string
    message?: StringFilter<"notification"> | string
    url?: StringFilter<"notification"> | string
    createdby?: IntFilter<"notification"> | number
    createdat?: DateTimeFilter<"notification"> | Date | string
    readedat?: DateTimeNullableFilter<"notification"> | Date | string | null
    to?: XOR<UserScalarRelationFilter, userWhereInput>
  }

  export type notificationOrderByWithRelationInput = {
    id?: SortOrder
    touserid?: SortOrder
    message?: SortOrder
    url?: SortOrder
    createdby?: SortOrder
    createdat?: SortOrder
    readedat?: SortOrderInput | SortOrder
    to?: userOrderByWithRelationInput
  }

  export type notificationWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: notificationWhereInput | notificationWhereInput[]
    OR?: notificationWhereInput[]
    NOT?: notificationWhereInput | notificationWhereInput[]
    touserid?: StringFilter<"notification"> | string
    message?: StringFilter<"notification"> | string
    url?: StringFilter<"notification"> | string
    createdby?: IntFilter<"notification"> | number
    createdat?: DateTimeFilter<"notification"> | Date | string
    readedat?: DateTimeNullableFilter<"notification"> | Date | string | null
    to?: XOR<UserScalarRelationFilter, userWhereInput>
  }, "id">

  export type notificationOrderByWithAggregationInput = {
    id?: SortOrder
    touserid?: SortOrder
    message?: SortOrder
    url?: SortOrder
    createdby?: SortOrder
    createdat?: SortOrder
    readedat?: SortOrderInput | SortOrder
    _count?: notificationCountOrderByAggregateInput
    _avg?: notificationAvgOrderByAggregateInput
    _max?: notificationMaxOrderByAggregateInput
    _min?: notificationMinOrderByAggregateInput
    _sum?: notificationSumOrderByAggregateInput
  }

  export type notificationScalarWhereWithAggregatesInput = {
    AND?: notificationScalarWhereWithAggregatesInput | notificationScalarWhereWithAggregatesInput[]
    OR?: notificationScalarWhereWithAggregatesInput[]
    NOT?: notificationScalarWhereWithAggregatesInput | notificationScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"notification"> | string
    touserid?: StringWithAggregatesFilter<"notification"> | string
    message?: StringWithAggregatesFilter<"notification"> | string
    url?: StringWithAggregatesFilter<"notification"> | string
    createdby?: IntWithAggregatesFilter<"notification"> | number
    createdat?: DateTimeWithAggregatesFilter<"notification"> | Date | string
    readedat?: DateTimeNullableWithAggregatesFilter<"notification"> | Date | string | null
  }

  export type permissionWhereInput = {
    AND?: permissionWhereInput | permissionWhereInput[]
    OR?: permissionWhereInput[]
    NOT?: permissionWhereInput | permissionWhereInput[]
    id?: StringFilter<"permission"> | string
    name?: StringFilter<"permission"> | string
    value?: StringFilter<"permission"> | string
    group?: StringFilter<"permission"> | string
    description?: StringFilter<"permission"> | string
    createdby?: StringFilter<"permission"> | string
    createdat?: DateTimeFilter<"permission"> | Date | string
    updatedby?: StringNullableFilter<"permission"> | string | null
    updatedat?: DateTimeNullableFilter<"permission"> | Date | string | null
    createduser?: XOR<UserScalarRelationFilter, userWhereInput>
    updateduser?: XOR<UserNullableScalarRelationFilter, userWhereInput> | null
    rolepermissions?: RolepermissionListRelationFilter
    userpermissions?: UserpermissionListRelationFilter
  }

  export type permissionOrderByWithRelationInput = {
    id?: SortOrder
    name?: SortOrder
    value?: SortOrder
    group?: SortOrder
    description?: SortOrder
    createdby?: SortOrder
    createdat?: SortOrder
    updatedby?: SortOrderInput | SortOrder
    updatedat?: SortOrderInput | SortOrder
    createduser?: userOrderByWithRelationInput
    updateduser?: userOrderByWithRelationInput
    rolepermissions?: rolepermissionOrderByRelationAggregateInput
    userpermissions?: userpermissionOrderByRelationAggregateInput
  }

  export type permissionWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    value?: string
    AND?: permissionWhereInput | permissionWhereInput[]
    OR?: permissionWhereInput[]
    NOT?: permissionWhereInput | permissionWhereInput[]
    name?: StringFilter<"permission"> | string
    group?: StringFilter<"permission"> | string
    description?: StringFilter<"permission"> | string
    createdby?: StringFilter<"permission"> | string
    createdat?: DateTimeFilter<"permission"> | Date | string
    updatedby?: StringNullableFilter<"permission"> | string | null
    updatedat?: DateTimeNullableFilter<"permission"> | Date | string | null
    createduser?: XOR<UserScalarRelationFilter, userWhereInput>
    updateduser?: XOR<UserNullableScalarRelationFilter, userWhereInput> | null
    rolepermissions?: RolepermissionListRelationFilter
    userpermissions?: UserpermissionListRelationFilter
  }, "id" | "value">

  export type permissionOrderByWithAggregationInput = {
    id?: SortOrder
    name?: SortOrder
    value?: SortOrder
    group?: SortOrder
    description?: SortOrder
    createdby?: SortOrder
    createdat?: SortOrder
    updatedby?: SortOrderInput | SortOrder
    updatedat?: SortOrderInput | SortOrder
    _count?: permissionCountOrderByAggregateInput
    _max?: permissionMaxOrderByAggregateInput
    _min?: permissionMinOrderByAggregateInput
  }

  export type permissionScalarWhereWithAggregatesInput = {
    AND?: permissionScalarWhereWithAggregatesInput | permissionScalarWhereWithAggregatesInput[]
    OR?: permissionScalarWhereWithAggregatesInput[]
    NOT?: permissionScalarWhereWithAggregatesInput | permissionScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"permission"> | string
    name?: StringWithAggregatesFilter<"permission"> | string
    value?: StringWithAggregatesFilter<"permission"> | string
    group?: StringWithAggregatesFilter<"permission"> | string
    description?: StringWithAggregatesFilter<"permission"> | string
    createdby?: StringWithAggregatesFilter<"permission"> | string
    createdat?: DateTimeWithAggregatesFilter<"permission"> | Date | string
    updatedby?: StringNullableWithAggregatesFilter<"permission"> | string | null
    updatedat?: DateTimeNullableWithAggregatesFilter<"permission"> | Date | string | null
  }

  export type rolepermissionWhereInput = {
    AND?: rolepermissionWhereInput | rolepermissionWhereInput[]
    OR?: rolepermissionWhereInput[]
    NOT?: rolepermissionWhereInput | rolepermissionWhereInput[]
    id?: StringFilter<"rolepermission"> | string
    roleid?: StringFilter<"rolepermission"> | string
    permissionid?: StringFilter<"rolepermission"> | string
    createdat?: DateTimeFilter<"rolepermission"> | Date | string
    createdby?: StringFilter<"rolepermission"> | string
    updatedby?: StringNullableFilter<"rolepermission"> | string | null
    updatedat?: DateTimeNullableFilter<"rolepermission"> | Date | string | null
    createduser?: XOR<UserScalarRelationFilter, userWhereInput>
    permission?: XOR<PermissionScalarRelationFilter, permissionWhereInput>
    role?: XOR<RoleScalarRelationFilter, roleWhereInput>
    updateduser?: XOR<UserNullableScalarRelationFilter, userWhereInput> | null
  }

  export type rolepermissionOrderByWithRelationInput = {
    id?: SortOrder
    roleid?: SortOrder
    permissionid?: SortOrder
    createdat?: SortOrder
    createdby?: SortOrder
    updatedby?: SortOrderInput | SortOrder
    updatedat?: SortOrderInput | SortOrder
    createduser?: userOrderByWithRelationInput
    permission?: permissionOrderByWithRelationInput
    role?: roleOrderByWithRelationInput
    updateduser?: userOrderByWithRelationInput
  }

  export type rolepermissionWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: rolepermissionWhereInput | rolepermissionWhereInput[]
    OR?: rolepermissionWhereInput[]
    NOT?: rolepermissionWhereInput | rolepermissionWhereInput[]
    roleid?: StringFilter<"rolepermission"> | string
    permissionid?: StringFilter<"rolepermission"> | string
    createdat?: DateTimeFilter<"rolepermission"> | Date | string
    createdby?: StringFilter<"rolepermission"> | string
    updatedby?: StringNullableFilter<"rolepermission"> | string | null
    updatedat?: DateTimeNullableFilter<"rolepermission"> | Date | string | null
    createduser?: XOR<UserScalarRelationFilter, userWhereInput>
    permission?: XOR<PermissionScalarRelationFilter, permissionWhereInput>
    role?: XOR<RoleScalarRelationFilter, roleWhereInput>
    updateduser?: XOR<UserNullableScalarRelationFilter, userWhereInput> | null
  }, "id">

  export type rolepermissionOrderByWithAggregationInput = {
    id?: SortOrder
    roleid?: SortOrder
    permissionid?: SortOrder
    createdat?: SortOrder
    createdby?: SortOrder
    updatedby?: SortOrderInput | SortOrder
    updatedat?: SortOrderInput | SortOrder
    _count?: rolepermissionCountOrderByAggregateInput
    _max?: rolepermissionMaxOrderByAggregateInput
    _min?: rolepermissionMinOrderByAggregateInput
  }

  export type rolepermissionScalarWhereWithAggregatesInput = {
    AND?: rolepermissionScalarWhereWithAggregatesInput | rolepermissionScalarWhereWithAggregatesInput[]
    OR?: rolepermissionScalarWhereWithAggregatesInput[]
    NOT?: rolepermissionScalarWhereWithAggregatesInput | rolepermissionScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"rolepermission"> | string
    roleid?: StringWithAggregatesFilter<"rolepermission"> | string
    permissionid?: StringWithAggregatesFilter<"rolepermission"> | string
    createdat?: DateTimeWithAggregatesFilter<"rolepermission"> | Date | string
    createdby?: StringWithAggregatesFilter<"rolepermission"> | string
    updatedby?: StringNullableWithAggregatesFilter<"rolepermission"> | string | null
    updatedat?: DateTimeNullableWithAggregatesFilter<"rolepermission"> | Date | string | null
  }

  export type userWhereInput = {
    AND?: userWhereInput | userWhereInput[]
    OR?: userWhereInput[]
    NOT?: userWhereInput | userWhereInput[]
    id?: StringFilter<"user"> | string
    firstname?: StringFilter<"user"> | string
    lastname?: StringFilter<"user"> | string
    phone?: StringNullableFilter<"user"> | string | null
    email?: StringFilter<"user"> | string
    password?: StringFilter<"user"> | string
    appLanguage?: StringNullableFilter<"user"> | string | null
    learningLanguage?: StringNullableFilter<"user"> | string | null
    learningLevel?: StringNullableFilter<"user"> | string | null
    theme?: StringNullableFilter<"user"> | string | null
    avatar?: StringNullableFilter<"user"> | string | null
    createdby?: StringFilter<"user"> | string
    createdat?: DateTimeFilter<"user"> | Date | string
    updatedby?: StringNullableFilter<"user"> | string | null
    updatedat?: DateTimeNullableFilter<"user"> | Date | string | null
    status?: IntFilter<"user"> | number
    lastentranceat?: DateTimeNullableFilter<"user"> | Date | string | null
    lastexitat?: DateTimeNullableFilter<"user"> | Date | string | null
    lastloginat?: DateTimeNullableFilter<"user"> | Date | string | null
    stripeCustomerId?: StringNullableFilter<"user"> | string | null
    notificationuser?: NotificationListRelationFilter
    createdapiclients?: ApiclientListRelationFilter
    updatedapiclients?: ApiclientListRelationFilter
    createdpermissions?: PermissionListRelationFilter
    updatedpermissions?: PermissionListRelationFilter
    refreshtokens?: RefreshtokenListRelationFilter
    createdroles?: RoleListRelationFilter
    updatedroles?: RoleListRelationFilter
    createdrolepermissions?: RolepermissionListRelationFilter
    updatedrolepermissions?: RolepermissionListRelationFilter
    createduser?: XOR<UserScalarRelationFilter, userWhereInput>
    createdusers?: UserListRelationFilter
    updateduser?: XOR<UserNullableScalarRelationFilter, userWhereInput> | null
    updatedusers?: UserListRelationFilter
    createduserpermissions?: UserpermissionListRelationFilter
    updateduserpermissions?: UserpermissionListRelationFilter
    userpermissions?: UserpermissionListRelationFilter
    createduserroles?: UserroleListRelationFilter
    updateduserroles?: UserroleListRelationFilter
    userroles?: UserroleListRelationFilter
    language?: LanguagesListRelationFilter
    learningProgress?: LearningProgressListRelationFilter
    chats?: ChatListRelationFilter
    chatRooms?: ChatRoomListRelationFilter
    subscriptions?: SubscriptionListRelationFilter
  }

  export type userOrderByWithRelationInput = {
    id?: SortOrder
    firstname?: SortOrder
    lastname?: SortOrder
    phone?: SortOrderInput | SortOrder
    email?: SortOrder
    password?: SortOrder
    appLanguage?: SortOrderInput | SortOrder
    learningLanguage?: SortOrderInput | SortOrder
    learningLevel?: SortOrderInput | SortOrder
    theme?: SortOrderInput | SortOrder
    avatar?: SortOrderInput | SortOrder
    createdby?: SortOrder
    createdat?: SortOrder
    updatedby?: SortOrderInput | SortOrder
    updatedat?: SortOrderInput | SortOrder
    status?: SortOrder
    lastentranceat?: SortOrderInput | SortOrder
    lastexitat?: SortOrderInput | SortOrder
    lastloginat?: SortOrderInput | SortOrder
    stripeCustomerId?: SortOrderInput | SortOrder
    notificationuser?: notificationOrderByRelationAggregateInput
    createdapiclients?: apiclientOrderByRelationAggregateInput
    updatedapiclients?: apiclientOrderByRelationAggregateInput
    createdpermissions?: permissionOrderByRelationAggregateInput
    updatedpermissions?: permissionOrderByRelationAggregateInput
    refreshtokens?: refreshtokenOrderByRelationAggregateInput
    createdroles?: roleOrderByRelationAggregateInput
    updatedroles?: roleOrderByRelationAggregateInput
    createdrolepermissions?: rolepermissionOrderByRelationAggregateInput
    updatedrolepermissions?: rolepermissionOrderByRelationAggregateInput
    createduser?: userOrderByWithRelationInput
    createdusers?: userOrderByRelationAggregateInput
    updateduser?: userOrderByWithRelationInput
    updatedusers?: userOrderByRelationAggregateInput
    createduserpermissions?: userpermissionOrderByRelationAggregateInput
    updateduserpermissions?: userpermissionOrderByRelationAggregateInput
    userpermissions?: userpermissionOrderByRelationAggregateInput
    createduserroles?: userroleOrderByRelationAggregateInput
    updateduserroles?: userroleOrderByRelationAggregateInput
    userroles?: userroleOrderByRelationAggregateInput
    language?: languagesOrderByRelationAggregateInput
    learningProgress?: learningProgressOrderByRelationAggregateInput
    chats?: chatOrderByRelationAggregateInput
    chatRooms?: chatRoomOrderByRelationAggregateInput
    subscriptions?: subscriptionOrderByRelationAggregateInput
  }

  export type userWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    email?: string
    AND?: userWhereInput | userWhereInput[]
    OR?: userWhereInput[]
    NOT?: userWhereInput | userWhereInput[]
    firstname?: StringFilter<"user"> | string
    lastname?: StringFilter<"user"> | string
    phone?: StringNullableFilter<"user"> | string | null
    password?: StringFilter<"user"> | string
    appLanguage?: StringNullableFilter<"user"> | string | null
    learningLanguage?: StringNullableFilter<"user"> | string | null
    learningLevel?: StringNullableFilter<"user"> | string | null
    theme?: StringNullableFilter<"user"> | string | null
    avatar?: StringNullableFilter<"user"> | string | null
    createdby?: StringFilter<"user"> | string
    createdat?: DateTimeFilter<"user"> | Date | string
    updatedby?: StringNullableFilter<"user"> | string | null
    updatedat?: DateTimeNullableFilter<"user"> | Date | string | null
    status?: IntFilter<"user"> | number
    lastentranceat?: DateTimeNullableFilter<"user"> | Date | string | null
    lastexitat?: DateTimeNullableFilter<"user"> | Date | string | null
    lastloginat?: DateTimeNullableFilter<"user"> | Date | string | null
    stripeCustomerId?: StringNullableFilter<"user"> | string | null
    notificationuser?: NotificationListRelationFilter
    createdapiclients?: ApiclientListRelationFilter
    updatedapiclients?: ApiclientListRelationFilter
    createdpermissions?: PermissionListRelationFilter
    updatedpermissions?: PermissionListRelationFilter
    refreshtokens?: RefreshtokenListRelationFilter
    createdroles?: RoleListRelationFilter
    updatedroles?: RoleListRelationFilter
    createdrolepermissions?: RolepermissionListRelationFilter
    updatedrolepermissions?: RolepermissionListRelationFilter
    createduser?: XOR<UserScalarRelationFilter, userWhereInput>
    createdusers?: UserListRelationFilter
    updateduser?: XOR<UserNullableScalarRelationFilter, userWhereInput> | null
    updatedusers?: UserListRelationFilter
    createduserpermissions?: UserpermissionListRelationFilter
    updateduserpermissions?: UserpermissionListRelationFilter
    userpermissions?: UserpermissionListRelationFilter
    createduserroles?: UserroleListRelationFilter
    updateduserroles?: UserroleListRelationFilter
    userroles?: UserroleListRelationFilter
    language?: LanguagesListRelationFilter
    learningProgress?: LearningProgressListRelationFilter
    chats?: ChatListRelationFilter
    chatRooms?: ChatRoomListRelationFilter
    subscriptions?: SubscriptionListRelationFilter
  }, "id" | "email">

  export type userOrderByWithAggregationInput = {
    id?: SortOrder
    firstname?: SortOrder
    lastname?: SortOrder
    phone?: SortOrderInput | SortOrder
    email?: SortOrder
    password?: SortOrder
    appLanguage?: SortOrderInput | SortOrder
    learningLanguage?: SortOrderInput | SortOrder
    learningLevel?: SortOrderInput | SortOrder
    theme?: SortOrderInput | SortOrder
    avatar?: SortOrderInput | SortOrder
    createdby?: SortOrder
    createdat?: SortOrder
    updatedby?: SortOrderInput | SortOrder
    updatedat?: SortOrderInput | SortOrder
    status?: SortOrder
    lastentranceat?: SortOrderInput | SortOrder
    lastexitat?: SortOrderInput | SortOrder
    lastloginat?: SortOrderInput | SortOrder
    stripeCustomerId?: SortOrderInput | SortOrder
    _count?: userCountOrderByAggregateInput
    _avg?: userAvgOrderByAggregateInput
    _max?: userMaxOrderByAggregateInput
    _min?: userMinOrderByAggregateInput
    _sum?: userSumOrderByAggregateInput
  }

  export type userScalarWhereWithAggregatesInput = {
    AND?: userScalarWhereWithAggregatesInput | userScalarWhereWithAggregatesInput[]
    OR?: userScalarWhereWithAggregatesInput[]
    NOT?: userScalarWhereWithAggregatesInput | userScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"user"> | string
    firstname?: StringWithAggregatesFilter<"user"> | string
    lastname?: StringWithAggregatesFilter<"user"> | string
    phone?: StringNullableWithAggregatesFilter<"user"> | string | null
    email?: StringWithAggregatesFilter<"user"> | string
    password?: StringWithAggregatesFilter<"user"> | string
    appLanguage?: StringNullableWithAggregatesFilter<"user"> | string | null
    learningLanguage?: StringNullableWithAggregatesFilter<"user"> | string | null
    learningLevel?: StringNullableWithAggregatesFilter<"user"> | string | null
    theme?: StringNullableWithAggregatesFilter<"user"> | string | null
    avatar?: StringNullableWithAggregatesFilter<"user"> | string | null
    createdby?: StringWithAggregatesFilter<"user"> | string
    createdat?: DateTimeWithAggregatesFilter<"user"> | Date | string
    updatedby?: StringNullableWithAggregatesFilter<"user"> | string | null
    updatedat?: DateTimeNullableWithAggregatesFilter<"user"> | Date | string | null
    status?: IntWithAggregatesFilter<"user"> | number
    lastentranceat?: DateTimeNullableWithAggregatesFilter<"user"> | Date | string | null
    lastexitat?: DateTimeNullableWithAggregatesFilter<"user"> | Date | string | null
    lastloginat?: DateTimeNullableWithAggregatesFilter<"user"> | Date | string | null
    stripeCustomerId?: StringNullableWithAggregatesFilter<"user"> | string | null
  }

  export type userpermissionWhereInput = {
    AND?: userpermissionWhereInput | userpermissionWhereInput[]
    OR?: userpermissionWhereInput[]
    NOT?: userpermissionWhereInput | userpermissionWhereInput[]
    id?: StringFilter<"userpermission"> | string
    userid?: StringFilter<"userpermission"> | string
    permissionid?: StringFilter<"userpermission"> | string
    createdby?: StringFilter<"userpermission"> | string
    createdat?: DateTimeFilter<"userpermission"> | Date | string
    updatedby?: StringNullableFilter<"userpermission"> | string | null
    updatedat?: DateTimeNullableFilter<"userpermission"> | Date | string | null
    createduser?: XOR<UserScalarRelationFilter, userWhereInput>
    permission?: XOR<PermissionScalarRelationFilter, permissionWhereInput>
    updateduser?: XOR<UserNullableScalarRelationFilter, userWhereInput> | null
    user?: XOR<UserScalarRelationFilter, userWhereInput>
  }

  export type userpermissionOrderByWithRelationInput = {
    id?: SortOrder
    userid?: SortOrder
    permissionid?: SortOrder
    createdby?: SortOrder
    createdat?: SortOrder
    updatedby?: SortOrderInput | SortOrder
    updatedat?: SortOrderInput | SortOrder
    createduser?: userOrderByWithRelationInput
    permission?: permissionOrderByWithRelationInput
    updateduser?: userOrderByWithRelationInput
    user?: userOrderByWithRelationInput
  }

  export type userpermissionWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: userpermissionWhereInput | userpermissionWhereInput[]
    OR?: userpermissionWhereInput[]
    NOT?: userpermissionWhereInput | userpermissionWhereInput[]
    userid?: StringFilter<"userpermission"> | string
    permissionid?: StringFilter<"userpermission"> | string
    createdby?: StringFilter<"userpermission"> | string
    createdat?: DateTimeFilter<"userpermission"> | Date | string
    updatedby?: StringNullableFilter<"userpermission"> | string | null
    updatedat?: DateTimeNullableFilter<"userpermission"> | Date | string | null
    createduser?: XOR<UserScalarRelationFilter, userWhereInput>
    permission?: XOR<PermissionScalarRelationFilter, permissionWhereInput>
    updateduser?: XOR<UserNullableScalarRelationFilter, userWhereInput> | null
    user?: XOR<UserScalarRelationFilter, userWhereInput>
  }, "id">

  export type userpermissionOrderByWithAggregationInput = {
    id?: SortOrder
    userid?: SortOrder
    permissionid?: SortOrder
    createdby?: SortOrder
    createdat?: SortOrder
    updatedby?: SortOrderInput | SortOrder
    updatedat?: SortOrderInput | SortOrder
    _count?: userpermissionCountOrderByAggregateInput
    _max?: userpermissionMaxOrderByAggregateInput
    _min?: userpermissionMinOrderByAggregateInput
  }

  export type userpermissionScalarWhereWithAggregatesInput = {
    AND?: userpermissionScalarWhereWithAggregatesInput | userpermissionScalarWhereWithAggregatesInput[]
    OR?: userpermissionScalarWhereWithAggregatesInput[]
    NOT?: userpermissionScalarWhereWithAggregatesInput | userpermissionScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"userpermission"> | string
    userid?: StringWithAggregatesFilter<"userpermission"> | string
    permissionid?: StringWithAggregatesFilter<"userpermission"> | string
    createdby?: StringWithAggregatesFilter<"userpermission"> | string
    createdat?: DateTimeWithAggregatesFilter<"userpermission"> | Date | string
    updatedby?: StringNullableWithAggregatesFilter<"userpermission"> | string | null
    updatedat?: DateTimeNullableWithAggregatesFilter<"userpermission"> | Date | string | null
  }

  export type userroleWhereInput = {
    AND?: userroleWhereInput | userroleWhereInput[]
    OR?: userroleWhereInput[]
    NOT?: userroleWhereInput | userroleWhereInput[]
    id?: StringFilter<"userrole"> | string
    userid?: StringFilter<"userrole"> | string
    roleid?: StringFilter<"userrole"> | string
    createdby?: StringFilter<"userrole"> | string
    createdat?: DateTimeFilter<"userrole"> | Date | string
    updatedby?: StringNullableFilter<"userrole"> | string | null
    updatedat?: DateTimeNullableFilter<"userrole"> | Date | string | null
    createduser?: XOR<UserScalarRelationFilter, userWhereInput>
    role?: XOR<RoleScalarRelationFilter, roleWhereInput>
    updateduser?: XOR<UserNullableScalarRelationFilter, userWhereInput> | null
    user?: XOR<UserScalarRelationFilter, userWhereInput>
  }

  export type userroleOrderByWithRelationInput = {
    id?: SortOrder
    userid?: SortOrder
    roleid?: SortOrder
    createdby?: SortOrder
    createdat?: SortOrder
    updatedby?: SortOrderInput | SortOrder
    updatedat?: SortOrderInput | SortOrder
    createduser?: userOrderByWithRelationInput
    role?: roleOrderByWithRelationInput
    updateduser?: userOrderByWithRelationInput
    user?: userOrderByWithRelationInput
  }

  export type userroleWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: userroleWhereInput | userroleWhereInput[]
    OR?: userroleWhereInput[]
    NOT?: userroleWhereInput | userroleWhereInput[]
    userid?: StringFilter<"userrole"> | string
    roleid?: StringFilter<"userrole"> | string
    createdby?: StringFilter<"userrole"> | string
    createdat?: DateTimeFilter<"userrole"> | Date | string
    updatedby?: StringNullableFilter<"userrole"> | string | null
    updatedat?: DateTimeNullableFilter<"userrole"> | Date | string | null
    createduser?: XOR<UserScalarRelationFilter, userWhereInput>
    role?: XOR<RoleScalarRelationFilter, roleWhereInput>
    updateduser?: XOR<UserNullableScalarRelationFilter, userWhereInput> | null
    user?: XOR<UserScalarRelationFilter, userWhereInput>
  }, "id">

  export type userroleOrderByWithAggregationInput = {
    id?: SortOrder
    userid?: SortOrder
    roleid?: SortOrder
    createdby?: SortOrder
    createdat?: SortOrder
    updatedby?: SortOrderInput | SortOrder
    updatedat?: SortOrderInput | SortOrder
    _count?: userroleCountOrderByAggregateInput
    _max?: userroleMaxOrderByAggregateInput
    _min?: userroleMinOrderByAggregateInput
  }

  export type userroleScalarWhereWithAggregatesInput = {
    AND?: userroleScalarWhereWithAggregatesInput | userroleScalarWhereWithAggregatesInput[]
    OR?: userroleScalarWhereWithAggregatesInput[]
    NOT?: userroleScalarWhereWithAggregatesInput | userroleScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"userrole"> | string
    userid?: StringWithAggregatesFilter<"userrole"> | string
    roleid?: StringWithAggregatesFilter<"userrole"> | string
    createdby?: StringWithAggregatesFilter<"userrole"> | string
    createdat?: DateTimeWithAggregatesFilter<"userrole"> | Date | string
    updatedby?: StringNullableWithAggregatesFilter<"userrole"> | string | null
    updatedat?: DateTimeNullableWithAggregatesFilter<"userrole"> | Date | string | null
  }

  export type packageFeatureCreateInput = {
    id?: string
    feature: string
    available?: boolean
    package: packagesCreateNestedOneWithoutFeaturesInput
  }

  export type packageFeatureUncheckedCreateInput = {
    id?: string
    feature: string
    available?: boolean
    packageId: string
  }

  export type packageFeatureUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    feature?: StringFieldUpdateOperationsInput | string
    available?: BoolFieldUpdateOperationsInput | boolean
    package?: packagesUpdateOneRequiredWithoutFeaturesNestedInput
  }

  export type packageFeatureUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    feature?: StringFieldUpdateOperationsInput | string
    available?: BoolFieldUpdateOperationsInput | boolean
    packageId?: StringFieldUpdateOperationsInput | string
  }

  export type packageFeatureCreateManyInput = {
    id?: string
    feature: string
    available?: boolean
    packageId: string
  }

  export type packageFeatureUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    feature?: StringFieldUpdateOperationsInput | string
    available?: BoolFieldUpdateOperationsInput | boolean
  }

  export type packageFeatureUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    feature?: StringFieldUpdateOperationsInput | string
    available?: BoolFieldUpdateOperationsInput | boolean
    packageId?: StringFieldUpdateOperationsInput | string
  }

  export type packagesCreateInput = {
    id?: string
    name: string
    description: string
    icon: string
    duration: $Enums.duration
    popular?: boolean
    highlightColor?: string | null
    savings?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    features?: packageFeatureCreateNestedManyWithoutPackageInput
    prices?: priceCreateNestedManyWithoutPackageInput
    subscriptions?: subscriptionCreateNestedManyWithoutPackageInput
  }

  export type packagesUncheckedCreateInput = {
    id?: string
    name: string
    description: string
    icon: string
    duration: $Enums.duration
    popular?: boolean
    highlightColor?: string | null
    savings?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    features?: packageFeatureUncheckedCreateNestedManyWithoutPackageInput
    prices?: priceUncheckedCreateNestedManyWithoutPackageInput
    subscriptions?: subscriptionUncheckedCreateNestedManyWithoutPackageInput
  }

  export type packagesUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    icon?: StringFieldUpdateOperationsInput | string
    duration?: EnumdurationFieldUpdateOperationsInput | $Enums.duration
    popular?: BoolFieldUpdateOperationsInput | boolean
    highlightColor?: NullableStringFieldUpdateOperationsInput | string | null
    savings?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    features?: packageFeatureUpdateManyWithoutPackageNestedInput
    prices?: priceUpdateManyWithoutPackageNestedInput
    subscriptions?: subscriptionUpdateManyWithoutPackageNestedInput
  }

  export type packagesUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    icon?: StringFieldUpdateOperationsInput | string
    duration?: EnumdurationFieldUpdateOperationsInput | $Enums.duration
    popular?: BoolFieldUpdateOperationsInput | boolean
    highlightColor?: NullableStringFieldUpdateOperationsInput | string | null
    savings?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    features?: packageFeatureUncheckedUpdateManyWithoutPackageNestedInput
    prices?: priceUncheckedUpdateManyWithoutPackageNestedInput
    subscriptions?: subscriptionUncheckedUpdateManyWithoutPackageNestedInput
  }

  export type packagesCreateManyInput = {
    id?: string
    name: string
    description: string
    icon: string
    duration: $Enums.duration
    popular?: boolean
    highlightColor?: string | null
    savings?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type packagesUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    icon?: StringFieldUpdateOperationsInput | string
    duration?: EnumdurationFieldUpdateOperationsInput | $Enums.duration
    popular?: BoolFieldUpdateOperationsInput | boolean
    highlightColor?: NullableStringFieldUpdateOperationsInput | string | null
    savings?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type packagesUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    icon?: StringFieldUpdateOperationsInput | string
    duration?: EnumdurationFieldUpdateOperationsInput | $Enums.duration
    popular?: BoolFieldUpdateOperationsInput | boolean
    highlightColor?: NullableStringFieldUpdateOperationsInput | string | null
    savings?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type priceCreateInput = {
    id?: string
    currency?: $Enums.Currency
    amount: Decimal | DecimalJsLike | number | string
    package: packagesCreateNestedOneWithoutPricesInput
  }

  export type priceUncheckedCreateInput = {
    id?: string
    currency?: $Enums.Currency
    amount: Decimal | DecimalJsLike | number | string
    packageId: string
  }

  export type priceUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    currency?: EnumCurrencyFieldUpdateOperationsInput | $Enums.Currency
    amount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    package?: packagesUpdateOneRequiredWithoutPricesNestedInput
  }

  export type priceUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    currency?: EnumCurrencyFieldUpdateOperationsInput | $Enums.Currency
    amount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    packageId?: StringFieldUpdateOperationsInput | string
  }

  export type priceCreateManyInput = {
    id?: string
    currency?: $Enums.Currency
    amount: Decimal | DecimalJsLike | number | string
    packageId: string
  }

  export type priceUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    currency?: EnumCurrencyFieldUpdateOperationsInput | $Enums.Currency
    amount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
  }

  export type priceUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    currency?: EnumCurrencyFieldUpdateOperationsInput | $Enums.Currency
    amount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    packageId?: StringFieldUpdateOperationsInput | string
  }

  export type subscriptionCreateInput = {
    id?: string
    startDate?: Date | string
    endDate: Date | string
    status?: $Enums.SubscriptionStatus
    lastPaymentStatus?: string | null
    stripeCustomerId?: string | null
    stripePaymentId?: string | null
    stripePriceId?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    user: userCreateNestedOneWithoutSubscriptionsInput
    package: packagesCreateNestedOneWithoutSubscriptionsInput
  }

  export type subscriptionUncheckedCreateInput = {
    id?: string
    userId: string
    packageId: string
    startDate?: Date | string
    endDate: Date | string
    status?: $Enums.SubscriptionStatus
    lastPaymentStatus?: string | null
    stripeCustomerId?: string | null
    stripePaymentId?: string | null
    stripePriceId?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type subscriptionUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    startDate?: DateTimeFieldUpdateOperationsInput | Date | string
    endDate?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: EnumSubscriptionStatusFieldUpdateOperationsInput | $Enums.SubscriptionStatus
    lastPaymentStatus?: NullableStringFieldUpdateOperationsInput | string | null
    stripeCustomerId?: NullableStringFieldUpdateOperationsInput | string | null
    stripePaymentId?: NullableStringFieldUpdateOperationsInput | string | null
    stripePriceId?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    user?: userUpdateOneRequiredWithoutSubscriptionsNestedInput
    package?: packagesUpdateOneRequiredWithoutSubscriptionsNestedInput
  }

  export type subscriptionUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    packageId?: StringFieldUpdateOperationsInput | string
    startDate?: DateTimeFieldUpdateOperationsInput | Date | string
    endDate?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: EnumSubscriptionStatusFieldUpdateOperationsInput | $Enums.SubscriptionStatus
    lastPaymentStatus?: NullableStringFieldUpdateOperationsInput | string | null
    stripeCustomerId?: NullableStringFieldUpdateOperationsInput | string | null
    stripePaymentId?: NullableStringFieldUpdateOperationsInput | string | null
    stripePriceId?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type subscriptionCreateManyInput = {
    id?: string
    userId: string
    packageId: string
    startDate?: Date | string
    endDate: Date | string
    status?: $Enums.SubscriptionStatus
    lastPaymentStatus?: string | null
    stripeCustomerId?: string | null
    stripePaymentId?: string | null
    stripePriceId?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type subscriptionUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    startDate?: DateTimeFieldUpdateOperationsInput | Date | string
    endDate?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: EnumSubscriptionStatusFieldUpdateOperationsInput | $Enums.SubscriptionStatus
    lastPaymentStatus?: NullableStringFieldUpdateOperationsInput | string | null
    stripeCustomerId?: NullableStringFieldUpdateOperationsInput | string | null
    stripePaymentId?: NullableStringFieldUpdateOperationsInput | string | null
    stripePriceId?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type subscriptionUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    packageId?: StringFieldUpdateOperationsInput | string
    startDate?: DateTimeFieldUpdateOperationsInput | Date | string
    endDate?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: EnumSubscriptionStatusFieldUpdateOperationsInput | $Enums.SubscriptionStatus
    lastPaymentStatus?: NullableStringFieldUpdateOperationsInput | string | null
    stripeCustomerId?: NullableStringFieldUpdateOperationsInput | string | null
    stripePaymentId?: NullableStringFieldUpdateOperationsInput | string | null
    stripePriceId?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type chatRoomCreateInput = {
    id?: string
    title?: string
    language: string
    createdAt?: Date | string
    updatedAt?: Date | string | null
    user: userCreateNestedOneWithoutChatRoomsInput
    messages?: chatCreateNestedManyWithoutRoomInput
  }

  export type chatRoomUncheckedCreateInput = {
    id?: string
    userId: string
    title?: string
    language: string
    createdAt?: Date | string
    updatedAt?: Date | string | null
    messages?: chatUncheckedCreateNestedManyWithoutRoomInput
  }

  export type chatRoomUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    language?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    user?: userUpdateOneRequiredWithoutChatRoomsNestedInput
    messages?: chatUpdateManyWithoutRoomNestedInput
  }

  export type chatRoomUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    language?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    messages?: chatUncheckedUpdateManyWithoutRoomNestedInput
  }

  export type chatRoomCreateManyInput = {
    id?: string
    userId: string
    title?: string
    language: string
    createdAt?: Date | string
    updatedAt?: Date | string | null
  }

  export type chatRoomUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    language?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type chatRoomUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    language?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type chatCreateInput = {
    id?: string
    message: string
    role?: string
    createdAt?: Date | string
    updatedAt?: Date | string | null
    user: userCreateNestedOneWithoutChatsInput
    room: chatRoomCreateNestedOneWithoutMessagesInput
  }

  export type chatUncheckedCreateInput = {
    id?: string
    roomId: string
    userId: string
    message: string
    role?: string
    createdAt?: Date | string
    updatedAt?: Date | string | null
  }

  export type chatUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    message?: StringFieldUpdateOperationsInput | string
    role?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    user?: userUpdateOneRequiredWithoutChatsNestedInput
    room?: chatRoomUpdateOneRequiredWithoutMessagesNestedInput
  }

  export type chatUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    roomId?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    message?: StringFieldUpdateOperationsInput | string
    role?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type chatCreateManyInput = {
    id?: string
    roomId: string
    userId: string
    message: string
    role?: string
    createdAt?: Date | string
    updatedAt?: Date | string | null
  }

  export type chatUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    message?: StringFieldUpdateOperationsInput | string
    role?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type chatUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    roomId?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    message?: StringFieldUpdateOperationsInput | string
    role?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type learningProgressCreateInput = {
    id?: string
    progress?: number
    createdat?: Date | string
    updatedat?: Date | string | null
    user: userCreateNestedOneWithoutLearningProgressInput
    language: languagesCreateNestedOneWithoutLearningProgressInput
  }

  export type learningProgressUncheckedCreateInput = {
    id?: string
    userid: string
    languageID: string
    progress?: number
    createdat?: Date | string
    updatedat?: Date | string | null
  }

  export type learningProgressUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    progress?: IntFieldUpdateOperationsInput | number
    createdat?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    user?: userUpdateOneRequiredWithoutLearningProgressNestedInput
    language?: languagesUpdateOneRequiredWithoutLearningProgressNestedInput
  }

  export type learningProgressUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    userid?: StringFieldUpdateOperationsInput | string
    languageID?: StringFieldUpdateOperationsInput | string
    progress?: IntFieldUpdateOperationsInput | number
    createdat?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type learningProgressCreateManyInput = {
    id?: string
    userid: string
    languageID: string
    progress?: number
    createdat?: Date | string
    updatedat?: Date | string | null
  }

  export type learningProgressUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    progress?: IntFieldUpdateOperationsInput | number
    createdat?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type learningProgressUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    userid?: StringFieldUpdateOperationsInput | string
    languageID?: StringFieldUpdateOperationsInput | string
    progress?: IntFieldUpdateOperationsInput | number
    createdat?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type languagesCreateInput = {
    id?: string
    flag: string
    name: string
    code: string
    learningProgress?: learningProgressCreateNestedManyWithoutLanguageInput
    user?: userCreateNestedManyWithoutLanguageInput
  }

  export type languagesUncheckedCreateInput = {
    id?: string
    flag: string
    name: string
    code: string
    learningProgress?: learningProgressUncheckedCreateNestedManyWithoutLanguageInput
    user?: userUncheckedCreateNestedManyWithoutLanguageInput
  }

  export type languagesUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    flag?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    code?: StringFieldUpdateOperationsInput | string
    learningProgress?: learningProgressUpdateManyWithoutLanguageNestedInput
    user?: userUpdateManyWithoutLanguageNestedInput
  }

  export type languagesUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    flag?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    code?: StringFieldUpdateOperationsInput | string
    learningProgress?: learningProgressUncheckedUpdateManyWithoutLanguageNestedInput
    user?: userUncheckedUpdateManyWithoutLanguageNestedInput
  }

  export type languagesCreateManyInput = {
    id?: string
    flag: string
    name: string
    code: string
  }

  export type languagesUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    flag?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    code?: StringFieldUpdateOperationsInput | string
  }

  export type languagesUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    flag?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    code?: StringFieldUpdateOperationsInput | string
  }

  export type entranceCreateInput = {
    id?: string
    type: number
    useragent: string
    ipaddress: string
    userid: string
    createdat?: Date | string
  }

  export type entranceUncheckedCreateInput = {
    id?: string
    type: number
    useragent: string
    ipaddress: string
    userid: string
    createdat?: Date | string
  }

  export type entranceUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    type?: IntFieldUpdateOperationsInput | number
    useragent?: StringFieldUpdateOperationsInput | string
    ipaddress?: StringFieldUpdateOperationsInput | string
    userid?: StringFieldUpdateOperationsInput | string
    createdat?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type entranceUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    type?: IntFieldUpdateOperationsInput | number
    useragent?: StringFieldUpdateOperationsInput | string
    ipaddress?: StringFieldUpdateOperationsInput | string
    userid?: StringFieldUpdateOperationsInput | string
    createdat?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type entranceCreateManyInput = {
    id?: string
    type: number
    useragent: string
    ipaddress: string
    userid: string
    createdat?: Date | string
  }

  export type entranceUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    type?: IntFieldUpdateOperationsInput | number
    useragent?: StringFieldUpdateOperationsInput | string
    ipaddress?: StringFieldUpdateOperationsInput | string
    userid?: StringFieldUpdateOperationsInput | string
    createdat?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type entranceUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    type?: IntFieldUpdateOperationsInput | number
    useragent?: StringFieldUpdateOperationsInput | string
    ipaddress?: StringFieldUpdateOperationsInput | string
    userid?: StringFieldUpdateOperationsInput | string
    createdat?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type apiclientCreateInput = {
    id?: string
    name: string
    key: string
    secret: string
    type: number
    createdat?: Date | string
    updatedat?: Date | string | null
    isactive: boolean
    createduser: userCreateNestedOneWithoutCreatedapiclientsInput
    updateduser?: userCreateNestedOneWithoutUpdatedapiclientsInput
  }

  export type apiclientUncheckedCreateInput = {
    id?: string
    name: string
    key: string
    secret: string
    type: number
    createdat?: Date | string
    createdby: string
    updatedat?: Date | string | null
    updatedby?: string | null
    isactive: boolean
  }

  export type apiclientUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    key?: StringFieldUpdateOperationsInput | string
    secret?: StringFieldUpdateOperationsInput | string
    type?: IntFieldUpdateOperationsInput | number
    createdat?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    isactive?: BoolFieldUpdateOperationsInput | boolean
    createduser?: userUpdateOneRequiredWithoutCreatedapiclientsNestedInput
    updateduser?: userUpdateOneWithoutUpdatedapiclientsNestedInput
  }

  export type apiclientUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    key?: StringFieldUpdateOperationsInput | string
    secret?: StringFieldUpdateOperationsInput | string
    type?: IntFieldUpdateOperationsInput | number
    createdat?: DateTimeFieldUpdateOperationsInput | Date | string
    createdby?: StringFieldUpdateOperationsInput | string
    updatedat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedby?: NullableStringFieldUpdateOperationsInput | string | null
    isactive?: BoolFieldUpdateOperationsInput | boolean
  }

  export type apiclientCreateManyInput = {
    id?: string
    name: string
    key: string
    secret: string
    type: number
    createdat?: Date | string
    createdby: string
    updatedat?: Date | string | null
    updatedby?: string | null
    isactive: boolean
  }

  export type apiclientUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    key?: StringFieldUpdateOperationsInput | string
    secret?: StringFieldUpdateOperationsInput | string
    type?: IntFieldUpdateOperationsInput | number
    createdat?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    isactive?: BoolFieldUpdateOperationsInput | boolean
  }

  export type apiclientUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    key?: StringFieldUpdateOperationsInput | string
    secret?: StringFieldUpdateOperationsInput | string
    type?: IntFieldUpdateOperationsInput | number
    createdat?: DateTimeFieldUpdateOperationsInput | Date | string
    createdby?: StringFieldUpdateOperationsInput | string
    updatedat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedby?: NullableStringFieldUpdateOperationsInput | string | null
    isactive?: BoolFieldUpdateOperationsInput | boolean
  }

  export type refreshtokenCreateInput = {
    id?: string
    token: string
    createdat?: Date | string
    updatedat?: Date | string | null
    expiresat?: Date | string | null
    user: userCreateNestedOneWithoutRefreshtokensInput
  }

  export type refreshtokenUncheckedCreateInput = {
    id?: string
    userid: string
    token: string
    createdat?: Date | string
    updatedat?: Date | string | null
    expiresat?: Date | string | null
  }

  export type refreshtokenUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    token?: StringFieldUpdateOperationsInput | string
    createdat?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    expiresat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    user?: userUpdateOneRequiredWithoutRefreshtokensNestedInput
  }

  export type refreshtokenUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    userid?: StringFieldUpdateOperationsInput | string
    token?: StringFieldUpdateOperationsInput | string
    createdat?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    expiresat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type refreshtokenCreateManyInput = {
    id?: string
    userid: string
    token: string
    createdat?: Date | string
    updatedat?: Date | string | null
    expiresat?: Date | string | null
  }

  export type refreshtokenUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    token?: StringFieldUpdateOperationsInput | string
    createdat?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    expiresat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type refreshtokenUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    userid?: StringFieldUpdateOperationsInput | string
    token?: StringFieldUpdateOperationsInput | string
    createdat?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    expiresat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type revokedtokenCreateInput = {
    id?: string
    token: string
    date?: Date | string
  }

  export type revokedtokenUncheckedCreateInput = {
    id?: string
    token: string
    date?: Date | string
  }

  export type revokedtokenUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    token?: StringFieldUpdateOperationsInput | string
    date?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type revokedtokenUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    token?: StringFieldUpdateOperationsInput | string
    date?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type revokedtokenCreateManyInput = {
    id?: string
    token: string
    date?: Date | string
  }

  export type revokedtokenUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    token?: StringFieldUpdateOperationsInput | string
    date?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type revokedtokenUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    token?: StringFieldUpdateOperationsInput | string
    date?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type roleCreateInput = {
    id?: string
    name: string
    createdat?: Date | string
    updatedat?: Date | string | null
    issystemrole?: boolean
    createduser: userCreateNestedOneWithoutCreatedrolesInput
    updateduser?: userCreateNestedOneWithoutUpdatedrolesInput
    rolepermissions?: rolepermissionCreateNestedManyWithoutRoleInput
    userroles?: userroleCreateNestedManyWithoutRoleInput
  }

  export type roleUncheckedCreateInput = {
    id?: string
    name: string
    createdby: string
    createdat?: Date | string
    updatedby?: string | null
    updatedat?: Date | string | null
    issystemrole?: boolean
    rolepermissions?: rolepermissionUncheckedCreateNestedManyWithoutRoleInput
    userroles?: userroleUncheckedCreateNestedManyWithoutRoleInput
  }

  export type roleUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    createdat?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    issystemrole?: BoolFieldUpdateOperationsInput | boolean
    createduser?: userUpdateOneRequiredWithoutCreatedrolesNestedInput
    updateduser?: userUpdateOneWithoutUpdatedrolesNestedInput
    rolepermissions?: rolepermissionUpdateManyWithoutRoleNestedInput
    userroles?: userroleUpdateManyWithoutRoleNestedInput
  }

  export type roleUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    createdby?: StringFieldUpdateOperationsInput | string
    createdat?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedby?: NullableStringFieldUpdateOperationsInput | string | null
    updatedat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    issystemrole?: BoolFieldUpdateOperationsInput | boolean
    rolepermissions?: rolepermissionUncheckedUpdateManyWithoutRoleNestedInput
    userroles?: userroleUncheckedUpdateManyWithoutRoleNestedInput
  }

  export type roleCreateManyInput = {
    id?: string
    name: string
    createdby: string
    createdat?: Date | string
    updatedby?: string | null
    updatedat?: Date | string | null
    issystemrole?: boolean
  }

  export type roleUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    createdat?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    issystemrole?: BoolFieldUpdateOperationsInput | boolean
  }

  export type roleUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    createdby?: StringFieldUpdateOperationsInput | string
    createdat?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedby?: NullableStringFieldUpdateOperationsInput | string | null
    updatedat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    issystemrole?: BoolFieldUpdateOperationsInput | boolean
  }

  export type notificationCreateInput = {
    id?: string
    message: string
    url: string
    createdby: number
    createdat?: Date | string
    readedat?: Date | string | null
    to: userCreateNestedOneWithoutNotificationuserInput
  }

  export type notificationUncheckedCreateInput = {
    id?: string
    touserid: string
    message: string
    url: string
    createdby: number
    createdat?: Date | string
    readedat?: Date | string | null
  }

  export type notificationUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    message?: StringFieldUpdateOperationsInput | string
    url?: StringFieldUpdateOperationsInput | string
    createdby?: IntFieldUpdateOperationsInput | number
    createdat?: DateTimeFieldUpdateOperationsInput | Date | string
    readedat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    to?: userUpdateOneRequiredWithoutNotificationuserNestedInput
  }

  export type notificationUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    touserid?: StringFieldUpdateOperationsInput | string
    message?: StringFieldUpdateOperationsInput | string
    url?: StringFieldUpdateOperationsInput | string
    createdby?: IntFieldUpdateOperationsInput | number
    createdat?: DateTimeFieldUpdateOperationsInput | Date | string
    readedat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type notificationCreateManyInput = {
    id?: string
    touserid: string
    message: string
    url: string
    createdby: number
    createdat?: Date | string
    readedat?: Date | string | null
  }

  export type notificationUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    message?: StringFieldUpdateOperationsInput | string
    url?: StringFieldUpdateOperationsInput | string
    createdby?: IntFieldUpdateOperationsInput | number
    createdat?: DateTimeFieldUpdateOperationsInput | Date | string
    readedat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type notificationUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    touserid?: StringFieldUpdateOperationsInput | string
    message?: StringFieldUpdateOperationsInput | string
    url?: StringFieldUpdateOperationsInput | string
    createdby?: IntFieldUpdateOperationsInput | number
    createdat?: DateTimeFieldUpdateOperationsInput | Date | string
    readedat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type permissionCreateInput = {
    id?: string
    name: string
    value: string
    group: string
    description: string
    createdat?: Date | string
    updatedat?: Date | string | null
    createduser: userCreateNestedOneWithoutCreatedpermissionsInput
    updateduser?: userCreateNestedOneWithoutUpdatedpermissionsInput
    rolepermissions?: rolepermissionCreateNestedManyWithoutPermissionInput
    userpermissions?: userpermissionCreateNestedManyWithoutPermissionInput
  }

  export type permissionUncheckedCreateInput = {
    id?: string
    name: string
    value: string
    group: string
    description: string
    createdby: string
    createdat?: Date | string
    updatedby?: string | null
    updatedat?: Date | string | null
    rolepermissions?: rolepermissionUncheckedCreateNestedManyWithoutPermissionInput
    userpermissions?: userpermissionUncheckedCreateNestedManyWithoutPermissionInput
  }

  export type permissionUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    value?: StringFieldUpdateOperationsInput | string
    group?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    createdat?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createduser?: userUpdateOneRequiredWithoutCreatedpermissionsNestedInput
    updateduser?: userUpdateOneWithoutUpdatedpermissionsNestedInput
    rolepermissions?: rolepermissionUpdateManyWithoutPermissionNestedInput
    userpermissions?: userpermissionUpdateManyWithoutPermissionNestedInput
  }

  export type permissionUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    value?: StringFieldUpdateOperationsInput | string
    group?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    createdby?: StringFieldUpdateOperationsInput | string
    createdat?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedby?: NullableStringFieldUpdateOperationsInput | string | null
    updatedat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    rolepermissions?: rolepermissionUncheckedUpdateManyWithoutPermissionNestedInput
    userpermissions?: userpermissionUncheckedUpdateManyWithoutPermissionNestedInput
  }

  export type permissionCreateManyInput = {
    id?: string
    name: string
    value: string
    group: string
    description: string
    createdby: string
    createdat?: Date | string
    updatedby?: string | null
    updatedat?: Date | string | null
  }

  export type permissionUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    value?: StringFieldUpdateOperationsInput | string
    group?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    createdat?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type permissionUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    value?: StringFieldUpdateOperationsInput | string
    group?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    createdby?: StringFieldUpdateOperationsInput | string
    createdat?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedby?: NullableStringFieldUpdateOperationsInput | string | null
    updatedat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type rolepermissionCreateInput = {
    id?: string
    createdat?: Date | string
    updatedat?: Date | string | null
    createduser: userCreateNestedOneWithoutCreatedrolepermissionsInput
    permission: permissionCreateNestedOneWithoutRolepermissionsInput
    role: roleCreateNestedOneWithoutRolepermissionsInput
    updateduser?: userCreateNestedOneWithoutUpdatedrolepermissionsInput
  }

  export type rolepermissionUncheckedCreateInput = {
    id?: string
    roleid: string
    permissionid: string
    createdat?: Date | string
    createdby: string
    updatedby?: string | null
    updatedat?: Date | string | null
  }

  export type rolepermissionUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdat?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createduser?: userUpdateOneRequiredWithoutCreatedrolepermissionsNestedInput
    permission?: permissionUpdateOneRequiredWithoutRolepermissionsNestedInput
    role?: roleUpdateOneRequiredWithoutRolepermissionsNestedInput
    updateduser?: userUpdateOneWithoutUpdatedrolepermissionsNestedInput
  }

  export type rolepermissionUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    roleid?: StringFieldUpdateOperationsInput | string
    permissionid?: StringFieldUpdateOperationsInput | string
    createdat?: DateTimeFieldUpdateOperationsInput | Date | string
    createdby?: StringFieldUpdateOperationsInput | string
    updatedby?: NullableStringFieldUpdateOperationsInput | string | null
    updatedat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type rolepermissionCreateManyInput = {
    id?: string
    roleid: string
    permissionid: string
    createdat?: Date | string
    createdby: string
    updatedby?: string | null
    updatedat?: Date | string | null
  }

  export type rolepermissionUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdat?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type rolepermissionUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    roleid?: StringFieldUpdateOperationsInput | string
    permissionid?: StringFieldUpdateOperationsInput | string
    createdat?: DateTimeFieldUpdateOperationsInput | Date | string
    createdby?: StringFieldUpdateOperationsInput | string
    updatedby?: NullableStringFieldUpdateOperationsInput | string | null
    updatedat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type userCreateInput = {
    id?: string
    firstname: string
    lastname: string
    phone?: string | null
    email: string
    password: string
    appLanguage?: string | null
    learningLanguage?: string | null
    learningLevel?: string | null
    theme?: string | null
    avatar?: string | null
    createdat?: Date | string
    updatedat?: Date | string | null
    status?: number
    lastentranceat?: Date | string | null
    lastexitat?: Date | string | null
    lastloginat?: Date | string | null
    stripeCustomerId?: string | null
    notificationuser?: notificationCreateNestedManyWithoutToInput
    createdapiclients?: apiclientCreateNestedManyWithoutCreateduserInput
    updatedapiclients?: apiclientCreateNestedManyWithoutUpdateduserInput
    createdpermissions?: permissionCreateNestedManyWithoutCreateduserInput
    updatedpermissions?: permissionCreateNestedManyWithoutUpdateduserInput
    refreshtokens?: refreshtokenCreateNestedManyWithoutUserInput
    createdroles?: roleCreateNestedManyWithoutCreateduserInput
    updatedroles?: roleCreateNestedManyWithoutUpdateduserInput
    createdrolepermissions?: rolepermissionCreateNestedManyWithoutCreateduserInput
    updatedrolepermissions?: rolepermissionCreateNestedManyWithoutUpdateduserInput
    createduser: userCreateNestedOneWithoutCreatedusersInput
    createdusers?: userCreateNestedManyWithoutCreateduserInput
    updateduser?: userCreateNestedOneWithoutUpdatedusersInput
    updatedusers?: userCreateNestedManyWithoutUpdateduserInput
    createduserpermissions?: userpermissionCreateNestedManyWithoutCreateduserInput
    updateduserpermissions?: userpermissionCreateNestedManyWithoutUpdateduserInput
    userpermissions?: userpermissionCreateNestedManyWithoutUserInput
    createduserroles?: userroleCreateNestedManyWithoutCreateduserInput
    updateduserroles?: userroleCreateNestedManyWithoutUpdateduserInput
    userroles?: userroleCreateNestedManyWithoutUserInput
    language?: languagesCreateNestedManyWithoutUserInput
    learningProgress?: learningProgressCreateNestedManyWithoutUserInput
    chats?: chatCreateNestedManyWithoutUserInput
    chatRooms?: chatRoomCreateNestedManyWithoutUserInput
    subscriptions?: subscriptionCreateNestedManyWithoutUserInput
  }

  export type userUncheckedCreateInput = {
    id?: string
    firstname: string
    lastname: string
    phone?: string | null
    email: string
    password: string
    appLanguage?: string | null
    learningLanguage?: string | null
    learningLevel?: string | null
    theme?: string | null
    avatar?: string | null
    createdby: string
    createdat?: Date | string
    updatedby?: string | null
    updatedat?: Date | string | null
    status?: number
    lastentranceat?: Date | string | null
    lastexitat?: Date | string | null
    lastloginat?: Date | string | null
    stripeCustomerId?: string | null
    notificationuser?: notificationUncheckedCreateNestedManyWithoutToInput
    createdapiclients?: apiclientUncheckedCreateNestedManyWithoutCreateduserInput
    updatedapiclients?: apiclientUncheckedCreateNestedManyWithoutUpdateduserInput
    createdpermissions?: permissionUncheckedCreateNestedManyWithoutCreateduserInput
    updatedpermissions?: permissionUncheckedCreateNestedManyWithoutUpdateduserInput
    refreshtokens?: refreshtokenUncheckedCreateNestedManyWithoutUserInput
    createdroles?: roleUncheckedCreateNestedManyWithoutCreateduserInput
    updatedroles?: roleUncheckedCreateNestedManyWithoutUpdateduserInput
    createdrolepermissions?: rolepermissionUncheckedCreateNestedManyWithoutCreateduserInput
    updatedrolepermissions?: rolepermissionUncheckedCreateNestedManyWithoutUpdateduserInput
    createdusers?: userUncheckedCreateNestedManyWithoutCreateduserInput
    updatedusers?: userUncheckedCreateNestedManyWithoutUpdateduserInput
    createduserpermissions?: userpermissionUncheckedCreateNestedManyWithoutCreateduserInput
    updateduserpermissions?: userpermissionUncheckedCreateNestedManyWithoutUpdateduserInput
    userpermissions?: userpermissionUncheckedCreateNestedManyWithoutUserInput
    createduserroles?: userroleUncheckedCreateNestedManyWithoutCreateduserInput
    updateduserroles?: userroleUncheckedCreateNestedManyWithoutUpdateduserInput
    userroles?: userroleUncheckedCreateNestedManyWithoutUserInput
    language?: languagesUncheckedCreateNestedManyWithoutUserInput
    learningProgress?: learningProgressUncheckedCreateNestedManyWithoutUserInput
    chats?: chatUncheckedCreateNestedManyWithoutUserInput
    chatRooms?: chatRoomUncheckedCreateNestedManyWithoutUserInput
    subscriptions?: subscriptionUncheckedCreateNestedManyWithoutUserInput
  }

  export type userUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    firstname?: StringFieldUpdateOperationsInput | string
    lastname?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    appLanguage?: NullableStringFieldUpdateOperationsInput | string | null
    learningLanguage?: NullableStringFieldUpdateOperationsInput | string | null
    learningLevel?: NullableStringFieldUpdateOperationsInput | string | null
    theme?: NullableStringFieldUpdateOperationsInput | string | null
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    createdat?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: IntFieldUpdateOperationsInput | number
    lastentranceat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastexitat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastloginat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    stripeCustomerId?: NullableStringFieldUpdateOperationsInput | string | null
    notificationuser?: notificationUpdateManyWithoutToNestedInput
    createdapiclients?: apiclientUpdateManyWithoutCreateduserNestedInput
    updatedapiclients?: apiclientUpdateManyWithoutUpdateduserNestedInput
    createdpermissions?: permissionUpdateManyWithoutCreateduserNestedInput
    updatedpermissions?: permissionUpdateManyWithoutUpdateduserNestedInput
    refreshtokens?: refreshtokenUpdateManyWithoutUserNestedInput
    createdroles?: roleUpdateManyWithoutCreateduserNestedInput
    updatedroles?: roleUpdateManyWithoutUpdateduserNestedInput
    createdrolepermissions?: rolepermissionUpdateManyWithoutCreateduserNestedInput
    updatedrolepermissions?: rolepermissionUpdateManyWithoutUpdateduserNestedInput
    createduser?: userUpdateOneRequiredWithoutCreatedusersNestedInput
    createdusers?: userUpdateManyWithoutCreateduserNestedInput
    updateduser?: userUpdateOneWithoutUpdatedusersNestedInput
    updatedusers?: userUpdateManyWithoutUpdateduserNestedInput
    createduserpermissions?: userpermissionUpdateManyWithoutCreateduserNestedInput
    updateduserpermissions?: userpermissionUpdateManyWithoutUpdateduserNestedInput
    userpermissions?: userpermissionUpdateManyWithoutUserNestedInput
    createduserroles?: userroleUpdateManyWithoutCreateduserNestedInput
    updateduserroles?: userroleUpdateManyWithoutUpdateduserNestedInput
    userroles?: userroleUpdateManyWithoutUserNestedInput
    language?: languagesUpdateManyWithoutUserNestedInput
    learningProgress?: learningProgressUpdateManyWithoutUserNestedInput
    chats?: chatUpdateManyWithoutUserNestedInput
    chatRooms?: chatRoomUpdateManyWithoutUserNestedInput
    subscriptions?: subscriptionUpdateManyWithoutUserNestedInput
  }

  export type userUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    firstname?: StringFieldUpdateOperationsInput | string
    lastname?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    appLanguage?: NullableStringFieldUpdateOperationsInput | string | null
    learningLanguage?: NullableStringFieldUpdateOperationsInput | string | null
    learningLevel?: NullableStringFieldUpdateOperationsInput | string | null
    theme?: NullableStringFieldUpdateOperationsInput | string | null
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    createdby?: StringFieldUpdateOperationsInput | string
    createdat?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedby?: NullableStringFieldUpdateOperationsInput | string | null
    updatedat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: IntFieldUpdateOperationsInput | number
    lastentranceat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastexitat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastloginat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    stripeCustomerId?: NullableStringFieldUpdateOperationsInput | string | null
    notificationuser?: notificationUncheckedUpdateManyWithoutToNestedInput
    createdapiclients?: apiclientUncheckedUpdateManyWithoutCreateduserNestedInput
    updatedapiclients?: apiclientUncheckedUpdateManyWithoutUpdateduserNestedInput
    createdpermissions?: permissionUncheckedUpdateManyWithoutCreateduserNestedInput
    updatedpermissions?: permissionUncheckedUpdateManyWithoutUpdateduserNestedInput
    refreshtokens?: refreshtokenUncheckedUpdateManyWithoutUserNestedInput
    createdroles?: roleUncheckedUpdateManyWithoutCreateduserNestedInput
    updatedroles?: roleUncheckedUpdateManyWithoutUpdateduserNestedInput
    createdrolepermissions?: rolepermissionUncheckedUpdateManyWithoutCreateduserNestedInput
    updatedrolepermissions?: rolepermissionUncheckedUpdateManyWithoutUpdateduserNestedInput
    createdusers?: userUncheckedUpdateManyWithoutCreateduserNestedInput
    updatedusers?: userUncheckedUpdateManyWithoutUpdateduserNestedInput
    createduserpermissions?: userpermissionUncheckedUpdateManyWithoutCreateduserNestedInput
    updateduserpermissions?: userpermissionUncheckedUpdateManyWithoutUpdateduserNestedInput
    userpermissions?: userpermissionUncheckedUpdateManyWithoutUserNestedInput
    createduserroles?: userroleUncheckedUpdateManyWithoutCreateduserNestedInput
    updateduserroles?: userroleUncheckedUpdateManyWithoutUpdateduserNestedInput
    userroles?: userroleUncheckedUpdateManyWithoutUserNestedInput
    language?: languagesUncheckedUpdateManyWithoutUserNestedInput
    learningProgress?: learningProgressUncheckedUpdateManyWithoutUserNestedInput
    chats?: chatUncheckedUpdateManyWithoutUserNestedInput
    chatRooms?: chatRoomUncheckedUpdateManyWithoutUserNestedInput
    subscriptions?: subscriptionUncheckedUpdateManyWithoutUserNestedInput
  }

  export type userCreateManyInput = {
    id?: string
    firstname: string
    lastname: string
    phone?: string | null
    email: string
    password: string
    appLanguage?: string | null
    learningLanguage?: string | null
    learningLevel?: string | null
    theme?: string | null
    avatar?: string | null
    createdby: string
    createdat?: Date | string
    updatedby?: string | null
    updatedat?: Date | string | null
    status?: number
    lastentranceat?: Date | string | null
    lastexitat?: Date | string | null
    lastloginat?: Date | string | null
    stripeCustomerId?: string | null
  }

  export type userUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    firstname?: StringFieldUpdateOperationsInput | string
    lastname?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    appLanguage?: NullableStringFieldUpdateOperationsInput | string | null
    learningLanguage?: NullableStringFieldUpdateOperationsInput | string | null
    learningLevel?: NullableStringFieldUpdateOperationsInput | string | null
    theme?: NullableStringFieldUpdateOperationsInput | string | null
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    createdat?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: IntFieldUpdateOperationsInput | number
    lastentranceat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastexitat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastloginat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    stripeCustomerId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type userUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    firstname?: StringFieldUpdateOperationsInput | string
    lastname?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    appLanguage?: NullableStringFieldUpdateOperationsInput | string | null
    learningLanguage?: NullableStringFieldUpdateOperationsInput | string | null
    learningLevel?: NullableStringFieldUpdateOperationsInput | string | null
    theme?: NullableStringFieldUpdateOperationsInput | string | null
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    createdby?: StringFieldUpdateOperationsInput | string
    createdat?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedby?: NullableStringFieldUpdateOperationsInput | string | null
    updatedat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: IntFieldUpdateOperationsInput | number
    lastentranceat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastexitat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastloginat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    stripeCustomerId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type userpermissionCreateInput = {
    id?: string
    createdat?: Date | string
    updatedat?: Date | string | null
    createduser: userCreateNestedOneWithoutCreateduserpermissionsInput
    permission: permissionCreateNestedOneWithoutUserpermissionsInput
    updateduser?: userCreateNestedOneWithoutUpdateduserpermissionsInput
    user: userCreateNestedOneWithoutUserpermissionsInput
  }

  export type userpermissionUncheckedCreateInput = {
    id?: string
    userid: string
    permissionid: string
    createdby: string
    createdat?: Date | string
    updatedby?: string | null
    updatedat?: Date | string | null
  }

  export type userpermissionUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdat?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createduser?: userUpdateOneRequiredWithoutCreateduserpermissionsNestedInput
    permission?: permissionUpdateOneRequiredWithoutUserpermissionsNestedInput
    updateduser?: userUpdateOneWithoutUpdateduserpermissionsNestedInput
    user?: userUpdateOneRequiredWithoutUserpermissionsNestedInput
  }

  export type userpermissionUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    userid?: StringFieldUpdateOperationsInput | string
    permissionid?: StringFieldUpdateOperationsInput | string
    createdby?: StringFieldUpdateOperationsInput | string
    createdat?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedby?: NullableStringFieldUpdateOperationsInput | string | null
    updatedat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type userpermissionCreateManyInput = {
    id?: string
    userid: string
    permissionid: string
    createdby: string
    createdat?: Date | string
    updatedby?: string | null
    updatedat?: Date | string | null
  }

  export type userpermissionUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdat?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type userpermissionUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    userid?: StringFieldUpdateOperationsInput | string
    permissionid?: StringFieldUpdateOperationsInput | string
    createdby?: StringFieldUpdateOperationsInput | string
    createdat?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedby?: NullableStringFieldUpdateOperationsInput | string | null
    updatedat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type userroleCreateInput = {
    id?: string
    createdat?: Date | string
    updatedat?: Date | string | null
    createduser: userCreateNestedOneWithoutCreateduserrolesInput
    role: roleCreateNestedOneWithoutUserrolesInput
    updateduser?: userCreateNestedOneWithoutUpdateduserrolesInput
    user: userCreateNestedOneWithoutUserrolesInput
  }

  export type userroleUncheckedCreateInput = {
    id?: string
    userid: string
    roleid: string
    createdby: string
    createdat?: Date | string
    updatedby?: string | null
    updatedat?: Date | string | null
  }

  export type userroleUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdat?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createduser?: userUpdateOneRequiredWithoutCreateduserrolesNestedInput
    role?: roleUpdateOneRequiredWithoutUserrolesNestedInput
    updateduser?: userUpdateOneWithoutUpdateduserrolesNestedInput
    user?: userUpdateOneRequiredWithoutUserrolesNestedInput
  }

  export type userroleUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    userid?: StringFieldUpdateOperationsInput | string
    roleid?: StringFieldUpdateOperationsInput | string
    createdby?: StringFieldUpdateOperationsInput | string
    createdat?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedby?: NullableStringFieldUpdateOperationsInput | string | null
    updatedat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type userroleCreateManyInput = {
    id?: string
    userid: string
    roleid: string
    createdby: string
    createdat?: Date | string
    updatedby?: string | null
    updatedat?: Date | string | null
  }

  export type userroleUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdat?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type userroleUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    userid?: StringFieldUpdateOperationsInput | string
    roleid?: StringFieldUpdateOperationsInput | string
    createdby?: StringFieldUpdateOperationsInput | string
    createdat?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedby?: NullableStringFieldUpdateOperationsInput | string | null
    updatedat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type StringFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringFilter<$PrismaModel> | string
  }

  export type BoolFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolFilter<$PrismaModel> | boolean
  }

  export type PackagesScalarRelationFilter = {
    is?: packagesWhereInput
    isNot?: packagesWhereInput
  }

  export type packageFeatureCountOrderByAggregateInput = {
    id?: SortOrder
    feature?: SortOrder
    available?: SortOrder
    packageId?: SortOrder
  }

  export type packageFeatureMaxOrderByAggregateInput = {
    id?: SortOrder
    feature?: SortOrder
    available?: SortOrder
    packageId?: SortOrder
  }

  export type packageFeatureMinOrderByAggregateInput = {
    id?: SortOrder
    feature?: SortOrder
    available?: SortOrder
    packageId?: SortOrder
  }

  export type StringWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type BoolWithAggregatesFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolWithAggregatesFilter<$PrismaModel> | boolean
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedBoolFilter<$PrismaModel>
    _max?: NestedBoolFilter<$PrismaModel>
  }

  export type EnumdurationFilter<$PrismaModel = never> = {
    equals?: $Enums.duration | EnumdurationFieldRefInput<$PrismaModel>
    in?: $Enums.duration[] | ListEnumdurationFieldRefInput<$PrismaModel>
    notIn?: $Enums.duration[] | ListEnumdurationFieldRefInput<$PrismaModel>
    not?: NestedEnumdurationFilter<$PrismaModel> | $Enums.duration
  }

  export type StringNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringNullableFilter<$PrismaModel> | string | null
  }

  export type DateTimeFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeFilter<$PrismaModel> | Date | string
  }

  export type PackageFeatureListRelationFilter = {
    every?: packageFeatureWhereInput
    some?: packageFeatureWhereInput
    none?: packageFeatureWhereInput
  }

  export type PriceListRelationFilter = {
    every?: priceWhereInput
    some?: priceWhereInput
    none?: priceWhereInput
  }

  export type SubscriptionListRelationFilter = {
    every?: subscriptionWhereInput
    some?: subscriptionWhereInput
    none?: subscriptionWhereInput
  }

  export type SortOrderInput = {
    sort: SortOrder
    nulls?: NullsOrder
  }

  export type packageFeatureOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type priceOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type subscriptionOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type packagesCountOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    description?: SortOrder
    icon?: SortOrder
    duration?: SortOrder
    popular?: SortOrder
    highlightColor?: SortOrder
    savings?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type packagesMaxOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    description?: SortOrder
    icon?: SortOrder
    duration?: SortOrder
    popular?: SortOrder
    highlightColor?: SortOrder
    savings?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type packagesMinOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    description?: SortOrder
    icon?: SortOrder
    duration?: SortOrder
    popular?: SortOrder
    highlightColor?: SortOrder
    savings?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type EnumdurationWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.duration | EnumdurationFieldRefInput<$PrismaModel>
    in?: $Enums.duration[] | ListEnumdurationFieldRefInput<$PrismaModel>
    notIn?: $Enums.duration[] | ListEnumdurationFieldRefInput<$PrismaModel>
    not?: NestedEnumdurationWithAggregatesFilter<$PrismaModel> | $Enums.duration
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumdurationFilter<$PrismaModel>
    _max?: NestedEnumdurationFilter<$PrismaModel>
  }

  export type StringNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
  }

  export type DateTimeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeWithAggregatesFilter<$PrismaModel> | Date | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedDateTimeFilter<$PrismaModel>
    _max?: NestedDateTimeFilter<$PrismaModel>
  }

  export type EnumCurrencyFilter<$PrismaModel = never> = {
    equals?: $Enums.Currency | EnumCurrencyFieldRefInput<$PrismaModel>
    in?: $Enums.Currency[] | ListEnumCurrencyFieldRefInput<$PrismaModel>
    notIn?: $Enums.Currency[] | ListEnumCurrencyFieldRefInput<$PrismaModel>
    not?: NestedEnumCurrencyFilter<$PrismaModel> | $Enums.Currency
  }

  export type DecimalFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel>
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel>
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string
  }

  export type priceCountOrderByAggregateInput = {
    id?: SortOrder
    currency?: SortOrder
    amount?: SortOrder
    packageId?: SortOrder
  }

  export type priceAvgOrderByAggregateInput = {
    amount?: SortOrder
  }

  export type priceMaxOrderByAggregateInput = {
    id?: SortOrder
    currency?: SortOrder
    amount?: SortOrder
    packageId?: SortOrder
  }

  export type priceMinOrderByAggregateInput = {
    id?: SortOrder
    currency?: SortOrder
    amount?: SortOrder
    packageId?: SortOrder
  }

  export type priceSumOrderByAggregateInput = {
    amount?: SortOrder
  }

  export type EnumCurrencyWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.Currency | EnumCurrencyFieldRefInput<$PrismaModel>
    in?: $Enums.Currency[] | ListEnumCurrencyFieldRefInput<$PrismaModel>
    notIn?: $Enums.Currency[] | ListEnumCurrencyFieldRefInput<$PrismaModel>
    not?: NestedEnumCurrencyWithAggregatesFilter<$PrismaModel> | $Enums.Currency
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumCurrencyFilter<$PrismaModel>
    _max?: NestedEnumCurrencyFilter<$PrismaModel>
  }

  export type DecimalWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel>
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel>
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalWithAggregatesFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedDecimalFilter<$PrismaModel>
    _sum?: NestedDecimalFilter<$PrismaModel>
    _min?: NestedDecimalFilter<$PrismaModel>
    _max?: NestedDecimalFilter<$PrismaModel>
  }

  export type EnumSubscriptionStatusFilter<$PrismaModel = never> = {
    equals?: $Enums.SubscriptionStatus | EnumSubscriptionStatusFieldRefInput<$PrismaModel>
    in?: $Enums.SubscriptionStatus[] | ListEnumSubscriptionStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.SubscriptionStatus[] | ListEnumSubscriptionStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumSubscriptionStatusFilter<$PrismaModel> | $Enums.SubscriptionStatus
  }

  export type UserScalarRelationFilter = {
    is?: userWhereInput
    isNot?: userWhereInput
  }

  export type subscriptionCountOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    packageId?: SortOrder
    startDate?: SortOrder
    endDate?: SortOrder
    status?: SortOrder
    lastPaymentStatus?: SortOrder
    stripeCustomerId?: SortOrder
    stripePaymentId?: SortOrder
    stripePriceId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type subscriptionMaxOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    packageId?: SortOrder
    startDate?: SortOrder
    endDate?: SortOrder
    status?: SortOrder
    lastPaymentStatus?: SortOrder
    stripeCustomerId?: SortOrder
    stripePaymentId?: SortOrder
    stripePriceId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type subscriptionMinOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    packageId?: SortOrder
    startDate?: SortOrder
    endDate?: SortOrder
    status?: SortOrder
    lastPaymentStatus?: SortOrder
    stripeCustomerId?: SortOrder
    stripePaymentId?: SortOrder
    stripePriceId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type EnumSubscriptionStatusWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.SubscriptionStatus | EnumSubscriptionStatusFieldRefInput<$PrismaModel>
    in?: $Enums.SubscriptionStatus[] | ListEnumSubscriptionStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.SubscriptionStatus[] | ListEnumSubscriptionStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumSubscriptionStatusWithAggregatesFilter<$PrismaModel> | $Enums.SubscriptionStatus
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumSubscriptionStatusFilter<$PrismaModel>
    _max?: NestedEnumSubscriptionStatusFilter<$PrismaModel>
  }

  export type DateTimeNullableFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableFilter<$PrismaModel> | Date | string | null
  }

  export type ChatListRelationFilter = {
    every?: chatWhereInput
    some?: chatWhereInput
    none?: chatWhereInput
  }

  export type chatOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type chatRoomCountOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    title?: SortOrder
    language?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type chatRoomMaxOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    title?: SortOrder
    language?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type chatRoomMinOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    title?: SortOrder
    language?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type DateTimeNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableWithAggregatesFilter<$PrismaModel> | Date | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedDateTimeNullableFilter<$PrismaModel>
    _max?: NestedDateTimeNullableFilter<$PrismaModel>
  }

  export type ChatRoomScalarRelationFilter = {
    is?: chatRoomWhereInput
    isNot?: chatRoomWhereInput
  }

  export type chatCountOrderByAggregateInput = {
    id?: SortOrder
    roomId?: SortOrder
    userId?: SortOrder
    message?: SortOrder
    role?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type chatMaxOrderByAggregateInput = {
    id?: SortOrder
    roomId?: SortOrder
    userId?: SortOrder
    message?: SortOrder
    role?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type chatMinOrderByAggregateInput = {
    id?: SortOrder
    roomId?: SortOrder
    userId?: SortOrder
    message?: SortOrder
    role?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type IntFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntFilter<$PrismaModel> | number
  }

  export type LanguagesScalarRelationFilter = {
    is?: languagesWhereInput
    isNot?: languagesWhereInput
  }

  export type learningProgressCountOrderByAggregateInput = {
    id?: SortOrder
    userid?: SortOrder
    languageID?: SortOrder
    progress?: SortOrder
    createdat?: SortOrder
    updatedat?: SortOrder
  }

  export type learningProgressAvgOrderByAggregateInput = {
    progress?: SortOrder
  }

  export type learningProgressMaxOrderByAggregateInput = {
    id?: SortOrder
    userid?: SortOrder
    languageID?: SortOrder
    progress?: SortOrder
    createdat?: SortOrder
    updatedat?: SortOrder
  }

  export type learningProgressMinOrderByAggregateInput = {
    id?: SortOrder
    userid?: SortOrder
    languageID?: SortOrder
    progress?: SortOrder
    createdat?: SortOrder
    updatedat?: SortOrder
  }

  export type learningProgressSumOrderByAggregateInput = {
    progress?: SortOrder
  }

  export type IntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedIntFilter<$PrismaModel>
    _min?: NestedIntFilter<$PrismaModel>
    _max?: NestedIntFilter<$PrismaModel>
  }

  export type LearningProgressListRelationFilter = {
    every?: learningProgressWhereInput
    some?: learningProgressWhereInput
    none?: learningProgressWhereInput
  }

  export type UserListRelationFilter = {
    every?: userWhereInput
    some?: userWhereInput
    none?: userWhereInput
  }

  export type learningProgressOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type userOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type languagesCountOrderByAggregateInput = {
    id?: SortOrder
    flag?: SortOrder
    name?: SortOrder
    code?: SortOrder
  }

  export type languagesMaxOrderByAggregateInput = {
    id?: SortOrder
    flag?: SortOrder
    name?: SortOrder
    code?: SortOrder
  }

  export type languagesMinOrderByAggregateInput = {
    id?: SortOrder
    flag?: SortOrder
    name?: SortOrder
    code?: SortOrder
  }

  export type entranceCountOrderByAggregateInput = {
    id?: SortOrder
    type?: SortOrder
    useragent?: SortOrder
    ipaddress?: SortOrder
    userid?: SortOrder
    createdat?: SortOrder
  }

  export type entranceAvgOrderByAggregateInput = {
    type?: SortOrder
  }

  export type entranceMaxOrderByAggregateInput = {
    id?: SortOrder
    type?: SortOrder
    useragent?: SortOrder
    ipaddress?: SortOrder
    userid?: SortOrder
    createdat?: SortOrder
  }

  export type entranceMinOrderByAggregateInput = {
    id?: SortOrder
    type?: SortOrder
    useragent?: SortOrder
    ipaddress?: SortOrder
    userid?: SortOrder
    createdat?: SortOrder
  }

  export type entranceSumOrderByAggregateInput = {
    type?: SortOrder
  }

  export type UserNullableScalarRelationFilter = {
    is?: userWhereInput | null
    isNot?: userWhereInput | null
  }

  export type apiclientCountOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    key?: SortOrder
    secret?: SortOrder
    type?: SortOrder
    createdat?: SortOrder
    createdby?: SortOrder
    updatedat?: SortOrder
    updatedby?: SortOrder
    isactive?: SortOrder
  }

  export type apiclientAvgOrderByAggregateInput = {
    type?: SortOrder
  }

  export type apiclientMaxOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    key?: SortOrder
    secret?: SortOrder
    type?: SortOrder
    createdat?: SortOrder
    createdby?: SortOrder
    updatedat?: SortOrder
    updatedby?: SortOrder
    isactive?: SortOrder
  }

  export type apiclientMinOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    key?: SortOrder
    secret?: SortOrder
    type?: SortOrder
    createdat?: SortOrder
    createdby?: SortOrder
    updatedat?: SortOrder
    updatedby?: SortOrder
    isactive?: SortOrder
  }

  export type apiclientSumOrderByAggregateInput = {
    type?: SortOrder
  }

  export type refreshtokenCountOrderByAggregateInput = {
    id?: SortOrder
    userid?: SortOrder
    token?: SortOrder
    createdat?: SortOrder
    updatedat?: SortOrder
    expiresat?: SortOrder
  }

  export type refreshtokenMaxOrderByAggregateInput = {
    id?: SortOrder
    userid?: SortOrder
    token?: SortOrder
    createdat?: SortOrder
    updatedat?: SortOrder
    expiresat?: SortOrder
  }

  export type refreshtokenMinOrderByAggregateInput = {
    id?: SortOrder
    userid?: SortOrder
    token?: SortOrder
    createdat?: SortOrder
    updatedat?: SortOrder
    expiresat?: SortOrder
  }

  export type revokedtokenCountOrderByAggregateInput = {
    id?: SortOrder
    token?: SortOrder
    date?: SortOrder
  }

  export type revokedtokenMaxOrderByAggregateInput = {
    id?: SortOrder
    token?: SortOrder
    date?: SortOrder
  }

  export type revokedtokenMinOrderByAggregateInput = {
    id?: SortOrder
    token?: SortOrder
    date?: SortOrder
  }

  export type RolepermissionListRelationFilter = {
    every?: rolepermissionWhereInput
    some?: rolepermissionWhereInput
    none?: rolepermissionWhereInput
  }

  export type UserroleListRelationFilter = {
    every?: userroleWhereInput
    some?: userroleWhereInput
    none?: userroleWhereInput
  }

  export type rolepermissionOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type userroleOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type roleCountOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    createdby?: SortOrder
    createdat?: SortOrder
    updatedby?: SortOrder
    updatedat?: SortOrder
    issystemrole?: SortOrder
  }

  export type roleMaxOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    createdby?: SortOrder
    createdat?: SortOrder
    updatedby?: SortOrder
    updatedat?: SortOrder
    issystemrole?: SortOrder
  }

  export type roleMinOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    createdby?: SortOrder
    createdat?: SortOrder
    updatedby?: SortOrder
    updatedat?: SortOrder
    issystemrole?: SortOrder
  }

  export type notificationCountOrderByAggregateInput = {
    id?: SortOrder
    touserid?: SortOrder
    message?: SortOrder
    url?: SortOrder
    createdby?: SortOrder
    createdat?: SortOrder
    readedat?: SortOrder
  }

  export type notificationAvgOrderByAggregateInput = {
    createdby?: SortOrder
  }

  export type notificationMaxOrderByAggregateInput = {
    id?: SortOrder
    touserid?: SortOrder
    message?: SortOrder
    url?: SortOrder
    createdby?: SortOrder
    createdat?: SortOrder
    readedat?: SortOrder
  }

  export type notificationMinOrderByAggregateInput = {
    id?: SortOrder
    touserid?: SortOrder
    message?: SortOrder
    url?: SortOrder
    createdby?: SortOrder
    createdat?: SortOrder
    readedat?: SortOrder
  }

  export type notificationSumOrderByAggregateInput = {
    createdby?: SortOrder
  }

  export type UserpermissionListRelationFilter = {
    every?: userpermissionWhereInput
    some?: userpermissionWhereInput
    none?: userpermissionWhereInput
  }

  export type userpermissionOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type permissionCountOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    value?: SortOrder
    group?: SortOrder
    description?: SortOrder
    createdby?: SortOrder
    createdat?: SortOrder
    updatedby?: SortOrder
    updatedat?: SortOrder
  }

  export type permissionMaxOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    value?: SortOrder
    group?: SortOrder
    description?: SortOrder
    createdby?: SortOrder
    createdat?: SortOrder
    updatedby?: SortOrder
    updatedat?: SortOrder
  }

  export type permissionMinOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    value?: SortOrder
    group?: SortOrder
    description?: SortOrder
    createdby?: SortOrder
    createdat?: SortOrder
    updatedby?: SortOrder
    updatedat?: SortOrder
  }

  export type PermissionScalarRelationFilter = {
    is?: permissionWhereInput
    isNot?: permissionWhereInput
  }

  export type RoleScalarRelationFilter = {
    is?: roleWhereInput
    isNot?: roleWhereInput
  }

  export type rolepermissionCountOrderByAggregateInput = {
    id?: SortOrder
    roleid?: SortOrder
    permissionid?: SortOrder
    createdat?: SortOrder
    createdby?: SortOrder
    updatedby?: SortOrder
    updatedat?: SortOrder
  }

  export type rolepermissionMaxOrderByAggregateInput = {
    id?: SortOrder
    roleid?: SortOrder
    permissionid?: SortOrder
    createdat?: SortOrder
    createdby?: SortOrder
    updatedby?: SortOrder
    updatedat?: SortOrder
  }

  export type rolepermissionMinOrderByAggregateInput = {
    id?: SortOrder
    roleid?: SortOrder
    permissionid?: SortOrder
    createdat?: SortOrder
    createdby?: SortOrder
    updatedby?: SortOrder
    updatedat?: SortOrder
  }

  export type NotificationListRelationFilter = {
    every?: notificationWhereInput
    some?: notificationWhereInput
    none?: notificationWhereInput
  }

  export type ApiclientListRelationFilter = {
    every?: apiclientWhereInput
    some?: apiclientWhereInput
    none?: apiclientWhereInput
  }

  export type PermissionListRelationFilter = {
    every?: permissionWhereInput
    some?: permissionWhereInput
    none?: permissionWhereInput
  }

  export type RefreshtokenListRelationFilter = {
    every?: refreshtokenWhereInput
    some?: refreshtokenWhereInput
    none?: refreshtokenWhereInput
  }

  export type RoleListRelationFilter = {
    every?: roleWhereInput
    some?: roleWhereInput
    none?: roleWhereInput
  }

  export type LanguagesListRelationFilter = {
    every?: languagesWhereInput
    some?: languagesWhereInput
    none?: languagesWhereInput
  }

  export type ChatRoomListRelationFilter = {
    every?: chatRoomWhereInput
    some?: chatRoomWhereInput
    none?: chatRoomWhereInput
  }

  export type notificationOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type apiclientOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type permissionOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type refreshtokenOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type roleOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type languagesOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type chatRoomOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type userCountOrderByAggregateInput = {
    id?: SortOrder
    firstname?: SortOrder
    lastname?: SortOrder
    phone?: SortOrder
    email?: SortOrder
    password?: SortOrder
    appLanguage?: SortOrder
    learningLanguage?: SortOrder
    learningLevel?: SortOrder
    theme?: SortOrder
    avatar?: SortOrder
    createdby?: SortOrder
    createdat?: SortOrder
    updatedby?: SortOrder
    updatedat?: SortOrder
    status?: SortOrder
    lastentranceat?: SortOrder
    lastexitat?: SortOrder
    lastloginat?: SortOrder
    stripeCustomerId?: SortOrder
  }

  export type userAvgOrderByAggregateInput = {
    status?: SortOrder
  }

  export type userMaxOrderByAggregateInput = {
    id?: SortOrder
    firstname?: SortOrder
    lastname?: SortOrder
    phone?: SortOrder
    email?: SortOrder
    password?: SortOrder
    appLanguage?: SortOrder
    learningLanguage?: SortOrder
    learningLevel?: SortOrder
    theme?: SortOrder
    avatar?: SortOrder
    createdby?: SortOrder
    createdat?: SortOrder
    updatedby?: SortOrder
    updatedat?: SortOrder
    status?: SortOrder
    lastentranceat?: SortOrder
    lastexitat?: SortOrder
    lastloginat?: SortOrder
    stripeCustomerId?: SortOrder
  }

  export type userMinOrderByAggregateInput = {
    id?: SortOrder
    firstname?: SortOrder
    lastname?: SortOrder
    phone?: SortOrder
    email?: SortOrder
    password?: SortOrder
    appLanguage?: SortOrder
    learningLanguage?: SortOrder
    learningLevel?: SortOrder
    theme?: SortOrder
    avatar?: SortOrder
    createdby?: SortOrder
    createdat?: SortOrder
    updatedby?: SortOrder
    updatedat?: SortOrder
    status?: SortOrder
    lastentranceat?: SortOrder
    lastexitat?: SortOrder
    lastloginat?: SortOrder
    stripeCustomerId?: SortOrder
  }

  export type userSumOrderByAggregateInput = {
    status?: SortOrder
  }

  export type userpermissionCountOrderByAggregateInput = {
    id?: SortOrder
    userid?: SortOrder
    permissionid?: SortOrder
    createdby?: SortOrder
    createdat?: SortOrder
    updatedby?: SortOrder
    updatedat?: SortOrder
  }

  export type userpermissionMaxOrderByAggregateInput = {
    id?: SortOrder
    userid?: SortOrder
    permissionid?: SortOrder
    createdby?: SortOrder
    createdat?: SortOrder
    updatedby?: SortOrder
    updatedat?: SortOrder
  }

  export type userpermissionMinOrderByAggregateInput = {
    id?: SortOrder
    userid?: SortOrder
    permissionid?: SortOrder
    createdby?: SortOrder
    createdat?: SortOrder
    updatedby?: SortOrder
    updatedat?: SortOrder
  }

  export type userroleCountOrderByAggregateInput = {
    id?: SortOrder
    userid?: SortOrder
    roleid?: SortOrder
    createdby?: SortOrder
    createdat?: SortOrder
    updatedby?: SortOrder
    updatedat?: SortOrder
  }

  export type userroleMaxOrderByAggregateInput = {
    id?: SortOrder
    userid?: SortOrder
    roleid?: SortOrder
    createdby?: SortOrder
    createdat?: SortOrder
    updatedby?: SortOrder
    updatedat?: SortOrder
  }

  export type userroleMinOrderByAggregateInput = {
    id?: SortOrder
    userid?: SortOrder
    roleid?: SortOrder
    createdby?: SortOrder
    createdat?: SortOrder
    updatedby?: SortOrder
    updatedat?: SortOrder
  }

  export type packagesCreateNestedOneWithoutFeaturesInput = {
    create?: XOR<packagesCreateWithoutFeaturesInput, packagesUncheckedCreateWithoutFeaturesInput>
    connectOrCreate?: packagesCreateOrConnectWithoutFeaturesInput
    connect?: packagesWhereUniqueInput
  }

  export type StringFieldUpdateOperationsInput = {
    set?: string
  }

  export type BoolFieldUpdateOperationsInput = {
    set?: boolean
  }

  export type packagesUpdateOneRequiredWithoutFeaturesNestedInput = {
    create?: XOR<packagesCreateWithoutFeaturesInput, packagesUncheckedCreateWithoutFeaturesInput>
    connectOrCreate?: packagesCreateOrConnectWithoutFeaturesInput
    upsert?: packagesUpsertWithoutFeaturesInput
    connect?: packagesWhereUniqueInput
    update?: XOR<XOR<packagesUpdateToOneWithWhereWithoutFeaturesInput, packagesUpdateWithoutFeaturesInput>, packagesUncheckedUpdateWithoutFeaturesInput>
  }

  export type packageFeatureCreateNestedManyWithoutPackageInput = {
    create?: XOR<packageFeatureCreateWithoutPackageInput, packageFeatureUncheckedCreateWithoutPackageInput> | packageFeatureCreateWithoutPackageInput[] | packageFeatureUncheckedCreateWithoutPackageInput[]
    connectOrCreate?: packageFeatureCreateOrConnectWithoutPackageInput | packageFeatureCreateOrConnectWithoutPackageInput[]
    createMany?: packageFeatureCreateManyPackageInputEnvelope
    connect?: packageFeatureWhereUniqueInput | packageFeatureWhereUniqueInput[]
  }

  export type priceCreateNestedManyWithoutPackageInput = {
    create?: XOR<priceCreateWithoutPackageInput, priceUncheckedCreateWithoutPackageInput> | priceCreateWithoutPackageInput[] | priceUncheckedCreateWithoutPackageInput[]
    connectOrCreate?: priceCreateOrConnectWithoutPackageInput | priceCreateOrConnectWithoutPackageInput[]
    createMany?: priceCreateManyPackageInputEnvelope
    connect?: priceWhereUniqueInput | priceWhereUniqueInput[]
  }

  export type subscriptionCreateNestedManyWithoutPackageInput = {
    create?: XOR<subscriptionCreateWithoutPackageInput, subscriptionUncheckedCreateWithoutPackageInput> | subscriptionCreateWithoutPackageInput[] | subscriptionUncheckedCreateWithoutPackageInput[]
    connectOrCreate?: subscriptionCreateOrConnectWithoutPackageInput | subscriptionCreateOrConnectWithoutPackageInput[]
    createMany?: subscriptionCreateManyPackageInputEnvelope
    connect?: subscriptionWhereUniqueInput | subscriptionWhereUniqueInput[]
  }

  export type packageFeatureUncheckedCreateNestedManyWithoutPackageInput = {
    create?: XOR<packageFeatureCreateWithoutPackageInput, packageFeatureUncheckedCreateWithoutPackageInput> | packageFeatureCreateWithoutPackageInput[] | packageFeatureUncheckedCreateWithoutPackageInput[]
    connectOrCreate?: packageFeatureCreateOrConnectWithoutPackageInput | packageFeatureCreateOrConnectWithoutPackageInput[]
    createMany?: packageFeatureCreateManyPackageInputEnvelope
    connect?: packageFeatureWhereUniqueInput | packageFeatureWhereUniqueInput[]
  }

  export type priceUncheckedCreateNestedManyWithoutPackageInput = {
    create?: XOR<priceCreateWithoutPackageInput, priceUncheckedCreateWithoutPackageInput> | priceCreateWithoutPackageInput[] | priceUncheckedCreateWithoutPackageInput[]
    connectOrCreate?: priceCreateOrConnectWithoutPackageInput | priceCreateOrConnectWithoutPackageInput[]
    createMany?: priceCreateManyPackageInputEnvelope
    connect?: priceWhereUniqueInput | priceWhereUniqueInput[]
  }

  export type subscriptionUncheckedCreateNestedManyWithoutPackageInput = {
    create?: XOR<subscriptionCreateWithoutPackageInput, subscriptionUncheckedCreateWithoutPackageInput> | subscriptionCreateWithoutPackageInput[] | subscriptionUncheckedCreateWithoutPackageInput[]
    connectOrCreate?: subscriptionCreateOrConnectWithoutPackageInput | subscriptionCreateOrConnectWithoutPackageInput[]
    createMany?: subscriptionCreateManyPackageInputEnvelope
    connect?: subscriptionWhereUniqueInput | subscriptionWhereUniqueInput[]
  }

  export type EnumdurationFieldUpdateOperationsInput = {
    set?: $Enums.duration
  }

  export type NullableStringFieldUpdateOperationsInput = {
    set?: string | null
  }

  export type DateTimeFieldUpdateOperationsInput = {
    set?: Date | string
  }

  export type packageFeatureUpdateManyWithoutPackageNestedInput = {
    create?: XOR<packageFeatureCreateWithoutPackageInput, packageFeatureUncheckedCreateWithoutPackageInput> | packageFeatureCreateWithoutPackageInput[] | packageFeatureUncheckedCreateWithoutPackageInput[]
    connectOrCreate?: packageFeatureCreateOrConnectWithoutPackageInput | packageFeatureCreateOrConnectWithoutPackageInput[]
    upsert?: packageFeatureUpsertWithWhereUniqueWithoutPackageInput | packageFeatureUpsertWithWhereUniqueWithoutPackageInput[]
    createMany?: packageFeatureCreateManyPackageInputEnvelope
    set?: packageFeatureWhereUniqueInput | packageFeatureWhereUniqueInput[]
    disconnect?: packageFeatureWhereUniqueInput | packageFeatureWhereUniqueInput[]
    delete?: packageFeatureWhereUniqueInput | packageFeatureWhereUniqueInput[]
    connect?: packageFeatureWhereUniqueInput | packageFeatureWhereUniqueInput[]
    update?: packageFeatureUpdateWithWhereUniqueWithoutPackageInput | packageFeatureUpdateWithWhereUniqueWithoutPackageInput[]
    updateMany?: packageFeatureUpdateManyWithWhereWithoutPackageInput | packageFeatureUpdateManyWithWhereWithoutPackageInput[]
    deleteMany?: packageFeatureScalarWhereInput | packageFeatureScalarWhereInput[]
  }

  export type priceUpdateManyWithoutPackageNestedInput = {
    create?: XOR<priceCreateWithoutPackageInput, priceUncheckedCreateWithoutPackageInput> | priceCreateWithoutPackageInput[] | priceUncheckedCreateWithoutPackageInput[]
    connectOrCreate?: priceCreateOrConnectWithoutPackageInput | priceCreateOrConnectWithoutPackageInput[]
    upsert?: priceUpsertWithWhereUniqueWithoutPackageInput | priceUpsertWithWhereUniqueWithoutPackageInput[]
    createMany?: priceCreateManyPackageInputEnvelope
    set?: priceWhereUniqueInput | priceWhereUniqueInput[]
    disconnect?: priceWhereUniqueInput | priceWhereUniqueInput[]
    delete?: priceWhereUniqueInput | priceWhereUniqueInput[]
    connect?: priceWhereUniqueInput | priceWhereUniqueInput[]
    update?: priceUpdateWithWhereUniqueWithoutPackageInput | priceUpdateWithWhereUniqueWithoutPackageInput[]
    updateMany?: priceUpdateManyWithWhereWithoutPackageInput | priceUpdateManyWithWhereWithoutPackageInput[]
    deleteMany?: priceScalarWhereInput | priceScalarWhereInput[]
  }

  export type subscriptionUpdateManyWithoutPackageNestedInput = {
    create?: XOR<subscriptionCreateWithoutPackageInput, subscriptionUncheckedCreateWithoutPackageInput> | subscriptionCreateWithoutPackageInput[] | subscriptionUncheckedCreateWithoutPackageInput[]
    connectOrCreate?: subscriptionCreateOrConnectWithoutPackageInput | subscriptionCreateOrConnectWithoutPackageInput[]
    upsert?: subscriptionUpsertWithWhereUniqueWithoutPackageInput | subscriptionUpsertWithWhereUniqueWithoutPackageInput[]
    createMany?: subscriptionCreateManyPackageInputEnvelope
    set?: subscriptionWhereUniqueInput | subscriptionWhereUniqueInput[]
    disconnect?: subscriptionWhereUniqueInput | subscriptionWhereUniqueInput[]
    delete?: subscriptionWhereUniqueInput | subscriptionWhereUniqueInput[]
    connect?: subscriptionWhereUniqueInput | subscriptionWhereUniqueInput[]
    update?: subscriptionUpdateWithWhereUniqueWithoutPackageInput | subscriptionUpdateWithWhereUniqueWithoutPackageInput[]
    updateMany?: subscriptionUpdateManyWithWhereWithoutPackageInput | subscriptionUpdateManyWithWhereWithoutPackageInput[]
    deleteMany?: subscriptionScalarWhereInput | subscriptionScalarWhereInput[]
  }

  export type packageFeatureUncheckedUpdateManyWithoutPackageNestedInput = {
    create?: XOR<packageFeatureCreateWithoutPackageInput, packageFeatureUncheckedCreateWithoutPackageInput> | packageFeatureCreateWithoutPackageInput[] | packageFeatureUncheckedCreateWithoutPackageInput[]
    connectOrCreate?: packageFeatureCreateOrConnectWithoutPackageInput | packageFeatureCreateOrConnectWithoutPackageInput[]
    upsert?: packageFeatureUpsertWithWhereUniqueWithoutPackageInput | packageFeatureUpsertWithWhereUniqueWithoutPackageInput[]
    createMany?: packageFeatureCreateManyPackageInputEnvelope
    set?: packageFeatureWhereUniqueInput | packageFeatureWhereUniqueInput[]
    disconnect?: packageFeatureWhereUniqueInput | packageFeatureWhereUniqueInput[]
    delete?: packageFeatureWhereUniqueInput | packageFeatureWhereUniqueInput[]
    connect?: packageFeatureWhereUniqueInput | packageFeatureWhereUniqueInput[]
    update?: packageFeatureUpdateWithWhereUniqueWithoutPackageInput | packageFeatureUpdateWithWhereUniqueWithoutPackageInput[]
    updateMany?: packageFeatureUpdateManyWithWhereWithoutPackageInput | packageFeatureUpdateManyWithWhereWithoutPackageInput[]
    deleteMany?: packageFeatureScalarWhereInput | packageFeatureScalarWhereInput[]
  }

  export type priceUncheckedUpdateManyWithoutPackageNestedInput = {
    create?: XOR<priceCreateWithoutPackageInput, priceUncheckedCreateWithoutPackageInput> | priceCreateWithoutPackageInput[] | priceUncheckedCreateWithoutPackageInput[]
    connectOrCreate?: priceCreateOrConnectWithoutPackageInput | priceCreateOrConnectWithoutPackageInput[]
    upsert?: priceUpsertWithWhereUniqueWithoutPackageInput | priceUpsertWithWhereUniqueWithoutPackageInput[]
    createMany?: priceCreateManyPackageInputEnvelope
    set?: priceWhereUniqueInput | priceWhereUniqueInput[]
    disconnect?: priceWhereUniqueInput | priceWhereUniqueInput[]
    delete?: priceWhereUniqueInput | priceWhereUniqueInput[]
    connect?: priceWhereUniqueInput | priceWhereUniqueInput[]
    update?: priceUpdateWithWhereUniqueWithoutPackageInput | priceUpdateWithWhereUniqueWithoutPackageInput[]
    updateMany?: priceUpdateManyWithWhereWithoutPackageInput | priceUpdateManyWithWhereWithoutPackageInput[]
    deleteMany?: priceScalarWhereInput | priceScalarWhereInput[]
  }

  export type subscriptionUncheckedUpdateManyWithoutPackageNestedInput = {
    create?: XOR<subscriptionCreateWithoutPackageInput, subscriptionUncheckedCreateWithoutPackageInput> | subscriptionCreateWithoutPackageInput[] | subscriptionUncheckedCreateWithoutPackageInput[]
    connectOrCreate?: subscriptionCreateOrConnectWithoutPackageInput | subscriptionCreateOrConnectWithoutPackageInput[]
    upsert?: subscriptionUpsertWithWhereUniqueWithoutPackageInput | subscriptionUpsertWithWhereUniqueWithoutPackageInput[]
    createMany?: subscriptionCreateManyPackageInputEnvelope
    set?: subscriptionWhereUniqueInput | subscriptionWhereUniqueInput[]
    disconnect?: subscriptionWhereUniqueInput | subscriptionWhereUniqueInput[]
    delete?: subscriptionWhereUniqueInput | subscriptionWhereUniqueInput[]
    connect?: subscriptionWhereUniqueInput | subscriptionWhereUniqueInput[]
    update?: subscriptionUpdateWithWhereUniqueWithoutPackageInput | subscriptionUpdateWithWhereUniqueWithoutPackageInput[]
    updateMany?: subscriptionUpdateManyWithWhereWithoutPackageInput | subscriptionUpdateManyWithWhereWithoutPackageInput[]
    deleteMany?: subscriptionScalarWhereInput | subscriptionScalarWhereInput[]
  }

  export type packagesCreateNestedOneWithoutPricesInput = {
    create?: XOR<packagesCreateWithoutPricesInput, packagesUncheckedCreateWithoutPricesInput>
    connectOrCreate?: packagesCreateOrConnectWithoutPricesInput
    connect?: packagesWhereUniqueInput
  }

  export type EnumCurrencyFieldUpdateOperationsInput = {
    set?: $Enums.Currency
  }

  export type DecimalFieldUpdateOperationsInput = {
    set?: Decimal | DecimalJsLike | number | string
    increment?: Decimal | DecimalJsLike | number | string
    decrement?: Decimal | DecimalJsLike | number | string
    multiply?: Decimal | DecimalJsLike | number | string
    divide?: Decimal | DecimalJsLike | number | string
  }

  export type packagesUpdateOneRequiredWithoutPricesNestedInput = {
    create?: XOR<packagesCreateWithoutPricesInput, packagesUncheckedCreateWithoutPricesInput>
    connectOrCreate?: packagesCreateOrConnectWithoutPricesInput
    upsert?: packagesUpsertWithoutPricesInput
    connect?: packagesWhereUniqueInput
    update?: XOR<XOR<packagesUpdateToOneWithWhereWithoutPricesInput, packagesUpdateWithoutPricesInput>, packagesUncheckedUpdateWithoutPricesInput>
  }

  export type userCreateNestedOneWithoutSubscriptionsInput = {
    create?: XOR<userCreateWithoutSubscriptionsInput, userUncheckedCreateWithoutSubscriptionsInput>
    connectOrCreate?: userCreateOrConnectWithoutSubscriptionsInput
    connect?: userWhereUniqueInput
  }

  export type packagesCreateNestedOneWithoutSubscriptionsInput = {
    create?: XOR<packagesCreateWithoutSubscriptionsInput, packagesUncheckedCreateWithoutSubscriptionsInput>
    connectOrCreate?: packagesCreateOrConnectWithoutSubscriptionsInput
    connect?: packagesWhereUniqueInput
  }

  export type EnumSubscriptionStatusFieldUpdateOperationsInput = {
    set?: $Enums.SubscriptionStatus
  }

  export type userUpdateOneRequiredWithoutSubscriptionsNestedInput = {
    create?: XOR<userCreateWithoutSubscriptionsInput, userUncheckedCreateWithoutSubscriptionsInput>
    connectOrCreate?: userCreateOrConnectWithoutSubscriptionsInput
    upsert?: userUpsertWithoutSubscriptionsInput
    connect?: userWhereUniqueInput
    update?: XOR<XOR<userUpdateToOneWithWhereWithoutSubscriptionsInput, userUpdateWithoutSubscriptionsInput>, userUncheckedUpdateWithoutSubscriptionsInput>
  }

  export type packagesUpdateOneRequiredWithoutSubscriptionsNestedInput = {
    create?: XOR<packagesCreateWithoutSubscriptionsInput, packagesUncheckedCreateWithoutSubscriptionsInput>
    connectOrCreate?: packagesCreateOrConnectWithoutSubscriptionsInput
    upsert?: packagesUpsertWithoutSubscriptionsInput
    connect?: packagesWhereUniqueInput
    update?: XOR<XOR<packagesUpdateToOneWithWhereWithoutSubscriptionsInput, packagesUpdateWithoutSubscriptionsInput>, packagesUncheckedUpdateWithoutSubscriptionsInput>
  }

  export type userCreateNestedOneWithoutChatRoomsInput = {
    create?: XOR<userCreateWithoutChatRoomsInput, userUncheckedCreateWithoutChatRoomsInput>
    connectOrCreate?: userCreateOrConnectWithoutChatRoomsInput
    connect?: userWhereUniqueInput
  }

  export type chatCreateNestedManyWithoutRoomInput = {
    create?: XOR<chatCreateWithoutRoomInput, chatUncheckedCreateWithoutRoomInput> | chatCreateWithoutRoomInput[] | chatUncheckedCreateWithoutRoomInput[]
    connectOrCreate?: chatCreateOrConnectWithoutRoomInput | chatCreateOrConnectWithoutRoomInput[]
    createMany?: chatCreateManyRoomInputEnvelope
    connect?: chatWhereUniqueInput | chatWhereUniqueInput[]
  }

  export type chatUncheckedCreateNestedManyWithoutRoomInput = {
    create?: XOR<chatCreateWithoutRoomInput, chatUncheckedCreateWithoutRoomInput> | chatCreateWithoutRoomInput[] | chatUncheckedCreateWithoutRoomInput[]
    connectOrCreate?: chatCreateOrConnectWithoutRoomInput | chatCreateOrConnectWithoutRoomInput[]
    createMany?: chatCreateManyRoomInputEnvelope
    connect?: chatWhereUniqueInput | chatWhereUniqueInput[]
  }

  export type NullableDateTimeFieldUpdateOperationsInput = {
    set?: Date | string | null
  }

  export type userUpdateOneRequiredWithoutChatRoomsNestedInput = {
    create?: XOR<userCreateWithoutChatRoomsInput, userUncheckedCreateWithoutChatRoomsInput>
    connectOrCreate?: userCreateOrConnectWithoutChatRoomsInput
    upsert?: userUpsertWithoutChatRoomsInput
    connect?: userWhereUniqueInput
    update?: XOR<XOR<userUpdateToOneWithWhereWithoutChatRoomsInput, userUpdateWithoutChatRoomsInput>, userUncheckedUpdateWithoutChatRoomsInput>
  }

  export type chatUpdateManyWithoutRoomNestedInput = {
    create?: XOR<chatCreateWithoutRoomInput, chatUncheckedCreateWithoutRoomInput> | chatCreateWithoutRoomInput[] | chatUncheckedCreateWithoutRoomInput[]
    connectOrCreate?: chatCreateOrConnectWithoutRoomInput | chatCreateOrConnectWithoutRoomInput[]
    upsert?: chatUpsertWithWhereUniqueWithoutRoomInput | chatUpsertWithWhereUniqueWithoutRoomInput[]
    createMany?: chatCreateManyRoomInputEnvelope
    set?: chatWhereUniqueInput | chatWhereUniqueInput[]
    disconnect?: chatWhereUniqueInput | chatWhereUniqueInput[]
    delete?: chatWhereUniqueInput | chatWhereUniqueInput[]
    connect?: chatWhereUniqueInput | chatWhereUniqueInput[]
    update?: chatUpdateWithWhereUniqueWithoutRoomInput | chatUpdateWithWhereUniqueWithoutRoomInput[]
    updateMany?: chatUpdateManyWithWhereWithoutRoomInput | chatUpdateManyWithWhereWithoutRoomInput[]
    deleteMany?: chatScalarWhereInput | chatScalarWhereInput[]
  }

  export type chatUncheckedUpdateManyWithoutRoomNestedInput = {
    create?: XOR<chatCreateWithoutRoomInput, chatUncheckedCreateWithoutRoomInput> | chatCreateWithoutRoomInput[] | chatUncheckedCreateWithoutRoomInput[]
    connectOrCreate?: chatCreateOrConnectWithoutRoomInput | chatCreateOrConnectWithoutRoomInput[]
    upsert?: chatUpsertWithWhereUniqueWithoutRoomInput | chatUpsertWithWhereUniqueWithoutRoomInput[]
    createMany?: chatCreateManyRoomInputEnvelope
    set?: chatWhereUniqueInput | chatWhereUniqueInput[]
    disconnect?: chatWhereUniqueInput | chatWhereUniqueInput[]
    delete?: chatWhereUniqueInput | chatWhereUniqueInput[]
    connect?: chatWhereUniqueInput | chatWhereUniqueInput[]
    update?: chatUpdateWithWhereUniqueWithoutRoomInput | chatUpdateWithWhereUniqueWithoutRoomInput[]
    updateMany?: chatUpdateManyWithWhereWithoutRoomInput | chatUpdateManyWithWhereWithoutRoomInput[]
    deleteMany?: chatScalarWhereInput | chatScalarWhereInput[]
  }

  export type userCreateNestedOneWithoutChatsInput = {
    create?: XOR<userCreateWithoutChatsInput, userUncheckedCreateWithoutChatsInput>
    connectOrCreate?: userCreateOrConnectWithoutChatsInput
    connect?: userWhereUniqueInput
  }

  export type chatRoomCreateNestedOneWithoutMessagesInput = {
    create?: XOR<chatRoomCreateWithoutMessagesInput, chatRoomUncheckedCreateWithoutMessagesInput>
    connectOrCreate?: chatRoomCreateOrConnectWithoutMessagesInput
    connect?: chatRoomWhereUniqueInput
  }

  export type userUpdateOneRequiredWithoutChatsNestedInput = {
    create?: XOR<userCreateWithoutChatsInput, userUncheckedCreateWithoutChatsInput>
    connectOrCreate?: userCreateOrConnectWithoutChatsInput
    upsert?: userUpsertWithoutChatsInput
    connect?: userWhereUniqueInput
    update?: XOR<XOR<userUpdateToOneWithWhereWithoutChatsInput, userUpdateWithoutChatsInput>, userUncheckedUpdateWithoutChatsInput>
  }

  export type chatRoomUpdateOneRequiredWithoutMessagesNestedInput = {
    create?: XOR<chatRoomCreateWithoutMessagesInput, chatRoomUncheckedCreateWithoutMessagesInput>
    connectOrCreate?: chatRoomCreateOrConnectWithoutMessagesInput
    upsert?: chatRoomUpsertWithoutMessagesInput
    connect?: chatRoomWhereUniqueInput
    update?: XOR<XOR<chatRoomUpdateToOneWithWhereWithoutMessagesInput, chatRoomUpdateWithoutMessagesInput>, chatRoomUncheckedUpdateWithoutMessagesInput>
  }

  export type userCreateNestedOneWithoutLearningProgressInput = {
    create?: XOR<userCreateWithoutLearningProgressInput, userUncheckedCreateWithoutLearningProgressInput>
    connectOrCreate?: userCreateOrConnectWithoutLearningProgressInput
    connect?: userWhereUniqueInput
  }

  export type languagesCreateNestedOneWithoutLearningProgressInput = {
    create?: XOR<languagesCreateWithoutLearningProgressInput, languagesUncheckedCreateWithoutLearningProgressInput>
    connectOrCreate?: languagesCreateOrConnectWithoutLearningProgressInput
    connect?: languagesWhereUniqueInput
  }

  export type IntFieldUpdateOperationsInput = {
    set?: number
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type userUpdateOneRequiredWithoutLearningProgressNestedInput = {
    create?: XOR<userCreateWithoutLearningProgressInput, userUncheckedCreateWithoutLearningProgressInput>
    connectOrCreate?: userCreateOrConnectWithoutLearningProgressInput
    upsert?: userUpsertWithoutLearningProgressInput
    connect?: userWhereUniqueInput
    update?: XOR<XOR<userUpdateToOneWithWhereWithoutLearningProgressInput, userUpdateWithoutLearningProgressInput>, userUncheckedUpdateWithoutLearningProgressInput>
  }

  export type languagesUpdateOneRequiredWithoutLearningProgressNestedInput = {
    create?: XOR<languagesCreateWithoutLearningProgressInput, languagesUncheckedCreateWithoutLearningProgressInput>
    connectOrCreate?: languagesCreateOrConnectWithoutLearningProgressInput
    upsert?: languagesUpsertWithoutLearningProgressInput
    connect?: languagesWhereUniqueInput
    update?: XOR<XOR<languagesUpdateToOneWithWhereWithoutLearningProgressInput, languagesUpdateWithoutLearningProgressInput>, languagesUncheckedUpdateWithoutLearningProgressInput>
  }

  export type learningProgressCreateNestedManyWithoutLanguageInput = {
    create?: XOR<learningProgressCreateWithoutLanguageInput, learningProgressUncheckedCreateWithoutLanguageInput> | learningProgressCreateWithoutLanguageInput[] | learningProgressUncheckedCreateWithoutLanguageInput[]
    connectOrCreate?: learningProgressCreateOrConnectWithoutLanguageInput | learningProgressCreateOrConnectWithoutLanguageInput[]
    createMany?: learningProgressCreateManyLanguageInputEnvelope
    connect?: learningProgressWhereUniqueInput | learningProgressWhereUniqueInput[]
  }

  export type userCreateNestedManyWithoutLanguageInput = {
    create?: XOR<userCreateWithoutLanguageInput, userUncheckedCreateWithoutLanguageInput> | userCreateWithoutLanguageInput[] | userUncheckedCreateWithoutLanguageInput[]
    connectOrCreate?: userCreateOrConnectWithoutLanguageInput | userCreateOrConnectWithoutLanguageInput[]
    connect?: userWhereUniqueInput | userWhereUniqueInput[]
  }

  export type learningProgressUncheckedCreateNestedManyWithoutLanguageInput = {
    create?: XOR<learningProgressCreateWithoutLanguageInput, learningProgressUncheckedCreateWithoutLanguageInput> | learningProgressCreateWithoutLanguageInput[] | learningProgressUncheckedCreateWithoutLanguageInput[]
    connectOrCreate?: learningProgressCreateOrConnectWithoutLanguageInput | learningProgressCreateOrConnectWithoutLanguageInput[]
    createMany?: learningProgressCreateManyLanguageInputEnvelope
    connect?: learningProgressWhereUniqueInput | learningProgressWhereUniqueInput[]
  }

  export type userUncheckedCreateNestedManyWithoutLanguageInput = {
    create?: XOR<userCreateWithoutLanguageInput, userUncheckedCreateWithoutLanguageInput> | userCreateWithoutLanguageInput[] | userUncheckedCreateWithoutLanguageInput[]
    connectOrCreate?: userCreateOrConnectWithoutLanguageInput | userCreateOrConnectWithoutLanguageInput[]
    connect?: userWhereUniqueInput | userWhereUniqueInput[]
  }

  export type learningProgressUpdateManyWithoutLanguageNestedInput = {
    create?: XOR<learningProgressCreateWithoutLanguageInput, learningProgressUncheckedCreateWithoutLanguageInput> | learningProgressCreateWithoutLanguageInput[] | learningProgressUncheckedCreateWithoutLanguageInput[]
    connectOrCreate?: learningProgressCreateOrConnectWithoutLanguageInput | learningProgressCreateOrConnectWithoutLanguageInput[]
    upsert?: learningProgressUpsertWithWhereUniqueWithoutLanguageInput | learningProgressUpsertWithWhereUniqueWithoutLanguageInput[]
    createMany?: learningProgressCreateManyLanguageInputEnvelope
    set?: learningProgressWhereUniqueInput | learningProgressWhereUniqueInput[]
    disconnect?: learningProgressWhereUniqueInput | learningProgressWhereUniqueInput[]
    delete?: learningProgressWhereUniqueInput | learningProgressWhereUniqueInput[]
    connect?: learningProgressWhereUniqueInput | learningProgressWhereUniqueInput[]
    update?: learningProgressUpdateWithWhereUniqueWithoutLanguageInput | learningProgressUpdateWithWhereUniqueWithoutLanguageInput[]
    updateMany?: learningProgressUpdateManyWithWhereWithoutLanguageInput | learningProgressUpdateManyWithWhereWithoutLanguageInput[]
    deleteMany?: learningProgressScalarWhereInput | learningProgressScalarWhereInput[]
  }

  export type userUpdateManyWithoutLanguageNestedInput = {
    create?: XOR<userCreateWithoutLanguageInput, userUncheckedCreateWithoutLanguageInput> | userCreateWithoutLanguageInput[] | userUncheckedCreateWithoutLanguageInput[]
    connectOrCreate?: userCreateOrConnectWithoutLanguageInput | userCreateOrConnectWithoutLanguageInput[]
    upsert?: userUpsertWithWhereUniqueWithoutLanguageInput | userUpsertWithWhereUniqueWithoutLanguageInput[]
    set?: userWhereUniqueInput | userWhereUniqueInput[]
    disconnect?: userWhereUniqueInput | userWhereUniqueInput[]
    delete?: userWhereUniqueInput | userWhereUniqueInput[]
    connect?: userWhereUniqueInput | userWhereUniqueInput[]
    update?: userUpdateWithWhereUniqueWithoutLanguageInput | userUpdateWithWhereUniqueWithoutLanguageInput[]
    updateMany?: userUpdateManyWithWhereWithoutLanguageInput | userUpdateManyWithWhereWithoutLanguageInput[]
    deleteMany?: userScalarWhereInput | userScalarWhereInput[]
  }

  export type learningProgressUncheckedUpdateManyWithoutLanguageNestedInput = {
    create?: XOR<learningProgressCreateWithoutLanguageInput, learningProgressUncheckedCreateWithoutLanguageInput> | learningProgressCreateWithoutLanguageInput[] | learningProgressUncheckedCreateWithoutLanguageInput[]
    connectOrCreate?: learningProgressCreateOrConnectWithoutLanguageInput | learningProgressCreateOrConnectWithoutLanguageInput[]
    upsert?: learningProgressUpsertWithWhereUniqueWithoutLanguageInput | learningProgressUpsertWithWhereUniqueWithoutLanguageInput[]
    createMany?: learningProgressCreateManyLanguageInputEnvelope
    set?: learningProgressWhereUniqueInput | learningProgressWhereUniqueInput[]
    disconnect?: learningProgressWhereUniqueInput | learningProgressWhereUniqueInput[]
    delete?: learningProgressWhereUniqueInput | learningProgressWhereUniqueInput[]
    connect?: learningProgressWhereUniqueInput | learningProgressWhereUniqueInput[]
    update?: learningProgressUpdateWithWhereUniqueWithoutLanguageInput | learningProgressUpdateWithWhereUniqueWithoutLanguageInput[]
    updateMany?: learningProgressUpdateManyWithWhereWithoutLanguageInput | learningProgressUpdateManyWithWhereWithoutLanguageInput[]
    deleteMany?: learningProgressScalarWhereInput | learningProgressScalarWhereInput[]
  }

  export type userUncheckedUpdateManyWithoutLanguageNestedInput = {
    create?: XOR<userCreateWithoutLanguageInput, userUncheckedCreateWithoutLanguageInput> | userCreateWithoutLanguageInput[] | userUncheckedCreateWithoutLanguageInput[]
    connectOrCreate?: userCreateOrConnectWithoutLanguageInput | userCreateOrConnectWithoutLanguageInput[]
    upsert?: userUpsertWithWhereUniqueWithoutLanguageInput | userUpsertWithWhereUniqueWithoutLanguageInput[]
    set?: userWhereUniqueInput | userWhereUniqueInput[]
    disconnect?: userWhereUniqueInput | userWhereUniqueInput[]
    delete?: userWhereUniqueInput | userWhereUniqueInput[]
    connect?: userWhereUniqueInput | userWhereUniqueInput[]
    update?: userUpdateWithWhereUniqueWithoutLanguageInput | userUpdateWithWhereUniqueWithoutLanguageInput[]
    updateMany?: userUpdateManyWithWhereWithoutLanguageInput | userUpdateManyWithWhereWithoutLanguageInput[]
    deleteMany?: userScalarWhereInput | userScalarWhereInput[]
  }

  export type userCreateNestedOneWithoutCreatedapiclientsInput = {
    create?: XOR<userCreateWithoutCreatedapiclientsInput, userUncheckedCreateWithoutCreatedapiclientsInput>
    connectOrCreate?: userCreateOrConnectWithoutCreatedapiclientsInput
    connect?: userWhereUniqueInput
  }

  export type userCreateNestedOneWithoutUpdatedapiclientsInput = {
    create?: XOR<userCreateWithoutUpdatedapiclientsInput, userUncheckedCreateWithoutUpdatedapiclientsInput>
    connectOrCreate?: userCreateOrConnectWithoutUpdatedapiclientsInput
    connect?: userWhereUniqueInput
  }

  export type userUpdateOneRequiredWithoutCreatedapiclientsNestedInput = {
    create?: XOR<userCreateWithoutCreatedapiclientsInput, userUncheckedCreateWithoutCreatedapiclientsInput>
    connectOrCreate?: userCreateOrConnectWithoutCreatedapiclientsInput
    upsert?: userUpsertWithoutCreatedapiclientsInput
    connect?: userWhereUniqueInput
    update?: XOR<XOR<userUpdateToOneWithWhereWithoutCreatedapiclientsInput, userUpdateWithoutCreatedapiclientsInput>, userUncheckedUpdateWithoutCreatedapiclientsInput>
  }

  export type userUpdateOneWithoutUpdatedapiclientsNestedInput = {
    create?: XOR<userCreateWithoutUpdatedapiclientsInput, userUncheckedCreateWithoutUpdatedapiclientsInput>
    connectOrCreate?: userCreateOrConnectWithoutUpdatedapiclientsInput
    upsert?: userUpsertWithoutUpdatedapiclientsInput
    disconnect?: userWhereInput | boolean
    delete?: userWhereInput | boolean
    connect?: userWhereUniqueInput
    update?: XOR<XOR<userUpdateToOneWithWhereWithoutUpdatedapiclientsInput, userUpdateWithoutUpdatedapiclientsInput>, userUncheckedUpdateWithoutUpdatedapiclientsInput>
  }

  export type userCreateNestedOneWithoutRefreshtokensInput = {
    create?: XOR<userCreateWithoutRefreshtokensInput, userUncheckedCreateWithoutRefreshtokensInput>
    connectOrCreate?: userCreateOrConnectWithoutRefreshtokensInput
    connect?: userWhereUniqueInput
  }

  export type userUpdateOneRequiredWithoutRefreshtokensNestedInput = {
    create?: XOR<userCreateWithoutRefreshtokensInput, userUncheckedCreateWithoutRefreshtokensInput>
    connectOrCreate?: userCreateOrConnectWithoutRefreshtokensInput
    upsert?: userUpsertWithoutRefreshtokensInput
    connect?: userWhereUniqueInput
    update?: XOR<XOR<userUpdateToOneWithWhereWithoutRefreshtokensInput, userUpdateWithoutRefreshtokensInput>, userUncheckedUpdateWithoutRefreshtokensInput>
  }

  export type userCreateNestedOneWithoutCreatedrolesInput = {
    create?: XOR<userCreateWithoutCreatedrolesInput, userUncheckedCreateWithoutCreatedrolesInput>
    connectOrCreate?: userCreateOrConnectWithoutCreatedrolesInput
    connect?: userWhereUniqueInput
  }

  export type userCreateNestedOneWithoutUpdatedrolesInput = {
    create?: XOR<userCreateWithoutUpdatedrolesInput, userUncheckedCreateWithoutUpdatedrolesInput>
    connectOrCreate?: userCreateOrConnectWithoutUpdatedrolesInput
    connect?: userWhereUniqueInput
  }

  export type rolepermissionCreateNestedManyWithoutRoleInput = {
    create?: XOR<rolepermissionCreateWithoutRoleInput, rolepermissionUncheckedCreateWithoutRoleInput> | rolepermissionCreateWithoutRoleInput[] | rolepermissionUncheckedCreateWithoutRoleInput[]
    connectOrCreate?: rolepermissionCreateOrConnectWithoutRoleInput | rolepermissionCreateOrConnectWithoutRoleInput[]
    createMany?: rolepermissionCreateManyRoleInputEnvelope
    connect?: rolepermissionWhereUniqueInput | rolepermissionWhereUniqueInput[]
  }

  export type userroleCreateNestedManyWithoutRoleInput = {
    create?: XOR<userroleCreateWithoutRoleInput, userroleUncheckedCreateWithoutRoleInput> | userroleCreateWithoutRoleInput[] | userroleUncheckedCreateWithoutRoleInput[]
    connectOrCreate?: userroleCreateOrConnectWithoutRoleInput | userroleCreateOrConnectWithoutRoleInput[]
    createMany?: userroleCreateManyRoleInputEnvelope
    connect?: userroleWhereUniqueInput | userroleWhereUniqueInput[]
  }

  export type rolepermissionUncheckedCreateNestedManyWithoutRoleInput = {
    create?: XOR<rolepermissionCreateWithoutRoleInput, rolepermissionUncheckedCreateWithoutRoleInput> | rolepermissionCreateWithoutRoleInput[] | rolepermissionUncheckedCreateWithoutRoleInput[]
    connectOrCreate?: rolepermissionCreateOrConnectWithoutRoleInput | rolepermissionCreateOrConnectWithoutRoleInput[]
    createMany?: rolepermissionCreateManyRoleInputEnvelope
    connect?: rolepermissionWhereUniqueInput | rolepermissionWhereUniqueInput[]
  }

  export type userroleUncheckedCreateNestedManyWithoutRoleInput = {
    create?: XOR<userroleCreateWithoutRoleInput, userroleUncheckedCreateWithoutRoleInput> | userroleCreateWithoutRoleInput[] | userroleUncheckedCreateWithoutRoleInput[]
    connectOrCreate?: userroleCreateOrConnectWithoutRoleInput | userroleCreateOrConnectWithoutRoleInput[]
    createMany?: userroleCreateManyRoleInputEnvelope
    connect?: userroleWhereUniqueInput | userroleWhereUniqueInput[]
  }

  export type userUpdateOneRequiredWithoutCreatedrolesNestedInput = {
    create?: XOR<userCreateWithoutCreatedrolesInput, userUncheckedCreateWithoutCreatedrolesInput>
    connectOrCreate?: userCreateOrConnectWithoutCreatedrolesInput
    upsert?: userUpsertWithoutCreatedrolesInput
    connect?: userWhereUniqueInput
    update?: XOR<XOR<userUpdateToOneWithWhereWithoutCreatedrolesInput, userUpdateWithoutCreatedrolesInput>, userUncheckedUpdateWithoutCreatedrolesInput>
  }

  export type userUpdateOneWithoutUpdatedrolesNestedInput = {
    create?: XOR<userCreateWithoutUpdatedrolesInput, userUncheckedCreateWithoutUpdatedrolesInput>
    connectOrCreate?: userCreateOrConnectWithoutUpdatedrolesInput
    upsert?: userUpsertWithoutUpdatedrolesInput
    disconnect?: userWhereInput | boolean
    delete?: userWhereInput | boolean
    connect?: userWhereUniqueInput
    update?: XOR<XOR<userUpdateToOneWithWhereWithoutUpdatedrolesInput, userUpdateWithoutUpdatedrolesInput>, userUncheckedUpdateWithoutUpdatedrolesInput>
  }

  export type rolepermissionUpdateManyWithoutRoleNestedInput = {
    create?: XOR<rolepermissionCreateWithoutRoleInput, rolepermissionUncheckedCreateWithoutRoleInput> | rolepermissionCreateWithoutRoleInput[] | rolepermissionUncheckedCreateWithoutRoleInput[]
    connectOrCreate?: rolepermissionCreateOrConnectWithoutRoleInput | rolepermissionCreateOrConnectWithoutRoleInput[]
    upsert?: rolepermissionUpsertWithWhereUniqueWithoutRoleInput | rolepermissionUpsertWithWhereUniqueWithoutRoleInput[]
    createMany?: rolepermissionCreateManyRoleInputEnvelope
    set?: rolepermissionWhereUniqueInput | rolepermissionWhereUniqueInput[]
    disconnect?: rolepermissionWhereUniqueInput | rolepermissionWhereUniqueInput[]
    delete?: rolepermissionWhereUniqueInput | rolepermissionWhereUniqueInput[]
    connect?: rolepermissionWhereUniqueInput | rolepermissionWhereUniqueInput[]
    update?: rolepermissionUpdateWithWhereUniqueWithoutRoleInput | rolepermissionUpdateWithWhereUniqueWithoutRoleInput[]
    updateMany?: rolepermissionUpdateManyWithWhereWithoutRoleInput | rolepermissionUpdateManyWithWhereWithoutRoleInput[]
    deleteMany?: rolepermissionScalarWhereInput | rolepermissionScalarWhereInput[]
  }

  export type userroleUpdateManyWithoutRoleNestedInput = {
    create?: XOR<userroleCreateWithoutRoleInput, userroleUncheckedCreateWithoutRoleInput> | userroleCreateWithoutRoleInput[] | userroleUncheckedCreateWithoutRoleInput[]
    connectOrCreate?: userroleCreateOrConnectWithoutRoleInput | userroleCreateOrConnectWithoutRoleInput[]
    upsert?: userroleUpsertWithWhereUniqueWithoutRoleInput | userroleUpsertWithWhereUniqueWithoutRoleInput[]
    createMany?: userroleCreateManyRoleInputEnvelope
    set?: userroleWhereUniqueInput | userroleWhereUniqueInput[]
    disconnect?: userroleWhereUniqueInput | userroleWhereUniqueInput[]
    delete?: userroleWhereUniqueInput | userroleWhereUniqueInput[]
    connect?: userroleWhereUniqueInput | userroleWhereUniqueInput[]
    update?: userroleUpdateWithWhereUniqueWithoutRoleInput | userroleUpdateWithWhereUniqueWithoutRoleInput[]
    updateMany?: userroleUpdateManyWithWhereWithoutRoleInput | userroleUpdateManyWithWhereWithoutRoleInput[]
    deleteMany?: userroleScalarWhereInput | userroleScalarWhereInput[]
  }

  export type rolepermissionUncheckedUpdateManyWithoutRoleNestedInput = {
    create?: XOR<rolepermissionCreateWithoutRoleInput, rolepermissionUncheckedCreateWithoutRoleInput> | rolepermissionCreateWithoutRoleInput[] | rolepermissionUncheckedCreateWithoutRoleInput[]
    connectOrCreate?: rolepermissionCreateOrConnectWithoutRoleInput | rolepermissionCreateOrConnectWithoutRoleInput[]
    upsert?: rolepermissionUpsertWithWhereUniqueWithoutRoleInput | rolepermissionUpsertWithWhereUniqueWithoutRoleInput[]
    createMany?: rolepermissionCreateManyRoleInputEnvelope
    set?: rolepermissionWhereUniqueInput | rolepermissionWhereUniqueInput[]
    disconnect?: rolepermissionWhereUniqueInput | rolepermissionWhereUniqueInput[]
    delete?: rolepermissionWhereUniqueInput | rolepermissionWhereUniqueInput[]
    connect?: rolepermissionWhereUniqueInput | rolepermissionWhereUniqueInput[]
    update?: rolepermissionUpdateWithWhereUniqueWithoutRoleInput | rolepermissionUpdateWithWhereUniqueWithoutRoleInput[]
    updateMany?: rolepermissionUpdateManyWithWhereWithoutRoleInput | rolepermissionUpdateManyWithWhereWithoutRoleInput[]
    deleteMany?: rolepermissionScalarWhereInput | rolepermissionScalarWhereInput[]
  }

  export type userroleUncheckedUpdateManyWithoutRoleNestedInput = {
    create?: XOR<userroleCreateWithoutRoleInput, userroleUncheckedCreateWithoutRoleInput> | userroleCreateWithoutRoleInput[] | userroleUncheckedCreateWithoutRoleInput[]
    connectOrCreate?: userroleCreateOrConnectWithoutRoleInput | userroleCreateOrConnectWithoutRoleInput[]
    upsert?: userroleUpsertWithWhereUniqueWithoutRoleInput | userroleUpsertWithWhereUniqueWithoutRoleInput[]
    createMany?: userroleCreateManyRoleInputEnvelope
    set?: userroleWhereUniqueInput | userroleWhereUniqueInput[]
    disconnect?: userroleWhereUniqueInput | userroleWhereUniqueInput[]
    delete?: userroleWhereUniqueInput | userroleWhereUniqueInput[]
    connect?: userroleWhereUniqueInput | userroleWhereUniqueInput[]
    update?: userroleUpdateWithWhereUniqueWithoutRoleInput | userroleUpdateWithWhereUniqueWithoutRoleInput[]
    updateMany?: userroleUpdateManyWithWhereWithoutRoleInput | userroleUpdateManyWithWhereWithoutRoleInput[]
    deleteMany?: userroleScalarWhereInput | userroleScalarWhereInput[]
  }

  export type userCreateNestedOneWithoutNotificationuserInput = {
    create?: XOR<userCreateWithoutNotificationuserInput, userUncheckedCreateWithoutNotificationuserInput>
    connectOrCreate?: userCreateOrConnectWithoutNotificationuserInput
    connect?: userWhereUniqueInput
  }

  export type userUpdateOneRequiredWithoutNotificationuserNestedInput = {
    create?: XOR<userCreateWithoutNotificationuserInput, userUncheckedCreateWithoutNotificationuserInput>
    connectOrCreate?: userCreateOrConnectWithoutNotificationuserInput
    upsert?: userUpsertWithoutNotificationuserInput
    connect?: userWhereUniqueInput
    update?: XOR<XOR<userUpdateToOneWithWhereWithoutNotificationuserInput, userUpdateWithoutNotificationuserInput>, userUncheckedUpdateWithoutNotificationuserInput>
  }

  export type userCreateNestedOneWithoutCreatedpermissionsInput = {
    create?: XOR<userCreateWithoutCreatedpermissionsInput, userUncheckedCreateWithoutCreatedpermissionsInput>
    connectOrCreate?: userCreateOrConnectWithoutCreatedpermissionsInput
    connect?: userWhereUniqueInput
  }

  export type userCreateNestedOneWithoutUpdatedpermissionsInput = {
    create?: XOR<userCreateWithoutUpdatedpermissionsInput, userUncheckedCreateWithoutUpdatedpermissionsInput>
    connectOrCreate?: userCreateOrConnectWithoutUpdatedpermissionsInput
    connect?: userWhereUniqueInput
  }

  export type rolepermissionCreateNestedManyWithoutPermissionInput = {
    create?: XOR<rolepermissionCreateWithoutPermissionInput, rolepermissionUncheckedCreateWithoutPermissionInput> | rolepermissionCreateWithoutPermissionInput[] | rolepermissionUncheckedCreateWithoutPermissionInput[]
    connectOrCreate?: rolepermissionCreateOrConnectWithoutPermissionInput | rolepermissionCreateOrConnectWithoutPermissionInput[]
    createMany?: rolepermissionCreateManyPermissionInputEnvelope
    connect?: rolepermissionWhereUniqueInput | rolepermissionWhereUniqueInput[]
  }

  export type userpermissionCreateNestedManyWithoutPermissionInput = {
    create?: XOR<userpermissionCreateWithoutPermissionInput, userpermissionUncheckedCreateWithoutPermissionInput> | userpermissionCreateWithoutPermissionInput[] | userpermissionUncheckedCreateWithoutPermissionInput[]
    connectOrCreate?: userpermissionCreateOrConnectWithoutPermissionInput | userpermissionCreateOrConnectWithoutPermissionInput[]
    createMany?: userpermissionCreateManyPermissionInputEnvelope
    connect?: userpermissionWhereUniqueInput | userpermissionWhereUniqueInput[]
  }

  export type rolepermissionUncheckedCreateNestedManyWithoutPermissionInput = {
    create?: XOR<rolepermissionCreateWithoutPermissionInput, rolepermissionUncheckedCreateWithoutPermissionInput> | rolepermissionCreateWithoutPermissionInput[] | rolepermissionUncheckedCreateWithoutPermissionInput[]
    connectOrCreate?: rolepermissionCreateOrConnectWithoutPermissionInput | rolepermissionCreateOrConnectWithoutPermissionInput[]
    createMany?: rolepermissionCreateManyPermissionInputEnvelope
    connect?: rolepermissionWhereUniqueInput | rolepermissionWhereUniqueInput[]
  }

  export type userpermissionUncheckedCreateNestedManyWithoutPermissionInput = {
    create?: XOR<userpermissionCreateWithoutPermissionInput, userpermissionUncheckedCreateWithoutPermissionInput> | userpermissionCreateWithoutPermissionInput[] | userpermissionUncheckedCreateWithoutPermissionInput[]
    connectOrCreate?: userpermissionCreateOrConnectWithoutPermissionInput | userpermissionCreateOrConnectWithoutPermissionInput[]
    createMany?: userpermissionCreateManyPermissionInputEnvelope
    connect?: userpermissionWhereUniqueInput | userpermissionWhereUniqueInput[]
  }

  export type userUpdateOneRequiredWithoutCreatedpermissionsNestedInput = {
    create?: XOR<userCreateWithoutCreatedpermissionsInput, userUncheckedCreateWithoutCreatedpermissionsInput>
    connectOrCreate?: userCreateOrConnectWithoutCreatedpermissionsInput
    upsert?: userUpsertWithoutCreatedpermissionsInput
    connect?: userWhereUniqueInput
    update?: XOR<XOR<userUpdateToOneWithWhereWithoutCreatedpermissionsInput, userUpdateWithoutCreatedpermissionsInput>, userUncheckedUpdateWithoutCreatedpermissionsInput>
  }

  export type userUpdateOneWithoutUpdatedpermissionsNestedInput = {
    create?: XOR<userCreateWithoutUpdatedpermissionsInput, userUncheckedCreateWithoutUpdatedpermissionsInput>
    connectOrCreate?: userCreateOrConnectWithoutUpdatedpermissionsInput
    upsert?: userUpsertWithoutUpdatedpermissionsInput
    disconnect?: userWhereInput | boolean
    delete?: userWhereInput | boolean
    connect?: userWhereUniqueInput
    update?: XOR<XOR<userUpdateToOneWithWhereWithoutUpdatedpermissionsInput, userUpdateWithoutUpdatedpermissionsInput>, userUncheckedUpdateWithoutUpdatedpermissionsInput>
  }

  export type rolepermissionUpdateManyWithoutPermissionNestedInput = {
    create?: XOR<rolepermissionCreateWithoutPermissionInput, rolepermissionUncheckedCreateWithoutPermissionInput> | rolepermissionCreateWithoutPermissionInput[] | rolepermissionUncheckedCreateWithoutPermissionInput[]
    connectOrCreate?: rolepermissionCreateOrConnectWithoutPermissionInput | rolepermissionCreateOrConnectWithoutPermissionInput[]
    upsert?: rolepermissionUpsertWithWhereUniqueWithoutPermissionInput | rolepermissionUpsertWithWhereUniqueWithoutPermissionInput[]
    createMany?: rolepermissionCreateManyPermissionInputEnvelope
    set?: rolepermissionWhereUniqueInput | rolepermissionWhereUniqueInput[]
    disconnect?: rolepermissionWhereUniqueInput | rolepermissionWhereUniqueInput[]
    delete?: rolepermissionWhereUniqueInput | rolepermissionWhereUniqueInput[]
    connect?: rolepermissionWhereUniqueInput | rolepermissionWhereUniqueInput[]
    update?: rolepermissionUpdateWithWhereUniqueWithoutPermissionInput | rolepermissionUpdateWithWhereUniqueWithoutPermissionInput[]
    updateMany?: rolepermissionUpdateManyWithWhereWithoutPermissionInput | rolepermissionUpdateManyWithWhereWithoutPermissionInput[]
    deleteMany?: rolepermissionScalarWhereInput | rolepermissionScalarWhereInput[]
  }

  export type userpermissionUpdateManyWithoutPermissionNestedInput = {
    create?: XOR<userpermissionCreateWithoutPermissionInput, userpermissionUncheckedCreateWithoutPermissionInput> | userpermissionCreateWithoutPermissionInput[] | userpermissionUncheckedCreateWithoutPermissionInput[]
    connectOrCreate?: userpermissionCreateOrConnectWithoutPermissionInput | userpermissionCreateOrConnectWithoutPermissionInput[]
    upsert?: userpermissionUpsertWithWhereUniqueWithoutPermissionInput | userpermissionUpsertWithWhereUniqueWithoutPermissionInput[]
    createMany?: userpermissionCreateManyPermissionInputEnvelope
    set?: userpermissionWhereUniqueInput | userpermissionWhereUniqueInput[]
    disconnect?: userpermissionWhereUniqueInput | userpermissionWhereUniqueInput[]
    delete?: userpermissionWhereUniqueInput | userpermissionWhereUniqueInput[]
    connect?: userpermissionWhereUniqueInput | userpermissionWhereUniqueInput[]
    update?: userpermissionUpdateWithWhereUniqueWithoutPermissionInput | userpermissionUpdateWithWhereUniqueWithoutPermissionInput[]
    updateMany?: userpermissionUpdateManyWithWhereWithoutPermissionInput | userpermissionUpdateManyWithWhereWithoutPermissionInput[]
    deleteMany?: userpermissionScalarWhereInput | userpermissionScalarWhereInput[]
  }

  export type rolepermissionUncheckedUpdateManyWithoutPermissionNestedInput = {
    create?: XOR<rolepermissionCreateWithoutPermissionInput, rolepermissionUncheckedCreateWithoutPermissionInput> | rolepermissionCreateWithoutPermissionInput[] | rolepermissionUncheckedCreateWithoutPermissionInput[]
    connectOrCreate?: rolepermissionCreateOrConnectWithoutPermissionInput | rolepermissionCreateOrConnectWithoutPermissionInput[]
    upsert?: rolepermissionUpsertWithWhereUniqueWithoutPermissionInput | rolepermissionUpsertWithWhereUniqueWithoutPermissionInput[]
    createMany?: rolepermissionCreateManyPermissionInputEnvelope
    set?: rolepermissionWhereUniqueInput | rolepermissionWhereUniqueInput[]
    disconnect?: rolepermissionWhereUniqueInput | rolepermissionWhereUniqueInput[]
    delete?: rolepermissionWhereUniqueInput | rolepermissionWhereUniqueInput[]
    connect?: rolepermissionWhereUniqueInput | rolepermissionWhereUniqueInput[]
    update?: rolepermissionUpdateWithWhereUniqueWithoutPermissionInput | rolepermissionUpdateWithWhereUniqueWithoutPermissionInput[]
    updateMany?: rolepermissionUpdateManyWithWhereWithoutPermissionInput | rolepermissionUpdateManyWithWhereWithoutPermissionInput[]
    deleteMany?: rolepermissionScalarWhereInput | rolepermissionScalarWhereInput[]
  }

  export type userpermissionUncheckedUpdateManyWithoutPermissionNestedInput = {
    create?: XOR<userpermissionCreateWithoutPermissionInput, userpermissionUncheckedCreateWithoutPermissionInput> | userpermissionCreateWithoutPermissionInput[] | userpermissionUncheckedCreateWithoutPermissionInput[]
    connectOrCreate?: userpermissionCreateOrConnectWithoutPermissionInput | userpermissionCreateOrConnectWithoutPermissionInput[]
    upsert?: userpermissionUpsertWithWhereUniqueWithoutPermissionInput | userpermissionUpsertWithWhereUniqueWithoutPermissionInput[]
    createMany?: userpermissionCreateManyPermissionInputEnvelope
    set?: userpermissionWhereUniqueInput | userpermissionWhereUniqueInput[]
    disconnect?: userpermissionWhereUniqueInput | userpermissionWhereUniqueInput[]
    delete?: userpermissionWhereUniqueInput | userpermissionWhereUniqueInput[]
    connect?: userpermissionWhereUniqueInput | userpermissionWhereUniqueInput[]
    update?: userpermissionUpdateWithWhereUniqueWithoutPermissionInput | userpermissionUpdateWithWhereUniqueWithoutPermissionInput[]
    updateMany?: userpermissionUpdateManyWithWhereWithoutPermissionInput | userpermissionUpdateManyWithWhereWithoutPermissionInput[]
    deleteMany?: userpermissionScalarWhereInput | userpermissionScalarWhereInput[]
  }

  export type userCreateNestedOneWithoutCreatedrolepermissionsInput = {
    create?: XOR<userCreateWithoutCreatedrolepermissionsInput, userUncheckedCreateWithoutCreatedrolepermissionsInput>
    connectOrCreate?: userCreateOrConnectWithoutCreatedrolepermissionsInput
    connect?: userWhereUniqueInput
  }

  export type permissionCreateNestedOneWithoutRolepermissionsInput = {
    create?: XOR<permissionCreateWithoutRolepermissionsInput, permissionUncheckedCreateWithoutRolepermissionsInput>
    connectOrCreate?: permissionCreateOrConnectWithoutRolepermissionsInput
    connect?: permissionWhereUniqueInput
  }

  export type roleCreateNestedOneWithoutRolepermissionsInput = {
    create?: XOR<roleCreateWithoutRolepermissionsInput, roleUncheckedCreateWithoutRolepermissionsInput>
    connectOrCreate?: roleCreateOrConnectWithoutRolepermissionsInput
    connect?: roleWhereUniqueInput
  }

  export type userCreateNestedOneWithoutUpdatedrolepermissionsInput = {
    create?: XOR<userCreateWithoutUpdatedrolepermissionsInput, userUncheckedCreateWithoutUpdatedrolepermissionsInput>
    connectOrCreate?: userCreateOrConnectWithoutUpdatedrolepermissionsInput
    connect?: userWhereUniqueInput
  }

  export type userUpdateOneRequiredWithoutCreatedrolepermissionsNestedInput = {
    create?: XOR<userCreateWithoutCreatedrolepermissionsInput, userUncheckedCreateWithoutCreatedrolepermissionsInput>
    connectOrCreate?: userCreateOrConnectWithoutCreatedrolepermissionsInput
    upsert?: userUpsertWithoutCreatedrolepermissionsInput
    connect?: userWhereUniqueInput
    update?: XOR<XOR<userUpdateToOneWithWhereWithoutCreatedrolepermissionsInput, userUpdateWithoutCreatedrolepermissionsInput>, userUncheckedUpdateWithoutCreatedrolepermissionsInput>
  }

  export type permissionUpdateOneRequiredWithoutRolepermissionsNestedInput = {
    create?: XOR<permissionCreateWithoutRolepermissionsInput, permissionUncheckedCreateWithoutRolepermissionsInput>
    connectOrCreate?: permissionCreateOrConnectWithoutRolepermissionsInput
    upsert?: permissionUpsertWithoutRolepermissionsInput
    connect?: permissionWhereUniqueInput
    update?: XOR<XOR<permissionUpdateToOneWithWhereWithoutRolepermissionsInput, permissionUpdateWithoutRolepermissionsInput>, permissionUncheckedUpdateWithoutRolepermissionsInput>
  }

  export type roleUpdateOneRequiredWithoutRolepermissionsNestedInput = {
    create?: XOR<roleCreateWithoutRolepermissionsInput, roleUncheckedCreateWithoutRolepermissionsInput>
    connectOrCreate?: roleCreateOrConnectWithoutRolepermissionsInput
    upsert?: roleUpsertWithoutRolepermissionsInput
    connect?: roleWhereUniqueInput
    update?: XOR<XOR<roleUpdateToOneWithWhereWithoutRolepermissionsInput, roleUpdateWithoutRolepermissionsInput>, roleUncheckedUpdateWithoutRolepermissionsInput>
  }

  export type userUpdateOneWithoutUpdatedrolepermissionsNestedInput = {
    create?: XOR<userCreateWithoutUpdatedrolepermissionsInput, userUncheckedCreateWithoutUpdatedrolepermissionsInput>
    connectOrCreate?: userCreateOrConnectWithoutUpdatedrolepermissionsInput
    upsert?: userUpsertWithoutUpdatedrolepermissionsInput
    disconnect?: userWhereInput | boolean
    delete?: userWhereInput | boolean
    connect?: userWhereUniqueInput
    update?: XOR<XOR<userUpdateToOneWithWhereWithoutUpdatedrolepermissionsInput, userUpdateWithoutUpdatedrolepermissionsInput>, userUncheckedUpdateWithoutUpdatedrolepermissionsInput>
  }

  export type notificationCreateNestedManyWithoutToInput = {
    create?: XOR<notificationCreateWithoutToInput, notificationUncheckedCreateWithoutToInput> | notificationCreateWithoutToInput[] | notificationUncheckedCreateWithoutToInput[]
    connectOrCreate?: notificationCreateOrConnectWithoutToInput | notificationCreateOrConnectWithoutToInput[]
    createMany?: notificationCreateManyToInputEnvelope
    connect?: notificationWhereUniqueInput | notificationWhereUniqueInput[]
  }

  export type apiclientCreateNestedManyWithoutCreateduserInput = {
    create?: XOR<apiclientCreateWithoutCreateduserInput, apiclientUncheckedCreateWithoutCreateduserInput> | apiclientCreateWithoutCreateduserInput[] | apiclientUncheckedCreateWithoutCreateduserInput[]
    connectOrCreate?: apiclientCreateOrConnectWithoutCreateduserInput | apiclientCreateOrConnectWithoutCreateduserInput[]
    createMany?: apiclientCreateManyCreateduserInputEnvelope
    connect?: apiclientWhereUniqueInput | apiclientWhereUniqueInput[]
  }

  export type apiclientCreateNestedManyWithoutUpdateduserInput = {
    create?: XOR<apiclientCreateWithoutUpdateduserInput, apiclientUncheckedCreateWithoutUpdateduserInput> | apiclientCreateWithoutUpdateduserInput[] | apiclientUncheckedCreateWithoutUpdateduserInput[]
    connectOrCreate?: apiclientCreateOrConnectWithoutUpdateduserInput | apiclientCreateOrConnectWithoutUpdateduserInput[]
    createMany?: apiclientCreateManyUpdateduserInputEnvelope
    connect?: apiclientWhereUniqueInput | apiclientWhereUniqueInput[]
  }

  export type permissionCreateNestedManyWithoutCreateduserInput = {
    create?: XOR<permissionCreateWithoutCreateduserInput, permissionUncheckedCreateWithoutCreateduserInput> | permissionCreateWithoutCreateduserInput[] | permissionUncheckedCreateWithoutCreateduserInput[]
    connectOrCreate?: permissionCreateOrConnectWithoutCreateduserInput | permissionCreateOrConnectWithoutCreateduserInput[]
    createMany?: permissionCreateManyCreateduserInputEnvelope
    connect?: permissionWhereUniqueInput | permissionWhereUniqueInput[]
  }

  export type permissionCreateNestedManyWithoutUpdateduserInput = {
    create?: XOR<permissionCreateWithoutUpdateduserInput, permissionUncheckedCreateWithoutUpdateduserInput> | permissionCreateWithoutUpdateduserInput[] | permissionUncheckedCreateWithoutUpdateduserInput[]
    connectOrCreate?: permissionCreateOrConnectWithoutUpdateduserInput | permissionCreateOrConnectWithoutUpdateduserInput[]
    createMany?: permissionCreateManyUpdateduserInputEnvelope
    connect?: permissionWhereUniqueInput | permissionWhereUniqueInput[]
  }

  export type refreshtokenCreateNestedManyWithoutUserInput = {
    create?: XOR<refreshtokenCreateWithoutUserInput, refreshtokenUncheckedCreateWithoutUserInput> | refreshtokenCreateWithoutUserInput[] | refreshtokenUncheckedCreateWithoutUserInput[]
    connectOrCreate?: refreshtokenCreateOrConnectWithoutUserInput | refreshtokenCreateOrConnectWithoutUserInput[]
    createMany?: refreshtokenCreateManyUserInputEnvelope
    connect?: refreshtokenWhereUniqueInput | refreshtokenWhereUniqueInput[]
  }

  export type roleCreateNestedManyWithoutCreateduserInput = {
    create?: XOR<roleCreateWithoutCreateduserInput, roleUncheckedCreateWithoutCreateduserInput> | roleCreateWithoutCreateduserInput[] | roleUncheckedCreateWithoutCreateduserInput[]
    connectOrCreate?: roleCreateOrConnectWithoutCreateduserInput | roleCreateOrConnectWithoutCreateduserInput[]
    createMany?: roleCreateManyCreateduserInputEnvelope
    connect?: roleWhereUniqueInput | roleWhereUniqueInput[]
  }

  export type roleCreateNestedManyWithoutUpdateduserInput = {
    create?: XOR<roleCreateWithoutUpdateduserInput, roleUncheckedCreateWithoutUpdateduserInput> | roleCreateWithoutUpdateduserInput[] | roleUncheckedCreateWithoutUpdateduserInput[]
    connectOrCreate?: roleCreateOrConnectWithoutUpdateduserInput | roleCreateOrConnectWithoutUpdateduserInput[]
    createMany?: roleCreateManyUpdateduserInputEnvelope
    connect?: roleWhereUniqueInput | roleWhereUniqueInput[]
  }

  export type rolepermissionCreateNestedManyWithoutCreateduserInput = {
    create?: XOR<rolepermissionCreateWithoutCreateduserInput, rolepermissionUncheckedCreateWithoutCreateduserInput> | rolepermissionCreateWithoutCreateduserInput[] | rolepermissionUncheckedCreateWithoutCreateduserInput[]
    connectOrCreate?: rolepermissionCreateOrConnectWithoutCreateduserInput | rolepermissionCreateOrConnectWithoutCreateduserInput[]
    createMany?: rolepermissionCreateManyCreateduserInputEnvelope
    connect?: rolepermissionWhereUniqueInput | rolepermissionWhereUniqueInput[]
  }

  export type rolepermissionCreateNestedManyWithoutUpdateduserInput = {
    create?: XOR<rolepermissionCreateWithoutUpdateduserInput, rolepermissionUncheckedCreateWithoutUpdateduserInput> | rolepermissionCreateWithoutUpdateduserInput[] | rolepermissionUncheckedCreateWithoutUpdateduserInput[]
    connectOrCreate?: rolepermissionCreateOrConnectWithoutUpdateduserInput | rolepermissionCreateOrConnectWithoutUpdateduserInput[]
    createMany?: rolepermissionCreateManyUpdateduserInputEnvelope
    connect?: rolepermissionWhereUniqueInput | rolepermissionWhereUniqueInput[]
  }

  export type userCreateNestedOneWithoutCreatedusersInput = {
    create?: XOR<userCreateWithoutCreatedusersInput, userUncheckedCreateWithoutCreatedusersInput>
    connectOrCreate?: userCreateOrConnectWithoutCreatedusersInput
    connect?: userWhereUniqueInput
  }

  export type userCreateNestedManyWithoutCreateduserInput = {
    create?: XOR<userCreateWithoutCreateduserInput, userUncheckedCreateWithoutCreateduserInput> | userCreateWithoutCreateduserInput[] | userUncheckedCreateWithoutCreateduserInput[]
    connectOrCreate?: userCreateOrConnectWithoutCreateduserInput | userCreateOrConnectWithoutCreateduserInput[]
    createMany?: userCreateManyCreateduserInputEnvelope
    connect?: userWhereUniqueInput | userWhereUniqueInput[]
  }

  export type userCreateNestedOneWithoutUpdatedusersInput = {
    create?: XOR<userCreateWithoutUpdatedusersInput, userUncheckedCreateWithoutUpdatedusersInput>
    connectOrCreate?: userCreateOrConnectWithoutUpdatedusersInput
    connect?: userWhereUniqueInput
  }

  export type userCreateNestedManyWithoutUpdateduserInput = {
    create?: XOR<userCreateWithoutUpdateduserInput, userUncheckedCreateWithoutUpdateduserInput> | userCreateWithoutUpdateduserInput[] | userUncheckedCreateWithoutUpdateduserInput[]
    connectOrCreate?: userCreateOrConnectWithoutUpdateduserInput | userCreateOrConnectWithoutUpdateduserInput[]
    createMany?: userCreateManyUpdateduserInputEnvelope
    connect?: userWhereUniqueInput | userWhereUniqueInput[]
  }

  export type userpermissionCreateNestedManyWithoutCreateduserInput = {
    create?: XOR<userpermissionCreateWithoutCreateduserInput, userpermissionUncheckedCreateWithoutCreateduserInput> | userpermissionCreateWithoutCreateduserInput[] | userpermissionUncheckedCreateWithoutCreateduserInput[]
    connectOrCreate?: userpermissionCreateOrConnectWithoutCreateduserInput | userpermissionCreateOrConnectWithoutCreateduserInput[]
    createMany?: userpermissionCreateManyCreateduserInputEnvelope
    connect?: userpermissionWhereUniqueInput | userpermissionWhereUniqueInput[]
  }

  export type userpermissionCreateNestedManyWithoutUpdateduserInput = {
    create?: XOR<userpermissionCreateWithoutUpdateduserInput, userpermissionUncheckedCreateWithoutUpdateduserInput> | userpermissionCreateWithoutUpdateduserInput[] | userpermissionUncheckedCreateWithoutUpdateduserInput[]
    connectOrCreate?: userpermissionCreateOrConnectWithoutUpdateduserInput | userpermissionCreateOrConnectWithoutUpdateduserInput[]
    createMany?: userpermissionCreateManyUpdateduserInputEnvelope
    connect?: userpermissionWhereUniqueInput | userpermissionWhereUniqueInput[]
  }

  export type userpermissionCreateNestedManyWithoutUserInput = {
    create?: XOR<userpermissionCreateWithoutUserInput, userpermissionUncheckedCreateWithoutUserInput> | userpermissionCreateWithoutUserInput[] | userpermissionUncheckedCreateWithoutUserInput[]
    connectOrCreate?: userpermissionCreateOrConnectWithoutUserInput | userpermissionCreateOrConnectWithoutUserInput[]
    createMany?: userpermissionCreateManyUserInputEnvelope
    connect?: userpermissionWhereUniqueInput | userpermissionWhereUniqueInput[]
  }

  export type userroleCreateNestedManyWithoutCreateduserInput = {
    create?: XOR<userroleCreateWithoutCreateduserInput, userroleUncheckedCreateWithoutCreateduserInput> | userroleCreateWithoutCreateduserInput[] | userroleUncheckedCreateWithoutCreateduserInput[]
    connectOrCreate?: userroleCreateOrConnectWithoutCreateduserInput | userroleCreateOrConnectWithoutCreateduserInput[]
    createMany?: userroleCreateManyCreateduserInputEnvelope
    connect?: userroleWhereUniqueInput | userroleWhereUniqueInput[]
  }

  export type userroleCreateNestedManyWithoutUpdateduserInput = {
    create?: XOR<userroleCreateWithoutUpdateduserInput, userroleUncheckedCreateWithoutUpdateduserInput> | userroleCreateWithoutUpdateduserInput[] | userroleUncheckedCreateWithoutUpdateduserInput[]
    connectOrCreate?: userroleCreateOrConnectWithoutUpdateduserInput | userroleCreateOrConnectWithoutUpdateduserInput[]
    createMany?: userroleCreateManyUpdateduserInputEnvelope
    connect?: userroleWhereUniqueInput | userroleWhereUniqueInput[]
  }

  export type userroleCreateNestedManyWithoutUserInput = {
    create?: XOR<userroleCreateWithoutUserInput, userroleUncheckedCreateWithoutUserInput> | userroleCreateWithoutUserInput[] | userroleUncheckedCreateWithoutUserInput[]
    connectOrCreate?: userroleCreateOrConnectWithoutUserInput | userroleCreateOrConnectWithoutUserInput[]
    createMany?: userroleCreateManyUserInputEnvelope
    connect?: userroleWhereUniqueInput | userroleWhereUniqueInput[]
  }

  export type languagesCreateNestedManyWithoutUserInput = {
    create?: XOR<languagesCreateWithoutUserInput, languagesUncheckedCreateWithoutUserInput> | languagesCreateWithoutUserInput[] | languagesUncheckedCreateWithoutUserInput[]
    connectOrCreate?: languagesCreateOrConnectWithoutUserInput | languagesCreateOrConnectWithoutUserInput[]
    connect?: languagesWhereUniqueInput | languagesWhereUniqueInput[]
  }

  export type learningProgressCreateNestedManyWithoutUserInput = {
    create?: XOR<learningProgressCreateWithoutUserInput, learningProgressUncheckedCreateWithoutUserInput> | learningProgressCreateWithoutUserInput[] | learningProgressUncheckedCreateWithoutUserInput[]
    connectOrCreate?: learningProgressCreateOrConnectWithoutUserInput | learningProgressCreateOrConnectWithoutUserInput[]
    createMany?: learningProgressCreateManyUserInputEnvelope
    connect?: learningProgressWhereUniqueInput | learningProgressWhereUniqueInput[]
  }

  export type chatCreateNestedManyWithoutUserInput = {
    create?: XOR<chatCreateWithoutUserInput, chatUncheckedCreateWithoutUserInput> | chatCreateWithoutUserInput[] | chatUncheckedCreateWithoutUserInput[]
    connectOrCreate?: chatCreateOrConnectWithoutUserInput | chatCreateOrConnectWithoutUserInput[]
    createMany?: chatCreateManyUserInputEnvelope
    connect?: chatWhereUniqueInput | chatWhereUniqueInput[]
  }

  export type chatRoomCreateNestedManyWithoutUserInput = {
    create?: XOR<chatRoomCreateWithoutUserInput, chatRoomUncheckedCreateWithoutUserInput> | chatRoomCreateWithoutUserInput[] | chatRoomUncheckedCreateWithoutUserInput[]
    connectOrCreate?: chatRoomCreateOrConnectWithoutUserInput | chatRoomCreateOrConnectWithoutUserInput[]
    createMany?: chatRoomCreateManyUserInputEnvelope
    connect?: chatRoomWhereUniqueInput | chatRoomWhereUniqueInput[]
  }

  export type subscriptionCreateNestedManyWithoutUserInput = {
    create?: XOR<subscriptionCreateWithoutUserInput, subscriptionUncheckedCreateWithoutUserInput> | subscriptionCreateWithoutUserInput[] | subscriptionUncheckedCreateWithoutUserInput[]
    connectOrCreate?: subscriptionCreateOrConnectWithoutUserInput | subscriptionCreateOrConnectWithoutUserInput[]
    createMany?: subscriptionCreateManyUserInputEnvelope
    connect?: subscriptionWhereUniqueInput | subscriptionWhereUniqueInput[]
  }

  export type notificationUncheckedCreateNestedManyWithoutToInput = {
    create?: XOR<notificationCreateWithoutToInput, notificationUncheckedCreateWithoutToInput> | notificationCreateWithoutToInput[] | notificationUncheckedCreateWithoutToInput[]
    connectOrCreate?: notificationCreateOrConnectWithoutToInput | notificationCreateOrConnectWithoutToInput[]
    createMany?: notificationCreateManyToInputEnvelope
    connect?: notificationWhereUniqueInput | notificationWhereUniqueInput[]
  }

  export type apiclientUncheckedCreateNestedManyWithoutCreateduserInput = {
    create?: XOR<apiclientCreateWithoutCreateduserInput, apiclientUncheckedCreateWithoutCreateduserInput> | apiclientCreateWithoutCreateduserInput[] | apiclientUncheckedCreateWithoutCreateduserInput[]
    connectOrCreate?: apiclientCreateOrConnectWithoutCreateduserInput | apiclientCreateOrConnectWithoutCreateduserInput[]
    createMany?: apiclientCreateManyCreateduserInputEnvelope
    connect?: apiclientWhereUniqueInput | apiclientWhereUniqueInput[]
  }

  export type apiclientUncheckedCreateNestedManyWithoutUpdateduserInput = {
    create?: XOR<apiclientCreateWithoutUpdateduserInput, apiclientUncheckedCreateWithoutUpdateduserInput> | apiclientCreateWithoutUpdateduserInput[] | apiclientUncheckedCreateWithoutUpdateduserInput[]
    connectOrCreate?: apiclientCreateOrConnectWithoutUpdateduserInput | apiclientCreateOrConnectWithoutUpdateduserInput[]
    createMany?: apiclientCreateManyUpdateduserInputEnvelope
    connect?: apiclientWhereUniqueInput | apiclientWhereUniqueInput[]
  }

  export type permissionUncheckedCreateNestedManyWithoutCreateduserInput = {
    create?: XOR<permissionCreateWithoutCreateduserInput, permissionUncheckedCreateWithoutCreateduserInput> | permissionCreateWithoutCreateduserInput[] | permissionUncheckedCreateWithoutCreateduserInput[]
    connectOrCreate?: permissionCreateOrConnectWithoutCreateduserInput | permissionCreateOrConnectWithoutCreateduserInput[]
    createMany?: permissionCreateManyCreateduserInputEnvelope
    connect?: permissionWhereUniqueInput | permissionWhereUniqueInput[]
  }

  export type permissionUncheckedCreateNestedManyWithoutUpdateduserInput = {
    create?: XOR<permissionCreateWithoutUpdateduserInput, permissionUncheckedCreateWithoutUpdateduserInput> | permissionCreateWithoutUpdateduserInput[] | permissionUncheckedCreateWithoutUpdateduserInput[]
    connectOrCreate?: permissionCreateOrConnectWithoutUpdateduserInput | permissionCreateOrConnectWithoutUpdateduserInput[]
    createMany?: permissionCreateManyUpdateduserInputEnvelope
    connect?: permissionWhereUniqueInput | permissionWhereUniqueInput[]
  }

  export type refreshtokenUncheckedCreateNestedManyWithoutUserInput = {
    create?: XOR<refreshtokenCreateWithoutUserInput, refreshtokenUncheckedCreateWithoutUserInput> | refreshtokenCreateWithoutUserInput[] | refreshtokenUncheckedCreateWithoutUserInput[]
    connectOrCreate?: refreshtokenCreateOrConnectWithoutUserInput | refreshtokenCreateOrConnectWithoutUserInput[]
    createMany?: refreshtokenCreateManyUserInputEnvelope
    connect?: refreshtokenWhereUniqueInput | refreshtokenWhereUniqueInput[]
  }

  export type roleUncheckedCreateNestedManyWithoutCreateduserInput = {
    create?: XOR<roleCreateWithoutCreateduserInput, roleUncheckedCreateWithoutCreateduserInput> | roleCreateWithoutCreateduserInput[] | roleUncheckedCreateWithoutCreateduserInput[]
    connectOrCreate?: roleCreateOrConnectWithoutCreateduserInput | roleCreateOrConnectWithoutCreateduserInput[]
    createMany?: roleCreateManyCreateduserInputEnvelope
    connect?: roleWhereUniqueInput | roleWhereUniqueInput[]
  }

  export type roleUncheckedCreateNestedManyWithoutUpdateduserInput = {
    create?: XOR<roleCreateWithoutUpdateduserInput, roleUncheckedCreateWithoutUpdateduserInput> | roleCreateWithoutUpdateduserInput[] | roleUncheckedCreateWithoutUpdateduserInput[]
    connectOrCreate?: roleCreateOrConnectWithoutUpdateduserInput | roleCreateOrConnectWithoutUpdateduserInput[]
    createMany?: roleCreateManyUpdateduserInputEnvelope
    connect?: roleWhereUniqueInput | roleWhereUniqueInput[]
  }

  export type rolepermissionUncheckedCreateNestedManyWithoutCreateduserInput = {
    create?: XOR<rolepermissionCreateWithoutCreateduserInput, rolepermissionUncheckedCreateWithoutCreateduserInput> | rolepermissionCreateWithoutCreateduserInput[] | rolepermissionUncheckedCreateWithoutCreateduserInput[]
    connectOrCreate?: rolepermissionCreateOrConnectWithoutCreateduserInput | rolepermissionCreateOrConnectWithoutCreateduserInput[]
    createMany?: rolepermissionCreateManyCreateduserInputEnvelope
    connect?: rolepermissionWhereUniqueInput | rolepermissionWhereUniqueInput[]
  }

  export type rolepermissionUncheckedCreateNestedManyWithoutUpdateduserInput = {
    create?: XOR<rolepermissionCreateWithoutUpdateduserInput, rolepermissionUncheckedCreateWithoutUpdateduserInput> | rolepermissionCreateWithoutUpdateduserInput[] | rolepermissionUncheckedCreateWithoutUpdateduserInput[]
    connectOrCreate?: rolepermissionCreateOrConnectWithoutUpdateduserInput | rolepermissionCreateOrConnectWithoutUpdateduserInput[]
    createMany?: rolepermissionCreateManyUpdateduserInputEnvelope
    connect?: rolepermissionWhereUniqueInput | rolepermissionWhereUniqueInput[]
  }

  export type userUncheckedCreateNestedManyWithoutCreateduserInput = {
    create?: XOR<userCreateWithoutCreateduserInput, userUncheckedCreateWithoutCreateduserInput> | userCreateWithoutCreateduserInput[] | userUncheckedCreateWithoutCreateduserInput[]
    connectOrCreate?: userCreateOrConnectWithoutCreateduserInput | userCreateOrConnectWithoutCreateduserInput[]
    createMany?: userCreateManyCreateduserInputEnvelope
    connect?: userWhereUniqueInput | userWhereUniqueInput[]
  }

  export type userUncheckedCreateNestedManyWithoutUpdateduserInput = {
    create?: XOR<userCreateWithoutUpdateduserInput, userUncheckedCreateWithoutUpdateduserInput> | userCreateWithoutUpdateduserInput[] | userUncheckedCreateWithoutUpdateduserInput[]
    connectOrCreate?: userCreateOrConnectWithoutUpdateduserInput | userCreateOrConnectWithoutUpdateduserInput[]
    createMany?: userCreateManyUpdateduserInputEnvelope
    connect?: userWhereUniqueInput | userWhereUniqueInput[]
  }

  export type userpermissionUncheckedCreateNestedManyWithoutCreateduserInput = {
    create?: XOR<userpermissionCreateWithoutCreateduserInput, userpermissionUncheckedCreateWithoutCreateduserInput> | userpermissionCreateWithoutCreateduserInput[] | userpermissionUncheckedCreateWithoutCreateduserInput[]
    connectOrCreate?: userpermissionCreateOrConnectWithoutCreateduserInput | userpermissionCreateOrConnectWithoutCreateduserInput[]
    createMany?: userpermissionCreateManyCreateduserInputEnvelope
    connect?: userpermissionWhereUniqueInput | userpermissionWhereUniqueInput[]
  }

  export type userpermissionUncheckedCreateNestedManyWithoutUpdateduserInput = {
    create?: XOR<userpermissionCreateWithoutUpdateduserInput, userpermissionUncheckedCreateWithoutUpdateduserInput> | userpermissionCreateWithoutUpdateduserInput[] | userpermissionUncheckedCreateWithoutUpdateduserInput[]
    connectOrCreate?: userpermissionCreateOrConnectWithoutUpdateduserInput | userpermissionCreateOrConnectWithoutUpdateduserInput[]
    createMany?: userpermissionCreateManyUpdateduserInputEnvelope
    connect?: userpermissionWhereUniqueInput | userpermissionWhereUniqueInput[]
  }

  export type userpermissionUncheckedCreateNestedManyWithoutUserInput = {
    create?: XOR<userpermissionCreateWithoutUserInput, userpermissionUncheckedCreateWithoutUserInput> | userpermissionCreateWithoutUserInput[] | userpermissionUncheckedCreateWithoutUserInput[]
    connectOrCreate?: userpermissionCreateOrConnectWithoutUserInput | userpermissionCreateOrConnectWithoutUserInput[]
    createMany?: userpermissionCreateManyUserInputEnvelope
    connect?: userpermissionWhereUniqueInput | userpermissionWhereUniqueInput[]
  }

  export type userroleUncheckedCreateNestedManyWithoutCreateduserInput = {
    create?: XOR<userroleCreateWithoutCreateduserInput, userroleUncheckedCreateWithoutCreateduserInput> | userroleCreateWithoutCreateduserInput[] | userroleUncheckedCreateWithoutCreateduserInput[]
    connectOrCreate?: userroleCreateOrConnectWithoutCreateduserInput | userroleCreateOrConnectWithoutCreateduserInput[]
    createMany?: userroleCreateManyCreateduserInputEnvelope
    connect?: userroleWhereUniqueInput | userroleWhereUniqueInput[]
  }

  export type userroleUncheckedCreateNestedManyWithoutUpdateduserInput = {
    create?: XOR<userroleCreateWithoutUpdateduserInput, userroleUncheckedCreateWithoutUpdateduserInput> | userroleCreateWithoutUpdateduserInput[] | userroleUncheckedCreateWithoutUpdateduserInput[]
    connectOrCreate?: userroleCreateOrConnectWithoutUpdateduserInput | userroleCreateOrConnectWithoutUpdateduserInput[]
    createMany?: userroleCreateManyUpdateduserInputEnvelope
    connect?: userroleWhereUniqueInput | userroleWhereUniqueInput[]
  }

  export type userroleUncheckedCreateNestedManyWithoutUserInput = {
    create?: XOR<userroleCreateWithoutUserInput, userroleUncheckedCreateWithoutUserInput> | userroleCreateWithoutUserInput[] | userroleUncheckedCreateWithoutUserInput[]
    connectOrCreate?: userroleCreateOrConnectWithoutUserInput | userroleCreateOrConnectWithoutUserInput[]
    createMany?: userroleCreateManyUserInputEnvelope
    connect?: userroleWhereUniqueInput | userroleWhereUniqueInput[]
  }

  export type languagesUncheckedCreateNestedManyWithoutUserInput = {
    create?: XOR<languagesCreateWithoutUserInput, languagesUncheckedCreateWithoutUserInput> | languagesCreateWithoutUserInput[] | languagesUncheckedCreateWithoutUserInput[]
    connectOrCreate?: languagesCreateOrConnectWithoutUserInput | languagesCreateOrConnectWithoutUserInput[]
    connect?: languagesWhereUniqueInput | languagesWhereUniqueInput[]
  }

  export type learningProgressUncheckedCreateNestedManyWithoutUserInput = {
    create?: XOR<learningProgressCreateWithoutUserInput, learningProgressUncheckedCreateWithoutUserInput> | learningProgressCreateWithoutUserInput[] | learningProgressUncheckedCreateWithoutUserInput[]
    connectOrCreate?: learningProgressCreateOrConnectWithoutUserInput | learningProgressCreateOrConnectWithoutUserInput[]
    createMany?: learningProgressCreateManyUserInputEnvelope
    connect?: learningProgressWhereUniqueInput | learningProgressWhereUniqueInput[]
  }

  export type chatUncheckedCreateNestedManyWithoutUserInput = {
    create?: XOR<chatCreateWithoutUserInput, chatUncheckedCreateWithoutUserInput> | chatCreateWithoutUserInput[] | chatUncheckedCreateWithoutUserInput[]
    connectOrCreate?: chatCreateOrConnectWithoutUserInput | chatCreateOrConnectWithoutUserInput[]
    createMany?: chatCreateManyUserInputEnvelope
    connect?: chatWhereUniqueInput | chatWhereUniqueInput[]
  }

  export type chatRoomUncheckedCreateNestedManyWithoutUserInput = {
    create?: XOR<chatRoomCreateWithoutUserInput, chatRoomUncheckedCreateWithoutUserInput> | chatRoomCreateWithoutUserInput[] | chatRoomUncheckedCreateWithoutUserInput[]
    connectOrCreate?: chatRoomCreateOrConnectWithoutUserInput | chatRoomCreateOrConnectWithoutUserInput[]
    createMany?: chatRoomCreateManyUserInputEnvelope
    connect?: chatRoomWhereUniqueInput | chatRoomWhereUniqueInput[]
  }

  export type subscriptionUncheckedCreateNestedManyWithoutUserInput = {
    create?: XOR<subscriptionCreateWithoutUserInput, subscriptionUncheckedCreateWithoutUserInput> | subscriptionCreateWithoutUserInput[] | subscriptionUncheckedCreateWithoutUserInput[]
    connectOrCreate?: subscriptionCreateOrConnectWithoutUserInput | subscriptionCreateOrConnectWithoutUserInput[]
    createMany?: subscriptionCreateManyUserInputEnvelope
    connect?: subscriptionWhereUniqueInput | subscriptionWhereUniqueInput[]
  }

  export type notificationUpdateManyWithoutToNestedInput = {
    create?: XOR<notificationCreateWithoutToInput, notificationUncheckedCreateWithoutToInput> | notificationCreateWithoutToInput[] | notificationUncheckedCreateWithoutToInput[]
    connectOrCreate?: notificationCreateOrConnectWithoutToInput | notificationCreateOrConnectWithoutToInput[]
    upsert?: notificationUpsertWithWhereUniqueWithoutToInput | notificationUpsertWithWhereUniqueWithoutToInput[]
    createMany?: notificationCreateManyToInputEnvelope
    set?: notificationWhereUniqueInput | notificationWhereUniqueInput[]
    disconnect?: notificationWhereUniqueInput | notificationWhereUniqueInput[]
    delete?: notificationWhereUniqueInput | notificationWhereUniqueInput[]
    connect?: notificationWhereUniqueInput | notificationWhereUniqueInput[]
    update?: notificationUpdateWithWhereUniqueWithoutToInput | notificationUpdateWithWhereUniqueWithoutToInput[]
    updateMany?: notificationUpdateManyWithWhereWithoutToInput | notificationUpdateManyWithWhereWithoutToInput[]
    deleteMany?: notificationScalarWhereInput | notificationScalarWhereInput[]
  }

  export type apiclientUpdateManyWithoutCreateduserNestedInput = {
    create?: XOR<apiclientCreateWithoutCreateduserInput, apiclientUncheckedCreateWithoutCreateduserInput> | apiclientCreateWithoutCreateduserInput[] | apiclientUncheckedCreateWithoutCreateduserInput[]
    connectOrCreate?: apiclientCreateOrConnectWithoutCreateduserInput | apiclientCreateOrConnectWithoutCreateduserInput[]
    upsert?: apiclientUpsertWithWhereUniqueWithoutCreateduserInput | apiclientUpsertWithWhereUniqueWithoutCreateduserInput[]
    createMany?: apiclientCreateManyCreateduserInputEnvelope
    set?: apiclientWhereUniqueInput | apiclientWhereUniqueInput[]
    disconnect?: apiclientWhereUniqueInput | apiclientWhereUniqueInput[]
    delete?: apiclientWhereUniqueInput | apiclientWhereUniqueInput[]
    connect?: apiclientWhereUniqueInput | apiclientWhereUniqueInput[]
    update?: apiclientUpdateWithWhereUniqueWithoutCreateduserInput | apiclientUpdateWithWhereUniqueWithoutCreateduserInput[]
    updateMany?: apiclientUpdateManyWithWhereWithoutCreateduserInput | apiclientUpdateManyWithWhereWithoutCreateduserInput[]
    deleteMany?: apiclientScalarWhereInput | apiclientScalarWhereInput[]
  }

  export type apiclientUpdateManyWithoutUpdateduserNestedInput = {
    create?: XOR<apiclientCreateWithoutUpdateduserInput, apiclientUncheckedCreateWithoutUpdateduserInput> | apiclientCreateWithoutUpdateduserInput[] | apiclientUncheckedCreateWithoutUpdateduserInput[]
    connectOrCreate?: apiclientCreateOrConnectWithoutUpdateduserInput | apiclientCreateOrConnectWithoutUpdateduserInput[]
    upsert?: apiclientUpsertWithWhereUniqueWithoutUpdateduserInput | apiclientUpsertWithWhereUniqueWithoutUpdateduserInput[]
    createMany?: apiclientCreateManyUpdateduserInputEnvelope
    set?: apiclientWhereUniqueInput | apiclientWhereUniqueInput[]
    disconnect?: apiclientWhereUniqueInput | apiclientWhereUniqueInput[]
    delete?: apiclientWhereUniqueInput | apiclientWhereUniqueInput[]
    connect?: apiclientWhereUniqueInput | apiclientWhereUniqueInput[]
    update?: apiclientUpdateWithWhereUniqueWithoutUpdateduserInput | apiclientUpdateWithWhereUniqueWithoutUpdateduserInput[]
    updateMany?: apiclientUpdateManyWithWhereWithoutUpdateduserInput | apiclientUpdateManyWithWhereWithoutUpdateduserInput[]
    deleteMany?: apiclientScalarWhereInput | apiclientScalarWhereInput[]
  }

  export type permissionUpdateManyWithoutCreateduserNestedInput = {
    create?: XOR<permissionCreateWithoutCreateduserInput, permissionUncheckedCreateWithoutCreateduserInput> | permissionCreateWithoutCreateduserInput[] | permissionUncheckedCreateWithoutCreateduserInput[]
    connectOrCreate?: permissionCreateOrConnectWithoutCreateduserInput | permissionCreateOrConnectWithoutCreateduserInput[]
    upsert?: permissionUpsertWithWhereUniqueWithoutCreateduserInput | permissionUpsertWithWhereUniqueWithoutCreateduserInput[]
    createMany?: permissionCreateManyCreateduserInputEnvelope
    set?: permissionWhereUniqueInput | permissionWhereUniqueInput[]
    disconnect?: permissionWhereUniqueInput | permissionWhereUniqueInput[]
    delete?: permissionWhereUniqueInput | permissionWhereUniqueInput[]
    connect?: permissionWhereUniqueInput | permissionWhereUniqueInput[]
    update?: permissionUpdateWithWhereUniqueWithoutCreateduserInput | permissionUpdateWithWhereUniqueWithoutCreateduserInput[]
    updateMany?: permissionUpdateManyWithWhereWithoutCreateduserInput | permissionUpdateManyWithWhereWithoutCreateduserInput[]
    deleteMany?: permissionScalarWhereInput | permissionScalarWhereInput[]
  }

  export type permissionUpdateManyWithoutUpdateduserNestedInput = {
    create?: XOR<permissionCreateWithoutUpdateduserInput, permissionUncheckedCreateWithoutUpdateduserInput> | permissionCreateWithoutUpdateduserInput[] | permissionUncheckedCreateWithoutUpdateduserInput[]
    connectOrCreate?: permissionCreateOrConnectWithoutUpdateduserInput | permissionCreateOrConnectWithoutUpdateduserInput[]
    upsert?: permissionUpsertWithWhereUniqueWithoutUpdateduserInput | permissionUpsertWithWhereUniqueWithoutUpdateduserInput[]
    createMany?: permissionCreateManyUpdateduserInputEnvelope
    set?: permissionWhereUniqueInput | permissionWhereUniqueInput[]
    disconnect?: permissionWhereUniqueInput | permissionWhereUniqueInput[]
    delete?: permissionWhereUniqueInput | permissionWhereUniqueInput[]
    connect?: permissionWhereUniqueInput | permissionWhereUniqueInput[]
    update?: permissionUpdateWithWhereUniqueWithoutUpdateduserInput | permissionUpdateWithWhereUniqueWithoutUpdateduserInput[]
    updateMany?: permissionUpdateManyWithWhereWithoutUpdateduserInput | permissionUpdateManyWithWhereWithoutUpdateduserInput[]
    deleteMany?: permissionScalarWhereInput | permissionScalarWhereInput[]
  }

  export type refreshtokenUpdateManyWithoutUserNestedInput = {
    create?: XOR<refreshtokenCreateWithoutUserInput, refreshtokenUncheckedCreateWithoutUserInput> | refreshtokenCreateWithoutUserInput[] | refreshtokenUncheckedCreateWithoutUserInput[]
    connectOrCreate?: refreshtokenCreateOrConnectWithoutUserInput | refreshtokenCreateOrConnectWithoutUserInput[]
    upsert?: refreshtokenUpsertWithWhereUniqueWithoutUserInput | refreshtokenUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: refreshtokenCreateManyUserInputEnvelope
    set?: refreshtokenWhereUniqueInput | refreshtokenWhereUniqueInput[]
    disconnect?: refreshtokenWhereUniqueInput | refreshtokenWhereUniqueInput[]
    delete?: refreshtokenWhereUniqueInput | refreshtokenWhereUniqueInput[]
    connect?: refreshtokenWhereUniqueInput | refreshtokenWhereUniqueInput[]
    update?: refreshtokenUpdateWithWhereUniqueWithoutUserInput | refreshtokenUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: refreshtokenUpdateManyWithWhereWithoutUserInput | refreshtokenUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: refreshtokenScalarWhereInput | refreshtokenScalarWhereInput[]
  }

  export type roleUpdateManyWithoutCreateduserNestedInput = {
    create?: XOR<roleCreateWithoutCreateduserInput, roleUncheckedCreateWithoutCreateduserInput> | roleCreateWithoutCreateduserInput[] | roleUncheckedCreateWithoutCreateduserInput[]
    connectOrCreate?: roleCreateOrConnectWithoutCreateduserInput | roleCreateOrConnectWithoutCreateduserInput[]
    upsert?: roleUpsertWithWhereUniqueWithoutCreateduserInput | roleUpsertWithWhereUniqueWithoutCreateduserInput[]
    createMany?: roleCreateManyCreateduserInputEnvelope
    set?: roleWhereUniqueInput | roleWhereUniqueInput[]
    disconnect?: roleWhereUniqueInput | roleWhereUniqueInput[]
    delete?: roleWhereUniqueInput | roleWhereUniqueInput[]
    connect?: roleWhereUniqueInput | roleWhereUniqueInput[]
    update?: roleUpdateWithWhereUniqueWithoutCreateduserInput | roleUpdateWithWhereUniqueWithoutCreateduserInput[]
    updateMany?: roleUpdateManyWithWhereWithoutCreateduserInput | roleUpdateManyWithWhereWithoutCreateduserInput[]
    deleteMany?: roleScalarWhereInput | roleScalarWhereInput[]
  }

  export type roleUpdateManyWithoutUpdateduserNestedInput = {
    create?: XOR<roleCreateWithoutUpdateduserInput, roleUncheckedCreateWithoutUpdateduserInput> | roleCreateWithoutUpdateduserInput[] | roleUncheckedCreateWithoutUpdateduserInput[]
    connectOrCreate?: roleCreateOrConnectWithoutUpdateduserInput | roleCreateOrConnectWithoutUpdateduserInput[]
    upsert?: roleUpsertWithWhereUniqueWithoutUpdateduserInput | roleUpsertWithWhereUniqueWithoutUpdateduserInput[]
    createMany?: roleCreateManyUpdateduserInputEnvelope
    set?: roleWhereUniqueInput | roleWhereUniqueInput[]
    disconnect?: roleWhereUniqueInput | roleWhereUniqueInput[]
    delete?: roleWhereUniqueInput | roleWhereUniqueInput[]
    connect?: roleWhereUniqueInput | roleWhereUniqueInput[]
    update?: roleUpdateWithWhereUniqueWithoutUpdateduserInput | roleUpdateWithWhereUniqueWithoutUpdateduserInput[]
    updateMany?: roleUpdateManyWithWhereWithoutUpdateduserInput | roleUpdateManyWithWhereWithoutUpdateduserInput[]
    deleteMany?: roleScalarWhereInput | roleScalarWhereInput[]
  }

  export type rolepermissionUpdateManyWithoutCreateduserNestedInput = {
    create?: XOR<rolepermissionCreateWithoutCreateduserInput, rolepermissionUncheckedCreateWithoutCreateduserInput> | rolepermissionCreateWithoutCreateduserInput[] | rolepermissionUncheckedCreateWithoutCreateduserInput[]
    connectOrCreate?: rolepermissionCreateOrConnectWithoutCreateduserInput | rolepermissionCreateOrConnectWithoutCreateduserInput[]
    upsert?: rolepermissionUpsertWithWhereUniqueWithoutCreateduserInput | rolepermissionUpsertWithWhereUniqueWithoutCreateduserInput[]
    createMany?: rolepermissionCreateManyCreateduserInputEnvelope
    set?: rolepermissionWhereUniqueInput | rolepermissionWhereUniqueInput[]
    disconnect?: rolepermissionWhereUniqueInput | rolepermissionWhereUniqueInput[]
    delete?: rolepermissionWhereUniqueInput | rolepermissionWhereUniqueInput[]
    connect?: rolepermissionWhereUniqueInput | rolepermissionWhereUniqueInput[]
    update?: rolepermissionUpdateWithWhereUniqueWithoutCreateduserInput | rolepermissionUpdateWithWhereUniqueWithoutCreateduserInput[]
    updateMany?: rolepermissionUpdateManyWithWhereWithoutCreateduserInput | rolepermissionUpdateManyWithWhereWithoutCreateduserInput[]
    deleteMany?: rolepermissionScalarWhereInput | rolepermissionScalarWhereInput[]
  }

  export type rolepermissionUpdateManyWithoutUpdateduserNestedInput = {
    create?: XOR<rolepermissionCreateWithoutUpdateduserInput, rolepermissionUncheckedCreateWithoutUpdateduserInput> | rolepermissionCreateWithoutUpdateduserInput[] | rolepermissionUncheckedCreateWithoutUpdateduserInput[]
    connectOrCreate?: rolepermissionCreateOrConnectWithoutUpdateduserInput | rolepermissionCreateOrConnectWithoutUpdateduserInput[]
    upsert?: rolepermissionUpsertWithWhereUniqueWithoutUpdateduserInput | rolepermissionUpsertWithWhereUniqueWithoutUpdateduserInput[]
    createMany?: rolepermissionCreateManyUpdateduserInputEnvelope
    set?: rolepermissionWhereUniqueInput | rolepermissionWhereUniqueInput[]
    disconnect?: rolepermissionWhereUniqueInput | rolepermissionWhereUniqueInput[]
    delete?: rolepermissionWhereUniqueInput | rolepermissionWhereUniqueInput[]
    connect?: rolepermissionWhereUniqueInput | rolepermissionWhereUniqueInput[]
    update?: rolepermissionUpdateWithWhereUniqueWithoutUpdateduserInput | rolepermissionUpdateWithWhereUniqueWithoutUpdateduserInput[]
    updateMany?: rolepermissionUpdateManyWithWhereWithoutUpdateduserInput | rolepermissionUpdateManyWithWhereWithoutUpdateduserInput[]
    deleteMany?: rolepermissionScalarWhereInput | rolepermissionScalarWhereInput[]
  }

  export type userUpdateOneRequiredWithoutCreatedusersNestedInput = {
    create?: XOR<userCreateWithoutCreatedusersInput, userUncheckedCreateWithoutCreatedusersInput>
    connectOrCreate?: userCreateOrConnectWithoutCreatedusersInput
    upsert?: userUpsertWithoutCreatedusersInput
    connect?: userWhereUniqueInput
    update?: XOR<XOR<userUpdateToOneWithWhereWithoutCreatedusersInput, userUpdateWithoutCreatedusersInput>, userUncheckedUpdateWithoutCreatedusersInput>
  }

  export type userUpdateManyWithoutCreateduserNestedInput = {
    create?: XOR<userCreateWithoutCreateduserInput, userUncheckedCreateWithoutCreateduserInput> | userCreateWithoutCreateduserInput[] | userUncheckedCreateWithoutCreateduserInput[]
    connectOrCreate?: userCreateOrConnectWithoutCreateduserInput | userCreateOrConnectWithoutCreateduserInput[]
    upsert?: userUpsertWithWhereUniqueWithoutCreateduserInput | userUpsertWithWhereUniqueWithoutCreateduserInput[]
    createMany?: userCreateManyCreateduserInputEnvelope
    set?: userWhereUniqueInput | userWhereUniqueInput[]
    disconnect?: userWhereUniqueInput | userWhereUniqueInput[]
    delete?: userWhereUniqueInput | userWhereUniqueInput[]
    connect?: userWhereUniqueInput | userWhereUniqueInput[]
    update?: userUpdateWithWhereUniqueWithoutCreateduserInput | userUpdateWithWhereUniqueWithoutCreateduserInput[]
    updateMany?: userUpdateManyWithWhereWithoutCreateduserInput | userUpdateManyWithWhereWithoutCreateduserInput[]
    deleteMany?: userScalarWhereInput | userScalarWhereInput[]
  }

  export type userUpdateOneWithoutUpdatedusersNestedInput = {
    create?: XOR<userCreateWithoutUpdatedusersInput, userUncheckedCreateWithoutUpdatedusersInput>
    connectOrCreate?: userCreateOrConnectWithoutUpdatedusersInput
    upsert?: userUpsertWithoutUpdatedusersInput
    disconnect?: userWhereInput | boolean
    delete?: userWhereInput | boolean
    connect?: userWhereUniqueInput
    update?: XOR<XOR<userUpdateToOneWithWhereWithoutUpdatedusersInput, userUpdateWithoutUpdatedusersInput>, userUncheckedUpdateWithoutUpdatedusersInput>
  }

  export type userUpdateManyWithoutUpdateduserNestedInput = {
    create?: XOR<userCreateWithoutUpdateduserInput, userUncheckedCreateWithoutUpdateduserInput> | userCreateWithoutUpdateduserInput[] | userUncheckedCreateWithoutUpdateduserInput[]
    connectOrCreate?: userCreateOrConnectWithoutUpdateduserInput | userCreateOrConnectWithoutUpdateduserInput[]
    upsert?: userUpsertWithWhereUniqueWithoutUpdateduserInput | userUpsertWithWhereUniqueWithoutUpdateduserInput[]
    createMany?: userCreateManyUpdateduserInputEnvelope
    set?: userWhereUniqueInput | userWhereUniqueInput[]
    disconnect?: userWhereUniqueInput | userWhereUniqueInput[]
    delete?: userWhereUniqueInput | userWhereUniqueInput[]
    connect?: userWhereUniqueInput | userWhereUniqueInput[]
    update?: userUpdateWithWhereUniqueWithoutUpdateduserInput | userUpdateWithWhereUniqueWithoutUpdateduserInput[]
    updateMany?: userUpdateManyWithWhereWithoutUpdateduserInput | userUpdateManyWithWhereWithoutUpdateduserInput[]
    deleteMany?: userScalarWhereInput | userScalarWhereInput[]
  }

  export type userpermissionUpdateManyWithoutCreateduserNestedInput = {
    create?: XOR<userpermissionCreateWithoutCreateduserInput, userpermissionUncheckedCreateWithoutCreateduserInput> | userpermissionCreateWithoutCreateduserInput[] | userpermissionUncheckedCreateWithoutCreateduserInput[]
    connectOrCreate?: userpermissionCreateOrConnectWithoutCreateduserInput | userpermissionCreateOrConnectWithoutCreateduserInput[]
    upsert?: userpermissionUpsertWithWhereUniqueWithoutCreateduserInput | userpermissionUpsertWithWhereUniqueWithoutCreateduserInput[]
    createMany?: userpermissionCreateManyCreateduserInputEnvelope
    set?: userpermissionWhereUniqueInput | userpermissionWhereUniqueInput[]
    disconnect?: userpermissionWhereUniqueInput | userpermissionWhereUniqueInput[]
    delete?: userpermissionWhereUniqueInput | userpermissionWhereUniqueInput[]
    connect?: userpermissionWhereUniqueInput | userpermissionWhereUniqueInput[]
    update?: userpermissionUpdateWithWhereUniqueWithoutCreateduserInput | userpermissionUpdateWithWhereUniqueWithoutCreateduserInput[]
    updateMany?: userpermissionUpdateManyWithWhereWithoutCreateduserInput | userpermissionUpdateManyWithWhereWithoutCreateduserInput[]
    deleteMany?: userpermissionScalarWhereInput | userpermissionScalarWhereInput[]
  }

  export type userpermissionUpdateManyWithoutUpdateduserNestedInput = {
    create?: XOR<userpermissionCreateWithoutUpdateduserInput, userpermissionUncheckedCreateWithoutUpdateduserInput> | userpermissionCreateWithoutUpdateduserInput[] | userpermissionUncheckedCreateWithoutUpdateduserInput[]
    connectOrCreate?: userpermissionCreateOrConnectWithoutUpdateduserInput | userpermissionCreateOrConnectWithoutUpdateduserInput[]
    upsert?: userpermissionUpsertWithWhereUniqueWithoutUpdateduserInput | userpermissionUpsertWithWhereUniqueWithoutUpdateduserInput[]
    createMany?: userpermissionCreateManyUpdateduserInputEnvelope
    set?: userpermissionWhereUniqueInput | userpermissionWhereUniqueInput[]
    disconnect?: userpermissionWhereUniqueInput | userpermissionWhereUniqueInput[]
    delete?: userpermissionWhereUniqueInput | userpermissionWhereUniqueInput[]
    connect?: userpermissionWhereUniqueInput | userpermissionWhereUniqueInput[]
    update?: userpermissionUpdateWithWhereUniqueWithoutUpdateduserInput | userpermissionUpdateWithWhereUniqueWithoutUpdateduserInput[]
    updateMany?: userpermissionUpdateManyWithWhereWithoutUpdateduserInput | userpermissionUpdateManyWithWhereWithoutUpdateduserInput[]
    deleteMany?: userpermissionScalarWhereInput | userpermissionScalarWhereInput[]
  }

  export type userpermissionUpdateManyWithoutUserNestedInput = {
    create?: XOR<userpermissionCreateWithoutUserInput, userpermissionUncheckedCreateWithoutUserInput> | userpermissionCreateWithoutUserInput[] | userpermissionUncheckedCreateWithoutUserInput[]
    connectOrCreate?: userpermissionCreateOrConnectWithoutUserInput | userpermissionCreateOrConnectWithoutUserInput[]
    upsert?: userpermissionUpsertWithWhereUniqueWithoutUserInput | userpermissionUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: userpermissionCreateManyUserInputEnvelope
    set?: userpermissionWhereUniqueInput | userpermissionWhereUniqueInput[]
    disconnect?: userpermissionWhereUniqueInput | userpermissionWhereUniqueInput[]
    delete?: userpermissionWhereUniqueInput | userpermissionWhereUniqueInput[]
    connect?: userpermissionWhereUniqueInput | userpermissionWhereUniqueInput[]
    update?: userpermissionUpdateWithWhereUniqueWithoutUserInput | userpermissionUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: userpermissionUpdateManyWithWhereWithoutUserInput | userpermissionUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: userpermissionScalarWhereInput | userpermissionScalarWhereInput[]
  }

  export type userroleUpdateManyWithoutCreateduserNestedInput = {
    create?: XOR<userroleCreateWithoutCreateduserInput, userroleUncheckedCreateWithoutCreateduserInput> | userroleCreateWithoutCreateduserInput[] | userroleUncheckedCreateWithoutCreateduserInput[]
    connectOrCreate?: userroleCreateOrConnectWithoutCreateduserInput | userroleCreateOrConnectWithoutCreateduserInput[]
    upsert?: userroleUpsertWithWhereUniqueWithoutCreateduserInput | userroleUpsertWithWhereUniqueWithoutCreateduserInput[]
    createMany?: userroleCreateManyCreateduserInputEnvelope
    set?: userroleWhereUniqueInput | userroleWhereUniqueInput[]
    disconnect?: userroleWhereUniqueInput | userroleWhereUniqueInput[]
    delete?: userroleWhereUniqueInput | userroleWhereUniqueInput[]
    connect?: userroleWhereUniqueInput | userroleWhereUniqueInput[]
    update?: userroleUpdateWithWhereUniqueWithoutCreateduserInput | userroleUpdateWithWhereUniqueWithoutCreateduserInput[]
    updateMany?: userroleUpdateManyWithWhereWithoutCreateduserInput | userroleUpdateManyWithWhereWithoutCreateduserInput[]
    deleteMany?: userroleScalarWhereInput | userroleScalarWhereInput[]
  }

  export type userroleUpdateManyWithoutUpdateduserNestedInput = {
    create?: XOR<userroleCreateWithoutUpdateduserInput, userroleUncheckedCreateWithoutUpdateduserInput> | userroleCreateWithoutUpdateduserInput[] | userroleUncheckedCreateWithoutUpdateduserInput[]
    connectOrCreate?: userroleCreateOrConnectWithoutUpdateduserInput | userroleCreateOrConnectWithoutUpdateduserInput[]
    upsert?: userroleUpsertWithWhereUniqueWithoutUpdateduserInput | userroleUpsertWithWhereUniqueWithoutUpdateduserInput[]
    createMany?: userroleCreateManyUpdateduserInputEnvelope
    set?: userroleWhereUniqueInput | userroleWhereUniqueInput[]
    disconnect?: userroleWhereUniqueInput | userroleWhereUniqueInput[]
    delete?: userroleWhereUniqueInput | userroleWhereUniqueInput[]
    connect?: userroleWhereUniqueInput | userroleWhereUniqueInput[]
    update?: userroleUpdateWithWhereUniqueWithoutUpdateduserInput | userroleUpdateWithWhereUniqueWithoutUpdateduserInput[]
    updateMany?: userroleUpdateManyWithWhereWithoutUpdateduserInput | userroleUpdateManyWithWhereWithoutUpdateduserInput[]
    deleteMany?: userroleScalarWhereInput | userroleScalarWhereInput[]
  }

  export type userroleUpdateManyWithoutUserNestedInput = {
    create?: XOR<userroleCreateWithoutUserInput, userroleUncheckedCreateWithoutUserInput> | userroleCreateWithoutUserInput[] | userroleUncheckedCreateWithoutUserInput[]
    connectOrCreate?: userroleCreateOrConnectWithoutUserInput | userroleCreateOrConnectWithoutUserInput[]
    upsert?: userroleUpsertWithWhereUniqueWithoutUserInput | userroleUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: userroleCreateManyUserInputEnvelope
    set?: userroleWhereUniqueInput | userroleWhereUniqueInput[]
    disconnect?: userroleWhereUniqueInput | userroleWhereUniqueInput[]
    delete?: userroleWhereUniqueInput | userroleWhereUniqueInput[]
    connect?: userroleWhereUniqueInput | userroleWhereUniqueInput[]
    update?: userroleUpdateWithWhereUniqueWithoutUserInput | userroleUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: userroleUpdateManyWithWhereWithoutUserInput | userroleUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: userroleScalarWhereInput | userroleScalarWhereInput[]
  }

  export type languagesUpdateManyWithoutUserNestedInput = {
    create?: XOR<languagesCreateWithoutUserInput, languagesUncheckedCreateWithoutUserInput> | languagesCreateWithoutUserInput[] | languagesUncheckedCreateWithoutUserInput[]
    connectOrCreate?: languagesCreateOrConnectWithoutUserInput | languagesCreateOrConnectWithoutUserInput[]
    upsert?: languagesUpsertWithWhereUniqueWithoutUserInput | languagesUpsertWithWhereUniqueWithoutUserInput[]
    set?: languagesWhereUniqueInput | languagesWhereUniqueInput[]
    disconnect?: languagesWhereUniqueInput | languagesWhereUniqueInput[]
    delete?: languagesWhereUniqueInput | languagesWhereUniqueInput[]
    connect?: languagesWhereUniqueInput | languagesWhereUniqueInput[]
    update?: languagesUpdateWithWhereUniqueWithoutUserInput | languagesUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: languagesUpdateManyWithWhereWithoutUserInput | languagesUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: languagesScalarWhereInput | languagesScalarWhereInput[]
  }

  export type learningProgressUpdateManyWithoutUserNestedInput = {
    create?: XOR<learningProgressCreateWithoutUserInput, learningProgressUncheckedCreateWithoutUserInput> | learningProgressCreateWithoutUserInput[] | learningProgressUncheckedCreateWithoutUserInput[]
    connectOrCreate?: learningProgressCreateOrConnectWithoutUserInput | learningProgressCreateOrConnectWithoutUserInput[]
    upsert?: learningProgressUpsertWithWhereUniqueWithoutUserInput | learningProgressUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: learningProgressCreateManyUserInputEnvelope
    set?: learningProgressWhereUniqueInput | learningProgressWhereUniqueInput[]
    disconnect?: learningProgressWhereUniqueInput | learningProgressWhereUniqueInput[]
    delete?: learningProgressWhereUniqueInput | learningProgressWhereUniqueInput[]
    connect?: learningProgressWhereUniqueInput | learningProgressWhereUniqueInput[]
    update?: learningProgressUpdateWithWhereUniqueWithoutUserInput | learningProgressUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: learningProgressUpdateManyWithWhereWithoutUserInput | learningProgressUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: learningProgressScalarWhereInput | learningProgressScalarWhereInput[]
  }

  export type chatUpdateManyWithoutUserNestedInput = {
    create?: XOR<chatCreateWithoutUserInput, chatUncheckedCreateWithoutUserInput> | chatCreateWithoutUserInput[] | chatUncheckedCreateWithoutUserInput[]
    connectOrCreate?: chatCreateOrConnectWithoutUserInput | chatCreateOrConnectWithoutUserInput[]
    upsert?: chatUpsertWithWhereUniqueWithoutUserInput | chatUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: chatCreateManyUserInputEnvelope
    set?: chatWhereUniqueInput | chatWhereUniqueInput[]
    disconnect?: chatWhereUniqueInput | chatWhereUniqueInput[]
    delete?: chatWhereUniqueInput | chatWhereUniqueInput[]
    connect?: chatWhereUniqueInput | chatWhereUniqueInput[]
    update?: chatUpdateWithWhereUniqueWithoutUserInput | chatUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: chatUpdateManyWithWhereWithoutUserInput | chatUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: chatScalarWhereInput | chatScalarWhereInput[]
  }

  export type chatRoomUpdateManyWithoutUserNestedInput = {
    create?: XOR<chatRoomCreateWithoutUserInput, chatRoomUncheckedCreateWithoutUserInput> | chatRoomCreateWithoutUserInput[] | chatRoomUncheckedCreateWithoutUserInput[]
    connectOrCreate?: chatRoomCreateOrConnectWithoutUserInput | chatRoomCreateOrConnectWithoutUserInput[]
    upsert?: chatRoomUpsertWithWhereUniqueWithoutUserInput | chatRoomUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: chatRoomCreateManyUserInputEnvelope
    set?: chatRoomWhereUniqueInput | chatRoomWhereUniqueInput[]
    disconnect?: chatRoomWhereUniqueInput | chatRoomWhereUniqueInput[]
    delete?: chatRoomWhereUniqueInput | chatRoomWhereUniqueInput[]
    connect?: chatRoomWhereUniqueInput | chatRoomWhereUniqueInput[]
    update?: chatRoomUpdateWithWhereUniqueWithoutUserInput | chatRoomUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: chatRoomUpdateManyWithWhereWithoutUserInput | chatRoomUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: chatRoomScalarWhereInput | chatRoomScalarWhereInput[]
  }

  export type subscriptionUpdateManyWithoutUserNestedInput = {
    create?: XOR<subscriptionCreateWithoutUserInput, subscriptionUncheckedCreateWithoutUserInput> | subscriptionCreateWithoutUserInput[] | subscriptionUncheckedCreateWithoutUserInput[]
    connectOrCreate?: subscriptionCreateOrConnectWithoutUserInput | subscriptionCreateOrConnectWithoutUserInput[]
    upsert?: subscriptionUpsertWithWhereUniqueWithoutUserInput | subscriptionUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: subscriptionCreateManyUserInputEnvelope
    set?: subscriptionWhereUniqueInput | subscriptionWhereUniqueInput[]
    disconnect?: subscriptionWhereUniqueInput | subscriptionWhereUniqueInput[]
    delete?: subscriptionWhereUniqueInput | subscriptionWhereUniqueInput[]
    connect?: subscriptionWhereUniqueInput | subscriptionWhereUniqueInput[]
    update?: subscriptionUpdateWithWhereUniqueWithoutUserInput | subscriptionUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: subscriptionUpdateManyWithWhereWithoutUserInput | subscriptionUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: subscriptionScalarWhereInput | subscriptionScalarWhereInput[]
  }

  export type notificationUncheckedUpdateManyWithoutToNestedInput = {
    create?: XOR<notificationCreateWithoutToInput, notificationUncheckedCreateWithoutToInput> | notificationCreateWithoutToInput[] | notificationUncheckedCreateWithoutToInput[]
    connectOrCreate?: notificationCreateOrConnectWithoutToInput | notificationCreateOrConnectWithoutToInput[]
    upsert?: notificationUpsertWithWhereUniqueWithoutToInput | notificationUpsertWithWhereUniqueWithoutToInput[]
    createMany?: notificationCreateManyToInputEnvelope
    set?: notificationWhereUniqueInput | notificationWhereUniqueInput[]
    disconnect?: notificationWhereUniqueInput | notificationWhereUniqueInput[]
    delete?: notificationWhereUniqueInput | notificationWhereUniqueInput[]
    connect?: notificationWhereUniqueInput | notificationWhereUniqueInput[]
    update?: notificationUpdateWithWhereUniqueWithoutToInput | notificationUpdateWithWhereUniqueWithoutToInput[]
    updateMany?: notificationUpdateManyWithWhereWithoutToInput | notificationUpdateManyWithWhereWithoutToInput[]
    deleteMany?: notificationScalarWhereInput | notificationScalarWhereInput[]
  }

  export type apiclientUncheckedUpdateManyWithoutCreateduserNestedInput = {
    create?: XOR<apiclientCreateWithoutCreateduserInput, apiclientUncheckedCreateWithoutCreateduserInput> | apiclientCreateWithoutCreateduserInput[] | apiclientUncheckedCreateWithoutCreateduserInput[]
    connectOrCreate?: apiclientCreateOrConnectWithoutCreateduserInput | apiclientCreateOrConnectWithoutCreateduserInput[]
    upsert?: apiclientUpsertWithWhereUniqueWithoutCreateduserInput | apiclientUpsertWithWhereUniqueWithoutCreateduserInput[]
    createMany?: apiclientCreateManyCreateduserInputEnvelope
    set?: apiclientWhereUniqueInput | apiclientWhereUniqueInput[]
    disconnect?: apiclientWhereUniqueInput | apiclientWhereUniqueInput[]
    delete?: apiclientWhereUniqueInput | apiclientWhereUniqueInput[]
    connect?: apiclientWhereUniqueInput | apiclientWhereUniqueInput[]
    update?: apiclientUpdateWithWhereUniqueWithoutCreateduserInput | apiclientUpdateWithWhereUniqueWithoutCreateduserInput[]
    updateMany?: apiclientUpdateManyWithWhereWithoutCreateduserInput | apiclientUpdateManyWithWhereWithoutCreateduserInput[]
    deleteMany?: apiclientScalarWhereInput | apiclientScalarWhereInput[]
  }

  export type apiclientUncheckedUpdateManyWithoutUpdateduserNestedInput = {
    create?: XOR<apiclientCreateWithoutUpdateduserInput, apiclientUncheckedCreateWithoutUpdateduserInput> | apiclientCreateWithoutUpdateduserInput[] | apiclientUncheckedCreateWithoutUpdateduserInput[]
    connectOrCreate?: apiclientCreateOrConnectWithoutUpdateduserInput | apiclientCreateOrConnectWithoutUpdateduserInput[]
    upsert?: apiclientUpsertWithWhereUniqueWithoutUpdateduserInput | apiclientUpsertWithWhereUniqueWithoutUpdateduserInput[]
    createMany?: apiclientCreateManyUpdateduserInputEnvelope
    set?: apiclientWhereUniqueInput | apiclientWhereUniqueInput[]
    disconnect?: apiclientWhereUniqueInput | apiclientWhereUniqueInput[]
    delete?: apiclientWhereUniqueInput | apiclientWhereUniqueInput[]
    connect?: apiclientWhereUniqueInput | apiclientWhereUniqueInput[]
    update?: apiclientUpdateWithWhereUniqueWithoutUpdateduserInput | apiclientUpdateWithWhereUniqueWithoutUpdateduserInput[]
    updateMany?: apiclientUpdateManyWithWhereWithoutUpdateduserInput | apiclientUpdateManyWithWhereWithoutUpdateduserInput[]
    deleteMany?: apiclientScalarWhereInput | apiclientScalarWhereInput[]
  }

  export type permissionUncheckedUpdateManyWithoutCreateduserNestedInput = {
    create?: XOR<permissionCreateWithoutCreateduserInput, permissionUncheckedCreateWithoutCreateduserInput> | permissionCreateWithoutCreateduserInput[] | permissionUncheckedCreateWithoutCreateduserInput[]
    connectOrCreate?: permissionCreateOrConnectWithoutCreateduserInput | permissionCreateOrConnectWithoutCreateduserInput[]
    upsert?: permissionUpsertWithWhereUniqueWithoutCreateduserInput | permissionUpsertWithWhereUniqueWithoutCreateduserInput[]
    createMany?: permissionCreateManyCreateduserInputEnvelope
    set?: permissionWhereUniqueInput | permissionWhereUniqueInput[]
    disconnect?: permissionWhereUniqueInput | permissionWhereUniqueInput[]
    delete?: permissionWhereUniqueInput | permissionWhereUniqueInput[]
    connect?: permissionWhereUniqueInput | permissionWhereUniqueInput[]
    update?: permissionUpdateWithWhereUniqueWithoutCreateduserInput | permissionUpdateWithWhereUniqueWithoutCreateduserInput[]
    updateMany?: permissionUpdateManyWithWhereWithoutCreateduserInput | permissionUpdateManyWithWhereWithoutCreateduserInput[]
    deleteMany?: permissionScalarWhereInput | permissionScalarWhereInput[]
  }

  export type permissionUncheckedUpdateManyWithoutUpdateduserNestedInput = {
    create?: XOR<permissionCreateWithoutUpdateduserInput, permissionUncheckedCreateWithoutUpdateduserInput> | permissionCreateWithoutUpdateduserInput[] | permissionUncheckedCreateWithoutUpdateduserInput[]
    connectOrCreate?: permissionCreateOrConnectWithoutUpdateduserInput | permissionCreateOrConnectWithoutUpdateduserInput[]
    upsert?: permissionUpsertWithWhereUniqueWithoutUpdateduserInput | permissionUpsertWithWhereUniqueWithoutUpdateduserInput[]
    createMany?: permissionCreateManyUpdateduserInputEnvelope
    set?: permissionWhereUniqueInput | permissionWhereUniqueInput[]
    disconnect?: permissionWhereUniqueInput | permissionWhereUniqueInput[]
    delete?: permissionWhereUniqueInput | permissionWhereUniqueInput[]
    connect?: permissionWhereUniqueInput | permissionWhereUniqueInput[]
    update?: permissionUpdateWithWhereUniqueWithoutUpdateduserInput | permissionUpdateWithWhereUniqueWithoutUpdateduserInput[]
    updateMany?: permissionUpdateManyWithWhereWithoutUpdateduserInput | permissionUpdateManyWithWhereWithoutUpdateduserInput[]
    deleteMany?: permissionScalarWhereInput | permissionScalarWhereInput[]
  }

  export type refreshtokenUncheckedUpdateManyWithoutUserNestedInput = {
    create?: XOR<refreshtokenCreateWithoutUserInput, refreshtokenUncheckedCreateWithoutUserInput> | refreshtokenCreateWithoutUserInput[] | refreshtokenUncheckedCreateWithoutUserInput[]
    connectOrCreate?: refreshtokenCreateOrConnectWithoutUserInput | refreshtokenCreateOrConnectWithoutUserInput[]
    upsert?: refreshtokenUpsertWithWhereUniqueWithoutUserInput | refreshtokenUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: refreshtokenCreateManyUserInputEnvelope
    set?: refreshtokenWhereUniqueInput | refreshtokenWhereUniqueInput[]
    disconnect?: refreshtokenWhereUniqueInput | refreshtokenWhereUniqueInput[]
    delete?: refreshtokenWhereUniqueInput | refreshtokenWhereUniqueInput[]
    connect?: refreshtokenWhereUniqueInput | refreshtokenWhereUniqueInput[]
    update?: refreshtokenUpdateWithWhereUniqueWithoutUserInput | refreshtokenUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: refreshtokenUpdateManyWithWhereWithoutUserInput | refreshtokenUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: refreshtokenScalarWhereInput | refreshtokenScalarWhereInput[]
  }

  export type roleUncheckedUpdateManyWithoutCreateduserNestedInput = {
    create?: XOR<roleCreateWithoutCreateduserInput, roleUncheckedCreateWithoutCreateduserInput> | roleCreateWithoutCreateduserInput[] | roleUncheckedCreateWithoutCreateduserInput[]
    connectOrCreate?: roleCreateOrConnectWithoutCreateduserInput | roleCreateOrConnectWithoutCreateduserInput[]
    upsert?: roleUpsertWithWhereUniqueWithoutCreateduserInput | roleUpsertWithWhereUniqueWithoutCreateduserInput[]
    createMany?: roleCreateManyCreateduserInputEnvelope
    set?: roleWhereUniqueInput | roleWhereUniqueInput[]
    disconnect?: roleWhereUniqueInput | roleWhereUniqueInput[]
    delete?: roleWhereUniqueInput | roleWhereUniqueInput[]
    connect?: roleWhereUniqueInput | roleWhereUniqueInput[]
    update?: roleUpdateWithWhereUniqueWithoutCreateduserInput | roleUpdateWithWhereUniqueWithoutCreateduserInput[]
    updateMany?: roleUpdateManyWithWhereWithoutCreateduserInput | roleUpdateManyWithWhereWithoutCreateduserInput[]
    deleteMany?: roleScalarWhereInput | roleScalarWhereInput[]
  }

  export type roleUncheckedUpdateManyWithoutUpdateduserNestedInput = {
    create?: XOR<roleCreateWithoutUpdateduserInput, roleUncheckedCreateWithoutUpdateduserInput> | roleCreateWithoutUpdateduserInput[] | roleUncheckedCreateWithoutUpdateduserInput[]
    connectOrCreate?: roleCreateOrConnectWithoutUpdateduserInput | roleCreateOrConnectWithoutUpdateduserInput[]
    upsert?: roleUpsertWithWhereUniqueWithoutUpdateduserInput | roleUpsertWithWhereUniqueWithoutUpdateduserInput[]
    createMany?: roleCreateManyUpdateduserInputEnvelope
    set?: roleWhereUniqueInput | roleWhereUniqueInput[]
    disconnect?: roleWhereUniqueInput | roleWhereUniqueInput[]
    delete?: roleWhereUniqueInput | roleWhereUniqueInput[]
    connect?: roleWhereUniqueInput | roleWhereUniqueInput[]
    update?: roleUpdateWithWhereUniqueWithoutUpdateduserInput | roleUpdateWithWhereUniqueWithoutUpdateduserInput[]
    updateMany?: roleUpdateManyWithWhereWithoutUpdateduserInput | roleUpdateManyWithWhereWithoutUpdateduserInput[]
    deleteMany?: roleScalarWhereInput | roleScalarWhereInput[]
  }

  export type rolepermissionUncheckedUpdateManyWithoutCreateduserNestedInput = {
    create?: XOR<rolepermissionCreateWithoutCreateduserInput, rolepermissionUncheckedCreateWithoutCreateduserInput> | rolepermissionCreateWithoutCreateduserInput[] | rolepermissionUncheckedCreateWithoutCreateduserInput[]
    connectOrCreate?: rolepermissionCreateOrConnectWithoutCreateduserInput | rolepermissionCreateOrConnectWithoutCreateduserInput[]
    upsert?: rolepermissionUpsertWithWhereUniqueWithoutCreateduserInput | rolepermissionUpsertWithWhereUniqueWithoutCreateduserInput[]
    createMany?: rolepermissionCreateManyCreateduserInputEnvelope
    set?: rolepermissionWhereUniqueInput | rolepermissionWhereUniqueInput[]
    disconnect?: rolepermissionWhereUniqueInput | rolepermissionWhereUniqueInput[]
    delete?: rolepermissionWhereUniqueInput | rolepermissionWhereUniqueInput[]
    connect?: rolepermissionWhereUniqueInput | rolepermissionWhereUniqueInput[]
    update?: rolepermissionUpdateWithWhereUniqueWithoutCreateduserInput | rolepermissionUpdateWithWhereUniqueWithoutCreateduserInput[]
    updateMany?: rolepermissionUpdateManyWithWhereWithoutCreateduserInput | rolepermissionUpdateManyWithWhereWithoutCreateduserInput[]
    deleteMany?: rolepermissionScalarWhereInput | rolepermissionScalarWhereInput[]
  }

  export type rolepermissionUncheckedUpdateManyWithoutUpdateduserNestedInput = {
    create?: XOR<rolepermissionCreateWithoutUpdateduserInput, rolepermissionUncheckedCreateWithoutUpdateduserInput> | rolepermissionCreateWithoutUpdateduserInput[] | rolepermissionUncheckedCreateWithoutUpdateduserInput[]
    connectOrCreate?: rolepermissionCreateOrConnectWithoutUpdateduserInput | rolepermissionCreateOrConnectWithoutUpdateduserInput[]
    upsert?: rolepermissionUpsertWithWhereUniqueWithoutUpdateduserInput | rolepermissionUpsertWithWhereUniqueWithoutUpdateduserInput[]
    createMany?: rolepermissionCreateManyUpdateduserInputEnvelope
    set?: rolepermissionWhereUniqueInput | rolepermissionWhereUniqueInput[]
    disconnect?: rolepermissionWhereUniqueInput | rolepermissionWhereUniqueInput[]
    delete?: rolepermissionWhereUniqueInput | rolepermissionWhereUniqueInput[]
    connect?: rolepermissionWhereUniqueInput | rolepermissionWhereUniqueInput[]
    update?: rolepermissionUpdateWithWhereUniqueWithoutUpdateduserInput | rolepermissionUpdateWithWhereUniqueWithoutUpdateduserInput[]
    updateMany?: rolepermissionUpdateManyWithWhereWithoutUpdateduserInput | rolepermissionUpdateManyWithWhereWithoutUpdateduserInput[]
    deleteMany?: rolepermissionScalarWhereInput | rolepermissionScalarWhereInput[]
  }

  export type userUncheckedUpdateManyWithoutCreateduserNestedInput = {
    create?: XOR<userCreateWithoutCreateduserInput, userUncheckedCreateWithoutCreateduserInput> | userCreateWithoutCreateduserInput[] | userUncheckedCreateWithoutCreateduserInput[]
    connectOrCreate?: userCreateOrConnectWithoutCreateduserInput | userCreateOrConnectWithoutCreateduserInput[]
    upsert?: userUpsertWithWhereUniqueWithoutCreateduserInput | userUpsertWithWhereUniqueWithoutCreateduserInput[]
    createMany?: userCreateManyCreateduserInputEnvelope
    set?: userWhereUniqueInput | userWhereUniqueInput[]
    disconnect?: userWhereUniqueInput | userWhereUniqueInput[]
    delete?: userWhereUniqueInput | userWhereUniqueInput[]
    connect?: userWhereUniqueInput | userWhereUniqueInput[]
    update?: userUpdateWithWhereUniqueWithoutCreateduserInput | userUpdateWithWhereUniqueWithoutCreateduserInput[]
    updateMany?: userUpdateManyWithWhereWithoutCreateduserInput | userUpdateManyWithWhereWithoutCreateduserInput[]
    deleteMany?: userScalarWhereInput | userScalarWhereInput[]
  }

  export type userUncheckedUpdateManyWithoutUpdateduserNestedInput = {
    create?: XOR<userCreateWithoutUpdateduserInput, userUncheckedCreateWithoutUpdateduserInput> | userCreateWithoutUpdateduserInput[] | userUncheckedCreateWithoutUpdateduserInput[]
    connectOrCreate?: userCreateOrConnectWithoutUpdateduserInput | userCreateOrConnectWithoutUpdateduserInput[]
    upsert?: userUpsertWithWhereUniqueWithoutUpdateduserInput | userUpsertWithWhereUniqueWithoutUpdateduserInput[]
    createMany?: userCreateManyUpdateduserInputEnvelope
    set?: userWhereUniqueInput | userWhereUniqueInput[]
    disconnect?: userWhereUniqueInput | userWhereUniqueInput[]
    delete?: userWhereUniqueInput | userWhereUniqueInput[]
    connect?: userWhereUniqueInput | userWhereUniqueInput[]
    update?: userUpdateWithWhereUniqueWithoutUpdateduserInput | userUpdateWithWhereUniqueWithoutUpdateduserInput[]
    updateMany?: userUpdateManyWithWhereWithoutUpdateduserInput | userUpdateManyWithWhereWithoutUpdateduserInput[]
    deleteMany?: userScalarWhereInput | userScalarWhereInput[]
  }

  export type userpermissionUncheckedUpdateManyWithoutCreateduserNestedInput = {
    create?: XOR<userpermissionCreateWithoutCreateduserInput, userpermissionUncheckedCreateWithoutCreateduserInput> | userpermissionCreateWithoutCreateduserInput[] | userpermissionUncheckedCreateWithoutCreateduserInput[]
    connectOrCreate?: userpermissionCreateOrConnectWithoutCreateduserInput | userpermissionCreateOrConnectWithoutCreateduserInput[]
    upsert?: userpermissionUpsertWithWhereUniqueWithoutCreateduserInput | userpermissionUpsertWithWhereUniqueWithoutCreateduserInput[]
    createMany?: userpermissionCreateManyCreateduserInputEnvelope
    set?: userpermissionWhereUniqueInput | userpermissionWhereUniqueInput[]
    disconnect?: userpermissionWhereUniqueInput | userpermissionWhereUniqueInput[]
    delete?: userpermissionWhereUniqueInput | userpermissionWhereUniqueInput[]
    connect?: userpermissionWhereUniqueInput | userpermissionWhereUniqueInput[]
    update?: userpermissionUpdateWithWhereUniqueWithoutCreateduserInput | userpermissionUpdateWithWhereUniqueWithoutCreateduserInput[]
    updateMany?: userpermissionUpdateManyWithWhereWithoutCreateduserInput | userpermissionUpdateManyWithWhereWithoutCreateduserInput[]
    deleteMany?: userpermissionScalarWhereInput | userpermissionScalarWhereInput[]
  }

  export type userpermissionUncheckedUpdateManyWithoutUpdateduserNestedInput = {
    create?: XOR<userpermissionCreateWithoutUpdateduserInput, userpermissionUncheckedCreateWithoutUpdateduserInput> | userpermissionCreateWithoutUpdateduserInput[] | userpermissionUncheckedCreateWithoutUpdateduserInput[]
    connectOrCreate?: userpermissionCreateOrConnectWithoutUpdateduserInput | userpermissionCreateOrConnectWithoutUpdateduserInput[]
    upsert?: userpermissionUpsertWithWhereUniqueWithoutUpdateduserInput | userpermissionUpsertWithWhereUniqueWithoutUpdateduserInput[]
    createMany?: userpermissionCreateManyUpdateduserInputEnvelope
    set?: userpermissionWhereUniqueInput | userpermissionWhereUniqueInput[]
    disconnect?: userpermissionWhereUniqueInput | userpermissionWhereUniqueInput[]
    delete?: userpermissionWhereUniqueInput | userpermissionWhereUniqueInput[]
    connect?: userpermissionWhereUniqueInput | userpermissionWhereUniqueInput[]
    update?: userpermissionUpdateWithWhereUniqueWithoutUpdateduserInput | userpermissionUpdateWithWhereUniqueWithoutUpdateduserInput[]
    updateMany?: userpermissionUpdateManyWithWhereWithoutUpdateduserInput | userpermissionUpdateManyWithWhereWithoutUpdateduserInput[]
    deleteMany?: userpermissionScalarWhereInput | userpermissionScalarWhereInput[]
  }

  export type userpermissionUncheckedUpdateManyWithoutUserNestedInput = {
    create?: XOR<userpermissionCreateWithoutUserInput, userpermissionUncheckedCreateWithoutUserInput> | userpermissionCreateWithoutUserInput[] | userpermissionUncheckedCreateWithoutUserInput[]
    connectOrCreate?: userpermissionCreateOrConnectWithoutUserInput | userpermissionCreateOrConnectWithoutUserInput[]
    upsert?: userpermissionUpsertWithWhereUniqueWithoutUserInput | userpermissionUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: userpermissionCreateManyUserInputEnvelope
    set?: userpermissionWhereUniqueInput | userpermissionWhereUniqueInput[]
    disconnect?: userpermissionWhereUniqueInput | userpermissionWhereUniqueInput[]
    delete?: userpermissionWhereUniqueInput | userpermissionWhereUniqueInput[]
    connect?: userpermissionWhereUniqueInput | userpermissionWhereUniqueInput[]
    update?: userpermissionUpdateWithWhereUniqueWithoutUserInput | userpermissionUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: userpermissionUpdateManyWithWhereWithoutUserInput | userpermissionUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: userpermissionScalarWhereInput | userpermissionScalarWhereInput[]
  }

  export type userroleUncheckedUpdateManyWithoutCreateduserNestedInput = {
    create?: XOR<userroleCreateWithoutCreateduserInput, userroleUncheckedCreateWithoutCreateduserInput> | userroleCreateWithoutCreateduserInput[] | userroleUncheckedCreateWithoutCreateduserInput[]
    connectOrCreate?: userroleCreateOrConnectWithoutCreateduserInput | userroleCreateOrConnectWithoutCreateduserInput[]
    upsert?: userroleUpsertWithWhereUniqueWithoutCreateduserInput | userroleUpsertWithWhereUniqueWithoutCreateduserInput[]
    createMany?: userroleCreateManyCreateduserInputEnvelope
    set?: userroleWhereUniqueInput | userroleWhereUniqueInput[]
    disconnect?: userroleWhereUniqueInput | userroleWhereUniqueInput[]
    delete?: userroleWhereUniqueInput | userroleWhereUniqueInput[]
    connect?: userroleWhereUniqueInput | userroleWhereUniqueInput[]
    update?: userroleUpdateWithWhereUniqueWithoutCreateduserInput | userroleUpdateWithWhereUniqueWithoutCreateduserInput[]
    updateMany?: userroleUpdateManyWithWhereWithoutCreateduserInput | userroleUpdateManyWithWhereWithoutCreateduserInput[]
    deleteMany?: userroleScalarWhereInput | userroleScalarWhereInput[]
  }

  export type userroleUncheckedUpdateManyWithoutUpdateduserNestedInput = {
    create?: XOR<userroleCreateWithoutUpdateduserInput, userroleUncheckedCreateWithoutUpdateduserInput> | userroleCreateWithoutUpdateduserInput[] | userroleUncheckedCreateWithoutUpdateduserInput[]
    connectOrCreate?: userroleCreateOrConnectWithoutUpdateduserInput | userroleCreateOrConnectWithoutUpdateduserInput[]
    upsert?: userroleUpsertWithWhereUniqueWithoutUpdateduserInput | userroleUpsertWithWhereUniqueWithoutUpdateduserInput[]
    createMany?: userroleCreateManyUpdateduserInputEnvelope
    set?: userroleWhereUniqueInput | userroleWhereUniqueInput[]
    disconnect?: userroleWhereUniqueInput | userroleWhereUniqueInput[]
    delete?: userroleWhereUniqueInput | userroleWhereUniqueInput[]
    connect?: userroleWhereUniqueInput | userroleWhereUniqueInput[]
    update?: userroleUpdateWithWhereUniqueWithoutUpdateduserInput | userroleUpdateWithWhereUniqueWithoutUpdateduserInput[]
    updateMany?: userroleUpdateManyWithWhereWithoutUpdateduserInput | userroleUpdateManyWithWhereWithoutUpdateduserInput[]
    deleteMany?: userroleScalarWhereInput | userroleScalarWhereInput[]
  }

  export type userroleUncheckedUpdateManyWithoutUserNestedInput = {
    create?: XOR<userroleCreateWithoutUserInput, userroleUncheckedCreateWithoutUserInput> | userroleCreateWithoutUserInput[] | userroleUncheckedCreateWithoutUserInput[]
    connectOrCreate?: userroleCreateOrConnectWithoutUserInput | userroleCreateOrConnectWithoutUserInput[]
    upsert?: userroleUpsertWithWhereUniqueWithoutUserInput | userroleUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: userroleCreateManyUserInputEnvelope
    set?: userroleWhereUniqueInput | userroleWhereUniqueInput[]
    disconnect?: userroleWhereUniqueInput | userroleWhereUniqueInput[]
    delete?: userroleWhereUniqueInput | userroleWhereUniqueInput[]
    connect?: userroleWhereUniqueInput | userroleWhereUniqueInput[]
    update?: userroleUpdateWithWhereUniqueWithoutUserInput | userroleUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: userroleUpdateManyWithWhereWithoutUserInput | userroleUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: userroleScalarWhereInput | userroleScalarWhereInput[]
  }

  export type languagesUncheckedUpdateManyWithoutUserNestedInput = {
    create?: XOR<languagesCreateWithoutUserInput, languagesUncheckedCreateWithoutUserInput> | languagesCreateWithoutUserInput[] | languagesUncheckedCreateWithoutUserInput[]
    connectOrCreate?: languagesCreateOrConnectWithoutUserInput | languagesCreateOrConnectWithoutUserInput[]
    upsert?: languagesUpsertWithWhereUniqueWithoutUserInput | languagesUpsertWithWhereUniqueWithoutUserInput[]
    set?: languagesWhereUniqueInput | languagesWhereUniqueInput[]
    disconnect?: languagesWhereUniqueInput | languagesWhereUniqueInput[]
    delete?: languagesWhereUniqueInput | languagesWhereUniqueInput[]
    connect?: languagesWhereUniqueInput | languagesWhereUniqueInput[]
    update?: languagesUpdateWithWhereUniqueWithoutUserInput | languagesUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: languagesUpdateManyWithWhereWithoutUserInput | languagesUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: languagesScalarWhereInput | languagesScalarWhereInput[]
  }

  export type learningProgressUncheckedUpdateManyWithoutUserNestedInput = {
    create?: XOR<learningProgressCreateWithoutUserInput, learningProgressUncheckedCreateWithoutUserInput> | learningProgressCreateWithoutUserInput[] | learningProgressUncheckedCreateWithoutUserInput[]
    connectOrCreate?: learningProgressCreateOrConnectWithoutUserInput | learningProgressCreateOrConnectWithoutUserInput[]
    upsert?: learningProgressUpsertWithWhereUniqueWithoutUserInput | learningProgressUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: learningProgressCreateManyUserInputEnvelope
    set?: learningProgressWhereUniqueInput | learningProgressWhereUniqueInput[]
    disconnect?: learningProgressWhereUniqueInput | learningProgressWhereUniqueInput[]
    delete?: learningProgressWhereUniqueInput | learningProgressWhereUniqueInput[]
    connect?: learningProgressWhereUniqueInput | learningProgressWhereUniqueInput[]
    update?: learningProgressUpdateWithWhereUniqueWithoutUserInput | learningProgressUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: learningProgressUpdateManyWithWhereWithoutUserInput | learningProgressUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: learningProgressScalarWhereInput | learningProgressScalarWhereInput[]
  }

  export type chatUncheckedUpdateManyWithoutUserNestedInput = {
    create?: XOR<chatCreateWithoutUserInput, chatUncheckedCreateWithoutUserInput> | chatCreateWithoutUserInput[] | chatUncheckedCreateWithoutUserInput[]
    connectOrCreate?: chatCreateOrConnectWithoutUserInput | chatCreateOrConnectWithoutUserInput[]
    upsert?: chatUpsertWithWhereUniqueWithoutUserInput | chatUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: chatCreateManyUserInputEnvelope
    set?: chatWhereUniqueInput | chatWhereUniqueInput[]
    disconnect?: chatWhereUniqueInput | chatWhereUniqueInput[]
    delete?: chatWhereUniqueInput | chatWhereUniqueInput[]
    connect?: chatWhereUniqueInput | chatWhereUniqueInput[]
    update?: chatUpdateWithWhereUniqueWithoutUserInput | chatUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: chatUpdateManyWithWhereWithoutUserInput | chatUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: chatScalarWhereInput | chatScalarWhereInput[]
  }

  export type chatRoomUncheckedUpdateManyWithoutUserNestedInput = {
    create?: XOR<chatRoomCreateWithoutUserInput, chatRoomUncheckedCreateWithoutUserInput> | chatRoomCreateWithoutUserInput[] | chatRoomUncheckedCreateWithoutUserInput[]
    connectOrCreate?: chatRoomCreateOrConnectWithoutUserInput | chatRoomCreateOrConnectWithoutUserInput[]
    upsert?: chatRoomUpsertWithWhereUniqueWithoutUserInput | chatRoomUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: chatRoomCreateManyUserInputEnvelope
    set?: chatRoomWhereUniqueInput | chatRoomWhereUniqueInput[]
    disconnect?: chatRoomWhereUniqueInput | chatRoomWhereUniqueInput[]
    delete?: chatRoomWhereUniqueInput | chatRoomWhereUniqueInput[]
    connect?: chatRoomWhereUniqueInput | chatRoomWhereUniqueInput[]
    update?: chatRoomUpdateWithWhereUniqueWithoutUserInput | chatRoomUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: chatRoomUpdateManyWithWhereWithoutUserInput | chatRoomUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: chatRoomScalarWhereInput | chatRoomScalarWhereInput[]
  }

  export type subscriptionUncheckedUpdateManyWithoutUserNestedInput = {
    create?: XOR<subscriptionCreateWithoutUserInput, subscriptionUncheckedCreateWithoutUserInput> | subscriptionCreateWithoutUserInput[] | subscriptionUncheckedCreateWithoutUserInput[]
    connectOrCreate?: subscriptionCreateOrConnectWithoutUserInput | subscriptionCreateOrConnectWithoutUserInput[]
    upsert?: subscriptionUpsertWithWhereUniqueWithoutUserInput | subscriptionUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: subscriptionCreateManyUserInputEnvelope
    set?: subscriptionWhereUniqueInput | subscriptionWhereUniqueInput[]
    disconnect?: subscriptionWhereUniqueInput | subscriptionWhereUniqueInput[]
    delete?: subscriptionWhereUniqueInput | subscriptionWhereUniqueInput[]
    connect?: subscriptionWhereUniqueInput | subscriptionWhereUniqueInput[]
    update?: subscriptionUpdateWithWhereUniqueWithoutUserInput | subscriptionUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: subscriptionUpdateManyWithWhereWithoutUserInput | subscriptionUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: subscriptionScalarWhereInput | subscriptionScalarWhereInput[]
  }

  export type userCreateNestedOneWithoutCreateduserpermissionsInput = {
    create?: XOR<userCreateWithoutCreateduserpermissionsInput, userUncheckedCreateWithoutCreateduserpermissionsInput>
    connectOrCreate?: userCreateOrConnectWithoutCreateduserpermissionsInput
    connect?: userWhereUniqueInput
  }

  export type permissionCreateNestedOneWithoutUserpermissionsInput = {
    create?: XOR<permissionCreateWithoutUserpermissionsInput, permissionUncheckedCreateWithoutUserpermissionsInput>
    connectOrCreate?: permissionCreateOrConnectWithoutUserpermissionsInput
    connect?: permissionWhereUniqueInput
  }

  export type userCreateNestedOneWithoutUpdateduserpermissionsInput = {
    create?: XOR<userCreateWithoutUpdateduserpermissionsInput, userUncheckedCreateWithoutUpdateduserpermissionsInput>
    connectOrCreate?: userCreateOrConnectWithoutUpdateduserpermissionsInput
    connect?: userWhereUniqueInput
  }

  export type userCreateNestedOneWithoutUserpermissionsInput = {
    create?: XOR<userCreateWithoutUserpermissionsInput, userUncheckedCreateWithoutUserpermissionsInput>
    connectOrCreate?: userCreateOrConnectWithoutUserpermissionsInput
    connect?: userWhereUniqueInput
  }

  export type userUpdateOneRequiredWithoutCreateduserpermissionsNestedInput = {
    create?: XOR<userCreateWithoutCreateduserpermissionsInput, userUncheckedCreateWithoutCreateduserpermissionsInput>
    connectOrCreate?: userCreateOrConnectWithoutCreateduserpermissionsInput
    upsert?: userUpsertWithoutCreateduserpermissionsInput
    connect?: userWhereUniqueInput
    update?: XOR<XOR<userUpdateToOneWithWhereWithoutCreateduserpermissionsInput, userUpdateWithoutCreateduserpermissionsInput>, userUncheckedUpdateWithoutCreateduserpermissionsInput>
  }

  export type permissionUpdateOneRequiredWithoutUserpermissionsNestedInput = {
    create?: XOR<permissionCreateWithoutUserpermissionsInput, permissionUncheckedCreateWithoutUserpermissionsInput>
    connectOrCreate?: permissionCreateOrConnectWithoutUserpermissionsInput
    upsert?: permissionUpsertWithoutUserpermissionsInput
    connect?: permissionWhereUniqueInput
    update?: XOR<XOR<permissionUpdateToOneWithWhereWithoutUserpermissionsInput, permissionUpdateWithoutUserpermissionsInput>, permissionUncheckedUpdateWithoutUserpermissionsInput>
  }

  export type userUpdateOneWithoutUpdateduserpermissionsNestedInput = {
    create?: XOR<userCreateWithoutUpdateduserpermissionsInput, userUncheckedCreateWithoutUpdateduserpermissionsInput>
    connectOrCreate?: userCreateOrConnectWithoutUpdateduserpermissionsInput
    upsert?: userUpsertWithoutUpdateduserpermissionsInput
    disconnect?: userWhereInput | boolean
    delete?: userWhereInput | boolean
    connect?: userWhereUniqueInput
    update?: XOR<XOR<userUpdateToOneWithWhereWithoutUpdateduserpermissionsInput, userUpdateWithoutUpdateduserpermissionsInput>, userUncheckedUpdateWithoutUpdateduserpermissionsInput>
  }

  export type userUpdateOneRequiredWithoutUserpermissionsNestedInput = {
    create?: XOR<userCreateWithoutUserpermissionsInput, userUncheckedCreateWithoutUserpermissionsInput>
    connectOrCreate?: userCreateOrConnectWithoutUserpermissionsInput
    upsert?: userUpsertWithoutUserpermissionsInput
    connect?: userWhereUniqueInput
    update?: XOR<XOR<userUpdateToOneWithWhereWithoutUserpermissionsInput, userUpdateWithoutUserpermissionsInput>, userUncheckedUpdateWithoutUserpermissionsInput>
  }

  export type userCreateNestedOneWithoutCreateduserrolesInput = {
    create?: XOR<userCreateWithoutCreateduserrolesInput, userUncheckedCreateWithoutCreateduserrolesInput>
    connectOrCreate?: userCreateOrConnectWithoutCreateduserrolesInput
    connect?: userWhereUniqueInput
  }

  export type roleCreateNestedOneWithoutUserrolesInput = {
    create?: XOR<roleCreateWithoutUserrolesInput, roleUncheckedCreateWithoutUserrolesInput>
    connectOrCreate?: roleCreateOrConnectWithoutUserrolesInput
    connect?: roleWhereUniqueInput
  }

  export type userCreateNestedOneWithoutUpdateduserrolesInput = {
    create?: XOR<userCreateWithoutUpdateduserrolesInput, userUncheckedCreateWithoutUpdateduserrolesInput>
    connectOrCreate?: userCreateOrConnectWithoutUpdateduserrolesInput
    connect?: userWhereUniqueInput
  }

  export type userCreateNestedOneWithoutUserrolesInput = {
    create?: XOR<userCreateWithoutUserrolesInput, userUncheckedCreateWithoutUserrolesInput>
    connectOrCreate?: userCreateOrConnectWithoutUserrolesInput
    connect?: userWhereUniqueInput
  }

  export type userUpdateOneRequiredWithoutCreateduserrolesNestedInput = {
    create?: XOR<userCreateWithoutCreateduserrolesInput, userUncheckedCreateWithoutCreateduserrolesInput>
    connectOrCreate?: userCreateOrConnectWithoutCreateduserrolesInput
    upsert?: userUpsertWithoutCreateduserrolesInput
    connect?: userWhereUniqueInput
    update?: XOR<XOR<userUpdateToOneWithWhereWithoutCreateduserrolesInput, userUpdateWithoutCreateduserrolesInput>, userUncheckedUpdateWithoutCreateduserrolesInput>
  }

  export type roleUpdateOneRequiredWithoutUserrolesNestedInput = {
    create?: XOR<roleCreateWithoutUserrolesInput, roleUncheckedCreateWithoutUserrolesInput>
    connectOrCreate?: roleCreateOrConnectWithoutUserrolesInput
    upsert?: roleUpsertWithoutUserrolesInput
    connect?: roleWhereUniqueInput
    update?: XOR<XOR<roleUpdateToOneWithWhereWithoutUserrolesInput, roleUpdateWithoutUserrolesInput>, roleUncheckedUpdateWithoutUserrolesInput>
  }

  export type userUpdateOneWithoutUpdateduserrolesNestedInput = {
    create?: XOR<userCreateWithoutUpdateduserrolesInput, userUncheckedCreateWithoutUpdateduserrolesInput>
    connectOrCreate?: userCreateOrConnectWithoutUpdateduserrolesInput
    upsert?: userUpsertWithoutUpdateduserrolesInput
    disconnect?: userWhereInput | boolean
    delete?: userWhereInput | boolean
    connect?: userWhereUniqueInput
    update?: XOR<XOR<userUpdateToOneWithWhereWithoutUpdateduserrolesInput, userUpdateWithoutUpdateduserrolesInput>, userUncheckedUpdateWithoutUpdateduserrolesInput>
  }

  export type userUpdateOneRequiredWithoutUserrolesNestedInput = {
    create?: XOR<userCreateWithoutUserrolesInput, userUncheckedCreateWithoutUserrolesInput>
    connectOrCreate?: userCreateOrConnectWithoutUserrolesInput
    upsert?: userUpsertWithoutUserrolesInput
    connect?: userWhereUniqueInput
    update?: XOR<XOR<userUpdateToOneWithWhereWithoutUserrolesInput, userUpdateWithoutUserrolesInput>, userUncheckedUpdateWithoutUserrolesInput>
  }

  export type NestedStringFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringFilter<$PrismaModel> | string
  }

  export type NestedBoolFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolFilter<$PrismaModel> | boolean
  }

  export type NestedStringWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type NestedIntFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntFilter<$PrismaModel> | number
  }

  export type NestedBoolWithAggregatesFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolWithAggregatesFilter<$PrismaModel> | boolean
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedBoolFilter<$PrismaModel>
    _max?: NestedBoolFilter<$PrismaModel>
  }

  export type NestedEnumdurationFilter<$PrismaModel = never> = {
    equals?: $Enums.duration | EnumdurationFieldRefInput<$PrismaModel>
    in?: $Enums.duration[] | ListEnumdurationFieldRefInput<$PrismaModel>
    notIn?: $Enums.duration[] | ListEnumdurationFieldRefInput<$PrismaModel>
    not?: NestedEnumdurationFilter<$PrismaModel> | $Enums.duration
  }

  export type NestedStringNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringNullableFilter<$PrismaModel> | string | null
  }

  export type NestedDateTimeFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeFilter<$PrismaModel> | Date | string
  }

  export type NestedEnumdurationWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.duration | EnumdurationFieldRefInput<$PrismaModel>
    in?: $Enums.duration[] | ListEnumdurationFieldRefInput<$PrismaModel>
    notIn?: $Enums.duration[] | ListEnumdurationFieldRefInput<$PrismaModel>
    not?: NestedEnumdurationWithAggregatesFilter<$PrismaModel> | $Enums.duration
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumdurationFilter<$PrismaModel>
    _max?: NestedEnumdurationFilter<$PrismaModel>
  }

  export type NestedStringNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
  }

  export type NestedIntNullableFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableFilter<$PrismaModel> | number | null
  }

  export type NestedDateTimeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeWithAggregatesFilter<$PrismaModel> | Date | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedDateTimeFilter<$PrismaModel>
    _max?: NestedDateTimeFilter<$PrismaModel>
  }

  export type NestedEnumCurrencyFilter<$PrismaModel = never> = {
    equals?: $Enums.Currency | EnumCurrencyFieldRefInput<$PrismaModel>
    in?: $Enums.Currency[] | ListEnumCurrencyFieldRefInput<$PrismaModel>
    notIn?: $Enums.Currency[] | ListEnumCurrencyFieldRefInput<$PrismaModel>
    not?: NestedEnumCurrencyFilter<$PrismaModel> | $Enums.Currency
  }

  export type NestedDecimalFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel>
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel>
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string
  }

  export type NestedEnumCurrencyWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.Currency | EnumCurrencyFieldRefInput<$PrismaModel>
    in?: $Enums.Currency[] | ListEnumCurrencyFieldRefInput<$PrismaModel>
    notIn?: $Enums.Currency[] | ListEnumCurrencyFieldRefInput<$PrismaModel>
    not?: NestedEnumCurrencyWithAggregatesFilter<$PrismaModel> | $Enums.Currency
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumCurrencyFilter<$PrismaModel>
    _max?: NestedEnumCurrencyFilter<$PrismaModel>
  }

  export type NestedDecimalWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel>
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel>
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalWithAggregatesFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedDecimalFilter<$PrismaModel>
    _sum?: NestedDecimalFilter<$PrismaModel>
    _min?: NestedDecimalFilter<$PrismaModel>
    _max?: NestedDecimalFilter<$PrismaModel>
  }

  export type NestedEnumSubscriptionStatusFilter<$PrismaModel = never> = {
    equals?: $Enums.SubscriptionStatus | EnumSubscriptionStatusFieldRefInput<$PrismaModel>
    in?: $Enums.SubscriptionStatus[] | ListEnumSubscriptionStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.SubscriptionStatus[] | ListEnumSubscriptionStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumSubscriptionStatusFilter<$PrismaModel> | $Enums.SubscriptionStatus
  }

  export type NestedEnumSubscriptionStatusWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.SubscriptionStatus | EnumSubscriptionStatusFieldRefInput<$PrismaModel>
    in?: $Enums.SubscriptionStatus[] | ListEnumSubscriptionStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.SubscriptionStatus[] | ListEnumSubscriptionStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumSubscriptionStatusWithAggregatesFilter<$PrismaModel> | $Enums.SubscriptionStatus
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumSubscriptionStatusFilter<$PrismaModel>
    _max?: NestedEnumSubscriptionStatusFilter<$PrismaModel>
  }

  export type NestedDateTimeNullableFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableFilter<$PrismaModel> | Date | string | null
  }

  export type NestedDateTimeNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableWithAggregatesFilter<$PrismaModel> | Date | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedDateTimeNullableFilter<$PrismaModel>
    _max?: NestedDateTimeNullableFilter<$PrismaModel>
  }

  export type NestedIntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedIntFilter<$PrismaModel>
    _min?: NestedIntFilter<$PrismaModel>
    _max?: NestedIntFilter<$PrismaModel>
  }

  export type NestedFloatFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel>
    in?: number[] | ListFloatFieldRefInput<$PrismaModel>
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel>
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatFilter<$PrismaModel> | number
  }

  export type packagesCreateWithoutFeaturesInput = {
    id?: string
    name: string
    description: string
    icon: string
    duration: $Enums.duration
    popular?: boolean
    highlightColor?: string | null
    savings?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    prices?: priceCreateNestedManyWithoutPackageInput
    subscriptions?: subscriptionCreateNestedManyWithoutPackageInput
  }

  export type packagesUncheckedCreateWithoutFeaturesInput = {
    id?: string
    name: string
    description: string
    icon: string
    duration: $Enums.duration
    popular?: boolean
    highlightColor?: string | null
    savings?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    prices?: priceUncheckedCreateNestedManyWithoutPackageInput
    subscriptions?: subscriptionUncheckedCreateNestedManyWithoutPackageInput
  }

  export type packagesCreateOrConnectWithoutFeaturesInput = {
    where: packagesWhereUniqueInput
    create: XOR<packagesCreateWithoutFeaturesInput, packagesUncheckedCreateWithoutFeaturesInput>
  }

  export type packagesUpsertWithoutFeaturesInput = {
    update: XOR<packagesUpdateWithoutFeaturesInput, packagesUncheckedUpdateWithoutFeaturesInput>
    create: XOR<packagesCreateWithoutFeaturesInput, packagesUncheckedCreateWithoutFeaturesInput>
    where?: packagesWhereInput
  }

  export type packagesUpdateToOneWithWhereWithoutFeaturesInput = {
    where?: packagesWhereInput
    data: XOR<packagesUpdateWithoutFeaturesInput, packagesUncheckedUpdateWithoutFeaturesInput>
  }

  export type packagesUpdateWithoutFeaturesInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    icon?: StringFieldUpdateOperationsInput | string
    duration?: EnumdurationFieldUpdateOperationsInput | $Enums.duration
    popular?: BoolFieldUpdateOperationsInput | boolean
    highlightColor?: NullableStringFieldUpdateOperationsInput | string | null
    savings?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    prices?: priceUpdateManyWithoutPackageNestedInput
    subscriptions?: subscriptionUpdateManyWithoutPackageNestedInput
  }

  export type packagesUncheckedUpdateWithoutFeaturesInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    icon?: StringFieldUpdateOperationsInput | string
    duration?: EnumdurationFieldUpdateOperationsInput | $Enums.duration
    popular?: BoolFieldUpdateOperationsInput | boolean
    highlightColor?: NullableStringFieldUpdateOperationsInput | string | null
    savings?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    prices?: priceUncheckedUpdateManyWithoutPackageNestedInput
    subscriptions?: subscriptionUncheckedUpdateManyWithoutPackageNestedInput
  }

  export type packageFeatureCreateWithoutPackageInput = {
    id?: string
    feature: string
    available?: boolean
  }

  export type packageFeatureUncheckedCreateWithoutPackageInput = {
    id?: string
    feature: string
    available?: boolean
  }

  export type packageFeatureCreateOrConnectWithoutPackageInput = {
    where: packageFeatureWhereUniqueInput
    create: XOR<packageFeatureCreateWithoutPackageInput, packageFeatureUncheckedCreateWithoutPackageInput>
  }

  export type packageFeatureCreateManyPackageInputEnvelope = {
    data: packageFeatureCreateManyPackageInput | packageFeatureCreateManyPackageInput[]
    skipDuplicates?: boolean
  }

  export type priceCreateWithoutPackageInput = {
    id?: string
    currency?: $Enums.Currency
    amount: Decimal | DecimalJsLike | number | string
  }

  export type priceUncheckedCreateWithoutPackageInput = {
    id?: string
    currency?: $Enums.Currency
    amount: Decimal | DecimalJsLike | number | string
  }

  export type priceCreateOrConnectWithoutPackageInput = {
    where: priceWhereUniqueInput
    create: XOR<priceCreateWithoutPackageInput, priceUncheckedCreateWithoutPackageInput>
  }

  export type priceCreateManyPackageInputEnvelope = {
    data: priceCreateManyPackageInput | priceCreateManyPackageInput[]
    skipDuplicates?: boolean
  }

  export type subscriptionCreateWithoutPackageInput = {
    id?: string
    startDate?: Date | string
    endDate: Date | string
    status?: $Enums.SubscriptionStatus
    lastPaymentStatus?: string | null
    stripeCustomerId?: string | null
    stripePaymentId?: string | null
    stripePriceId?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    user: userCreateNestedOneWithoutSubscriptionsInput
  }

  export type subscriptionUncheckedCreateWithoutPackageInput = {
    id?: string
    userId: string
    startDate?: Date | string
    endDate: Date | string
    status?: $Enums.SubscriptionStatus
    lastPaymentStatus?: string | null
    stripeCustomerId?: string | null
    stripePaymentId?: string | null
    stripePriceId?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type subscriptionCreateOrConnectWithoutPackageInput = {
    where: subscriptionWhereUniqueInput
    create: XOR<subscriptionCreateWithoutPackageInput, subscriptionUncheckedCreateWithoutPackageInput>
  }

  export type subscriptionCreateManyPackageInputEnvelope = {
    data: subscriptionCreateManyPackageInput | subscriptionCreateManyPackageInput[]
    skipDuplicates?: boolean
  }

  export type packageFeatureUpsertWithWhereUniqueWithoutPackageInput = {
    where: packageFeatureWhereUniqueInput
    update: XOR<packageFeatureUpdateWithoutPackageInput, packageFeatureUncheckedUpdateWithoutPackageInput>
    create: XOR<packageFeatureCreateWithoutPackageInput, packageFeatureUncheckedCreateWithoutPackageInput>
  }

  export type packageFeatureUpdateWithWhereUniqueWithoutPackageInput = {
    where: packageFeatureWhereUniqueInput
    data: XOR<packageFeatureUpdateWithoutPackageInput, packageFeatureUncheckedUpdateWithoutPackageInput>
  }

  export type packageFeatureUpdateManyWithWhereWithoutPackageInput = {
    where: packageFeatureScalarWhereInput
    data: XOR<packageFeatureUpdateManyMutationInput, packageFeatureUncheckedUpdateManyWithoutPackageInput>
  }

  export type packageFeatureScalarWhereInput = {
    AND?: packageFeatureScalarWhereInput | packageFeatureScalarWhereInput[]
    OR?: packageFeatureScalarWhereInput[]
    NOT?: packageFeatureScalarWhereInput | packageFeatureScalarWhereInput[]
    id?: StringFilter<"packageFeature"> | string
    feature?: StringFilter<"packageFeature"> | string
    available?: BoolFilter<"packageFeature"> | boolean
    packageId?: StringFilter<"packageFeature"> | string
  }

  export type priceUpsertWithWhereUniqueWithoutPackageInput = {
    where: priceWhereUniqueInput
    update: XOR<priceUpdateWithoutPackageInput, priceUncheckedUpdateWithoutPackageInput>
    create: XOR<priceCreateWithoutPackageInput, priceUncheckedCreateWithoutPackageInput>
  }

  export type priceUpdateWithWhereUniqueWithoutPackageInput = {
    where: priceWhereUniqueInput
    data: XOR<priceUpdateWithoutPackageInput, priceUncheckedUpdateWithoutPackageInput>
  }

  export type priceUpdateManyWithWhereWithoutPackageInput = {
    where: priceScalarWhereInput
    data: XOR<priceUpdateManyMutationInput, priceUncheckedUpdateManyWithoutPackageInput>
  }

  export type priceScalarWhereInput = {
    AND?: priceScalarWhereInput | priceScalarWhereInput[]
    OR?: priceScalarWhereInput[]
    NOT?: priceScalarWhereInput | priceScalarWhereInput[]
    id?: StringFilter<"price"> | string
    currency?: EnumCurrencyFilter<"price"> | $Enums.Currency
    amount?: DecimalFilter<"price"> | Decimal | DecimalJsLike | number | string
    packageId?: StringFilter<"price"> | string
  }

  export type subscriptionUpsertWithWhereUniqueWithoutPackageInput = {
    where: subscriptionWhereUniqueInput
    update: XOR<subscriptionUpdateWithoutPackageInput, subscriptionUncheckedUpdateWithoutPackageInput>
    create: XOR<subscriptionCreateWithoutPackageInput, subscriptionUncheckedCreateWithoutPackageInput>
  }

  export type subscriptionUpdateWithWhereUniqueWithoutPackageInput = {
    where: subscriptionWhereUniqueInput
    data: XOR<subscriptionUpdateWithoutPackageInput, subscriptionUncheckedUpdateWithoutPackageInput>
  }

  export type subscriptionUpdateManyWithWhereWithoutPackageInput = {
    where: subscriptionScalarWhereInput
    data: XOR<subscriptionUpdateManyMutationInput, subscriptionUncheckedUpdateManyWithoutPackageInput>
  }

  export type subscriptionScalarWhereInput = {
    AND?: subscriptionScalarWhereInput | subscriptionScalarWhereInput[]
    OR?: subscriptionScalarWhereInput[]
    NOT?: subscriptionScalarWhereInput | subscriptionScalarWhereInput[]
    id?: StringFilter<"subscription"> | string
    userId?: StringFilter<"subscription"> | string
    packageId?: StringFilter<"subscription"> | string
    startDate?: DateTimeFilter<"subscription"> | Date | string
    endDate?: DateTimeFilter<"subscription"> | Date | string
    status?: EnumSubscriptionStatusFilter<"subscription"> | $Enums.SubscriptionStatus
    lastPaymentStatus?: StringNullableFilter<"subscription"> | string | null
    stripeCustomerId?: StringNullableFilter<"subscription"> | string | null
    stripePaymentId?: StringNullableFilter<"subscription"> | string | null
    stripePriceId?: StringNullableFilter<"subscription"> | string | null
    createdAt?: DateTimeFilter<"subscription"> | Date | string
    updatedAt?: DateTimeFilter<"subscription"> | Date | string
  }

  export type packagesCreateWithoutPricesInput = {
    id?: string
    name: string
    description: string
    icon: string
    duration: $Enums.duration
    popular?: boolean
    highlightColor?: string | null
    savings?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    features?: packageFeatureCreateNestedManyWithoutPackageInput
    subscriptions?: subscriptionCreateNestedManyWithoutPackageInput
  }

  export type packagesUncheckedCreateWithoutPricesInput = {
    id?: string
    name: string
    description: string
    icon: string
    duration: $Enums.duration
    popular?: boolean
    highlightColor?: string | null
    savings?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    features?: packageFeatureUncheckedCreateNestedManyWithoutPackageInput
    subscriptions?: subscriptionUncheckedCreateNestedManyWithoutPackageInput
  }

  export type packagesCreateOrConnectWithoutPricesInput = {
    where: packagesWhereUniqueInput
    create: XOR<packagesCreateWithoutPricesInput, packagesUncheckedCreateWithoutPricesInput>
  }

  export type packagesUpsertWithoutPricesInput = {
    update: XOR<packagesUpdateWithoutPricesInput, packagesUncheckedUpdateWithoutPricesInput>
    create: XOR<packagesCreateWithoutPricesInput, packagesUncheckedCreateWithoutPricesInput>
    where?: packagesWhereInput
  }

  export type packagesUpdateToOneWithWhereWithoutPricesInput = {
    where?: packagesWhereInput
    data: XOR<packagesUpdateWithoutPricesInput, packagesUncheckedUpdateWithoutPricesInput>
  }

  export type packagesUpdateWithoutPricesInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    icon?: StringFieldUpdateOperationsInput | string
    duration?: EnumdurationFieldUpdateOperationsInput | $Enums.duration
    popular?: BoolFieldUpdateOperationsInput | boolean
    highlightColor?: NullableStringFieldUpdateOperationsInput | string | null
    savings?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    features?: packageFeatureUpdateManyWithoutPackageNestedInput
    subscriptions?: subscriptionUpdateManyWithoutPackageNestedInput
  }

  export type packagesUncheckedUpdateWithoutPricesInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    icon?: StringFieldUpdateOperationsInput | string
    duration?: EnumdurationFieldUpdateOperationsInput | $Enums.duration
    popular?: BoolFieldUpdateOperationsInput | boolean
    highlightColor?: NullableStringFieldUpdateOperationsInput | string | null
    savings?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    features?: packageFeatureUncheckedUpdateManyWithoutPackageNestedInput
    subscriptions?: subscriptionUncheckedUpdateManyWithoutPackageNestedInput
  }

  export type userCreateWithoutSubscriptionsInput = {
    id?: string
    firstname: string
    lastname: string
    phone?: string | null
    email: string
    password: string
    appLanguage?: string | null
    learningLanguage?: string | null
    learningLevel?: string | null
    theme?: string | null
    avatar?: string | null
    createdat?: Date | string
    updatedat?: Date | string | null
    status?: number
    lastentranceat?: Date | string | null
    lastexitat?: Date | string | null
    lastloginat?: Date | string | null
    stripeCustomerId?: string | null
    notificationuser?: notificationCreateNestedManyWithoutToInput
    createdapiclients?: apiclientCreateNestedManyWithoutCreateduserInput
    updatedapiclients?: apiclientCreateNestedManyWithoutUpdateduserInput
    createdpermissions?: permissionCreateNestedManyWithoutCreateduserInput
    updatedpermissions?: permissionCreateNestedManyWithoutUpdateduserInput
    refreshtokens?: refreshtokenCreateNestedManyWithoutUserInput
    createdroles?: roleCreateNestedManyWithoutCreateduserInput
    updatedroles?: roleCreateNestedManyWithoutUpdateduserInput
    createdrolepermissions?: rolepermissionCreateNestedManyWithoutCreateduserInput
    updatedrolepermissions?: rolepermissionCreateNestedManyWithoutUpdateduserInput
    createduser: userCreateNestedOneWithoutCreatedusersInput
    createdusers?: userCreateNestedManyWithoutCreateduserInput
    updateduser?: userCreateNestedOneWithoutUpdatedusersInput
    updatedusers?: userCreateNestedManyWithoutUpdateduserInput
    createduserpermissions?: userpermissionCreateNestedManyWithoutCreateduserInput
    updateduserpermissions?: userpermissionCreateNestedManyWithoutUpdateduserInput
    userpermissions?: userpermissionCreateNestedManyWithoutUserInput
    createduserroles?: userroleCreateNestedManyWithoutCreateduserInput
    updateduserroles?: userroleCreateNestedManyWithoutUpdateduserInput
    userroles?: userroleCreateNestedManyWithoutUserInput
    language?: languagesCreateNestedManyWithoutUserInput
    learningProgress?: learningProgressCreateNestedManyWithoutUserInput
    chats?: chatCreateNestedManyWithoutUserInput
    chatRooms?: chatRoomCreateNestedManyWithoutUserInput
  }

  export type userUncheckedCreateWithoutSubscriptionsInput = {
    id?: string
    firstname: string
    lastname: string
    phone?: string | null
    email: string
    password: string
    appLanguage?: string | null
    learningLanguage?: string | null
    learningLevel?: string | null
    theme?: string | null
    avatar?: string | null
    createdby: string
    createdat?: Date | string
    updatedby?: string | null
    updatedat?: Date | string | null
    status?: number
    lastentranceat?: Date | string | null
    lastexitat?: Date | string | null
    lastloginat?: Date | string | null
    stripeCustomerId?: string | null
    notificationuser?: notificationUncheckedCreateNestedManyWithoutToInput
    createdapiclients?: apiclientUncheckedCreateNestedManyWithoutCreateduserInput
    updatedapiclients?: apiclientUncheckedCreateNestedManyWithoutUpdateduserInput
    createdpermissions?: permissionUncheckedCreateNestedManyWithoutCreateduserInput
    updatedpermissions?: permissionUncheckedCreateNestedManyWithoutUpdateduserInput
    refreshtokens?: refreshtokenUncheckedCreateNestedManyWithoutUserInput
    createdroles?: roleUncheckedCreateNestedManyWithoutCreateduserInput
    updatedroles?: roleUncheckedCreateNestedManyWithoutUpdateduserInput
    createdrolepermissions?: rolepermissionUncheckedCreateNestedManyWithoutCreateduserInput
    updatedrolepermissions?: rolepermissionUncheckedCreateNestedManyWithoutUpdateduserInput
    createdusers?: userUncheckedCreateNestedManyWithoutCreateduserInput
    updatedusers?: userUncheckedCreateNestedManyWithoutUpdateduserInput
    createduserpermissions?: userpermissionUncheckedCreateNestedManyWithoutCreateduserInput
    updateduserpermissions?: userpermissionUncheckedCreateNestedManyWithoutUpdateduserInput
    userpermissions?: userpermissionUncheckedCreateNestedManyWithoutUserInput
    createduserroles?: userroleUncheckedCreateNestedManyWithoutCreateduserInput
    updateduserroles?: userroleUncheckedCreateNestedManyWithoutUpdateduserInput
    userroles?: userroleUncheckedCreateNestedManyWithoutUserInput
    language?: languagesUncheckedCreateNestedManyWithoutUserInput
    learningProgress?: learningProgressUncheckedCreateNestedManyWithoutUserInput
    chats?: chatUncheckedCreateNestedManyWithoutUserInput
    chatRooms?: chatRoomUncheckedCreateNestedManyWithoutUserInput
  }

  export type userCreateOrConnectWithoutSubscriptionsInput = {
    where: userWhereUniqueInput
    create: XOR<userCreateWithoutSubscriptionsInput, userUncheckedCreateWithoutSubscriptionsInput>
  }

  export type packagesCreateWithoutSubscriptionsInput = {
    id?: string
    name: string
    description: string
    icon: string
    duration: $Enums.duration
    popular?: boolean
    highlightColor?: string | null
    savings?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    features?: packageFeatureCreateNestedManyWithoutPackageInput
    prices?: priceCreateNestedManyWithoutPackageInput
  }

  export type packagesUncheckedCreateWithoutSubscriptionsInput = {
    id?: string
    name: string
    description: string
    icon: string
    duration: $Enums.duration
    popular?: boolean
    highlightColor?: string | null
    savings?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    features?: packageFeatureUncheckedCreateNestedManyWithoutPackageInput
    prices?: priceUncheckedCreateNestedManyWithoutPackageInput
  }

  export type packagesCreateOrConnectWithoutSubscriptionsInput = {
    where: packagesWhereUniqueInput
    create: XOR<packagesCreateWithoutSubscriptionsInput, packagesUncheckedCreateWithoutSubscriptionsInput>
  }

  export type userUpsertWithoutSubscriptionsInput = {
    update: XOR<userUpdateWithoutSubscriptionsInput, userUncheckedUpdateWithoutSubscriptionsInput>
    create: XOR<userCreateWithoutSubscriptionsInput, userUncheckedCreateWithoutSubscriptionsInput>
    where?: userWhereInput
  }

  export type userUpdateToOneWithWhereWithoutSubscriptionsInput = {
    where?: userWhereInput
    data: XOR<userUpdateWithoutSubscriptionsInput, userUncheckedUpdateWithoutSubscriptionsInput>
  }

  export type userUpdateWithoutSubscriptionsInput = {
    id?: StringFieldUpdateOperationsInput | string
    firstname?: StringFieldUpdateOperationsInput | string
    lastname?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    appLanguage?: NullableStringFieldUpdateOperationsInput | string | null
    learningLanguage?: NullableStringFieldUpdateOperationsInput | string | null
    learningLevel?: NullableStringFieldUpdateOperationsInput | string | null
    theme?: NullableStringFieldUpdateOperationsInput | string | null
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    createdat?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: IntFieldUpdateOperationsInput | number
    lastentranceat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastexitat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastloginat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    stripeCustomerId?: NullableStringFieldUpdateOperationsInput | string | null
    notificationuser?: notificationUpdateManyWithoutToNestedInput
    createdapiclients?: apiclientUpdateManyWithoutCreateduserNestedInput
    updatedapiclients?: apiclientUpdateManyWithoutUpdateduserNestedInput
    createdpermissions?: permissionUpdateManyWithoutCreateduserNestedInput
    updatedpermissions?: permissionUpdateManyWithoutUpdateduserNestedInput
    refreshtokens?: refreshtokenUpdateManyWithoutUserNestedInput
    createdroles?: roleUpdateManyWithoutCreateduserNestedInput
    updatedroles?: roleUpdateManyWithoutUpdateduserNestedInput
    createdrolepermissions?: rolepermissionUpdateManyWithoutCreateduserNestedInput
    updatedrolepermissions?: rolepermissionUpdateManyWithoutUpdateduserNestedInput
    createduser?: userUpdateOneRequiredWithoutCreatedusersNestedInput
    createdusers?: userUpdateManyWithoutCreateduserNestedInput
    updateduser?: userUpdateOneWithoutUpdatedusersNestedInput
    updatedusers?: userUpdateManyWithoutUpdateduserNestedInput
    createduserpermissions?: userpermissionUpdateManyWithoutCreateduserNestedInput
    updateduserpermissions?: userpermissionUpdateManyWithoutUpdateduserNestedInput
    userpermissions?: userpermissionUpdateManyWithoutUserNestedInput
    createduserroles?: userroleUpdateManyWithoutCreateduserNestedInput
    updateduserroles?: userroleUpdateManyWithoutUpdateduserNestedInput
    userroles?: userroleUpdateManyWithoutUserNestedInput
    language?: languagesUpdateManyWithoutUserNestedInput
    learningProgress?: learningProgressUpdateManyWithoutUserNestedInput
    chats?: chatUpdateManyWithoutUserNestedInput
    chatRooms?: chatRoomUpdateManyWithoutUserNestedInput
  }

  export type userUncheckedUpdateWithoutSubscriptionsInput = {
    id?: StringFieldUpdateOperationsInput | string
    firstname?: StringFieldUpdateOperationsInput | string
    lastname?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    appLanguage?: NullableStringFieldUpdateOperationsInput | string | null
    learningLanguage?: NullableStringFieldUpdateOperationsInput | string | null
    learningLevel?: NullableStringFieldUpdateOperationsInput | string | null
    theme?: NullableStringFieldUpdateOperationsInput | string | null
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    createdby?: StringFieldUpdateOperationsInput | string
    createdat?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedby?: NullableStringFieldUpdateOperationsInput | string | null
    updatedat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: IntFieldUpdateOperationsInput | number
    lastentranceat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastexitat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastloginat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    stripeCustomerId?: NullableStringFieldUpdateOperationsInput | string | null
    notificationuser?: notificationUncheckedUpdateManyWithoutToNestedInput
    createdapiclients?: apiclientUncheckedUpdateManyWithoutCreateduserNestedInput
    updatedapiclients?: apiclientUncheckedUpdateManyWithoutUpdateduserNestedInput
    createdpermissions?: permissionUncheckedUpdateManyWithoutCreateduserNestedInput
    updatedpermissions?: permissionUncheckedUpdateManyWithoutUpdateduserNestedInput
    refreshtokens?: refreshtokenUncheckedUpdateManyWithoutUserNestedInput
    createdroles?: roleUncheckedUpdateManyWithoutCreateduserNestedInput
    updatedroles?: roleUncheckedUpdateManyWithoutUpdateduserNestedInput
    createdrolepermissions?: rolepermissionUncheckedUpdateManyWithoutCreateduserNestedInput
    updatedrolepermissions?: rolepermissionUncheckedUpdateManyWithoutUpdateduserNestedInput
    createdusers?: userUncheckedUpdateManyWithoutCreateduserNestedInput
    updatedusers?: userUncheckedUpdateManyWithoutUpdateduserNestedInput
    createduserpermissions?: userpermissionUncheckedUpdateManyWithoutCreateduserNestedInput
    updateduserpermissions?: userpermissionUncheckedUpdateManyWithoutUpdateduserNestedInput
    userpermissions?: userpermissionUncheckedUpdateManyWithoutUserNestedInput
    createduserroles?: userroleUncheckedUpdateManyWithoutCreateduserNestedInput
    updateduserroles?: userroleUncheckedUpdateManyWithoutUpdateduserNestedInput
    userroles?: userroleUncheckedUpdateManyWithoutUserNestedInput
    language?: languagesUncheckedUpdateManyWithoutUserNestedInput
    learningProgress?: learningProgressUncheckedUpdateManyWithoutUserNestedInput
    chats?: chatUncheckedUpdateManyWithoutUserNestedInput
    chatRooms?: chatRoomUncheckedUpdateManyWithoutUserNestedInput
  }

  export type packagesUpsertWithoutSubscriptionsInput = {
    update: XOR<packagesUpdateWithoutSubscriptionsInput, packagesUncheckedUpdateWithoutSubscriptionsInput>
    create: XOR<packagesCreateWithoutSubscriptionsInput, packagesUncheckedCreateWithoutSubscriptionsInput>
    where?: packagesWhereInput
  }

  export type packagesUpdateToOneWithWhereWithoutSubscriptionsInput = {
    where?: packagesWhereInput
    data: XOR<packagesUpdateWithoutSubscriptionsInput, packagesUncheckedUpdateWithoutSubscriptionsInput>
  }

  export type packagesUpdateWithoutSubscriptionsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    icon?: StringFieldUpdateOperationsInput | string
    duration?: EnumdurationFieldUpdateOperationsInput | $Enums.duration
    popular?: BoolFieldUpdateOperationsInput | boolean
    highlightColor?: NullableStringFieldUpdateOperationsInput | string | null
    savings?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    features?: packageFeatureUpdateManyWithoutPackageNestedInput
    prices?: priceUpdateManyWithoutPackageNestedInput
  }

  export type packagesUncheckedUpdateWithoutSubscriptionsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    icon?: StringFieldUpdateOperationsInput | string
    duration?: EnumdurationFieldUpdateOperationsInput | $Enums.duration
    popular?: BoolFieldUpdateOperationsInput | boolean
    highlightColor?: NullableStringFieldUpdateOperationsInput | string | null
    savings?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    features?: packageFeatureUncheckedUpdateManyWithoutPackageNestedInput
    prices?: priceUncheckedUpdateManyWithoutPackageNestedInput
  }

  export type userCreateWithoutChatRoomsInput = {
    id?: string
    firstname: string
    lastname: string
    phone?: string | null
    email: string
    password: string
    appLanguage?: string | null
    learningLanguage?: string | null
    learningLevel?: string | null
    theme?: string | null
    avatar?: string | null
    createdat?: Date | string
    updatedat?: Date | string | null
    status?: number
    lastentranceat?: Date | string | null
    lastexitat?: Date | string | null
    lastloginat?: Date | string | null
    stripeCustomerId?: string | null
    notificationuser?: notificationCreateNestedManyWithoutToInput
    createdapiclients?: apiclientCreateNestedManyWithoutCreateduserInput
    updatedapiclients?: apiclientCreateNestedManyWithoutUpdateduserInput
    createdpermissions?: permissionCreateNestedManyWithoutCreateduserInput
    updatedpermissions?: permissionCreateNestedManyWithoutUpdateduserInput
    refreshtokens?: refreshtokenCreateNestedManyWithoutUserInput
    createdroles?: roleCreateNestedManyWithoutCreateduserInput
    updatedroles?: roleCreateNestedManyWithoutUpdateduserInput
    createdrolepermissions?: rolepermissionCreateNestedManyWithoutCreateduserInput
    updatedrolepermissions?: rolepermissionCreateNestedManyWithoutUpdateduserInput
    createduser: userCreateNestedOneWithoutCreatedusersInput
    createdusers?: userCreateNestedManyWithoutCreateduserInput
    updateduser?: userCreateNestedOneWithoutUpdatedusersInput
    updatedusers?: userCreateNestedManyWithoutUpdateduserInput
    createduserpermissions?: userpermissionCreateNestedManyWithoutCreateduserInput
    updateduserpermissions?: userpermissionCreateNestedManyWithoutUpdateduserInput
    userpermissions?: userpermissionCreateNestedManyWithoutUserInput
    createduserroles?: userroleCreateNestedManyWithoutCreateduserInput
    updateduserroles?: userroleCreateNestedManyWithoutUpdateduserInput
    userroles?: userroleCreateNestedManyWithoutUserInput
    language?: languagesCreateNestedManyWithoutUserInput
    learningProgress?: learningProgressCreateNestedManyWithoutUserInput
    chats?: chatCreateNestedManyWithoutUserInput
    subscriptions?: subscriptionCreateNestedManyWithoutUserInput
  }

  export type userUncheckedCreateWithoutChatRoomsInput = {
    id?: string
    firstname: string
    lastname: string
    phone?: string | null
    email: string
    password: string
    appLanguage?: string | null
    learningLanguage?: string | null
    learningLevel?: string | null
    theme?: string | null
    avatar?: string | null
    createdby: string
    createdat?: Date | string
    updatedby?: string | null
    updatedat?: Date | string | null
    status?: number
    lastentranceat?: Date | string | null
    lastexitat?: Date | string | null
    lastloginat?: Date | string | null
    stripeCustomerId?: string | null
    notificationuser?: notificationUncheckedCreateNestedManyWithoutToInput
    createdapiclients?: apiclientUncheckedCreateNestedManyWithoutCreateduserInput
    updatedapiclients?: apiclientUncheckedCreateNestedManyWithoutUpdateduserInput
    createdpermissions?: permissionUncheckedCreateNestedManyWithoutCreateduserInput
    updatedpermissions?: permissionUncheckedCreateNestedManyWithoutUpdateduserInput
    refreshtokens?: refreshtokenUncheckedCreateNestedManyWithoutUserInput
    createdroles?: roleUncheckedCreateNestedManyWithoutCreateduserInput
    updatedroles?: roleUncheckedCreateNestedManyWithoutUpdateduserInput
    createdrolepermissions?: rolepermissionUncheckedCreateNestedManyWithoutCreateduserInput
    updatedrolepermissions?: rolepermissionUncheckedCreateNestedManyWithoutUpdateduserInput
    createdusers?: userUncheckedCreateNestedManyWithoutCreateduserInput
    updatedusers?: userUncheckedCreateNestedManyWithoutUpdateduserInput
    createduserpermissions?: userpermissionUncheckedCreateNestedManyWithoutCreateduserInput
    updateduserpermissions?: userpermissionUncheckedCreateNestedManyWithoutUpdateduserInput
    userpermissions?: userpermissionUncheckedCreateNestedManyWithoutUserInput
    createduserroles?: userroleUncheckedCreateNestedManyWithoutCreateduserInput
    updateduserroles?: userroleUncheckedCreateNestedManyWithoutUpdateduserInput
    userroles?: userroleUncheckedCreateNestedManyWithoutUserInput
    language?: languagesUncheckedCreateNestedManyWithoutUserInput
    learningProgress?: learningProgressUncheckedCreateNestedManyWithoutUserInput
    chats?: chatUncheckedCreateNestedManyWithoutUserInput
    subscriptions?: subscriptionUncheckedCreateNestedManyWithoutUserInput
  }

  export type userCreateOrConnectWithoutChatRoomsInput = {
    where: userWhereUniqueInput
    create: XOR<userCreateWithoutChatRoomsInput, userUncheckedCreateWithoutChatRoomsInput>
  }

  export type chatCreateWithoutRoomInput = {
    id?: string
    message: string
    role?: string
    createdAt?: Date | string
    updatedAt?: Date | string | null
    user: userCreateNestedOneWithoutChatsInput
  }

  export type chatUncheckedCreateWithoutRoomInput = {
    id?: string
    userId: string
    message: string
    role?: string
    createdAt?: Date | string
    updatedAt?: Date | string | null
  }

  export type chatCreateOrConnectWithoutRoomInput = {
    where: chatWhereUniqueInput
    create: XOR<chatCreateWithoutRoomInput, chatUncheckedCreateWithoutRoomInput>
  }

  export type chatCreateManyRoomInputEnvelope = {
    data: chatCreateManyRoomInput | chatCreateManyRoomInput[]
    skipDuplicates?: boolean
  }

  export type userUpsertWithoutChatRoomsInput = {
    update: XOR<userUpdateWithoutChatRoomsInput, userUncheckedUpdateWithoutChatRoomsInput>
    create: XOR<userCreateWithoutChatRoomsInput, userUncheckedCreateWithoutChatRoomsInput>
    where?: userWhereInput
  }

  export type userUpdateToOneWithWhereWithoutChatRoomsInput = {
    where?: userWhereInput
    data: XOR<userUpdateWithoutChatRoomsInput, userUncheckedUpdateWithoutChatRoomsInput>
  }

  export type userUpdateWithoutChatRoomsInput = {
    id?: StringFieldUpdateOperationsInput | string
    firstname?: StringFieldUpdateOperationsInput | string
    lastname?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    appLanguage?: NullableStringFieldUpdateOperationsInput | string | null
    learningLanguage?: NullableStringFieldUpdateOperationsInput | string | null
    learningLevel?: NullableStringFieldUpdateOperationsInput | string | null
    theme?: NullableStringFieldUpdateOperationsInput | string | null
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    createdat?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: IntFieldUpdateOperationsInput | number
    lastentranceat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastexitat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastloginat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    stripeCustomerId?: NullableStringFieldUpdateOperationsInput | string | null
    notificationuser?: notificationUpdateManyWithoutToNestedInput
    createdapiclients?: apiclientUpdateManyWithoutCreateduserNestedInput
    updatedapiclients?: apiclientUpdateManyWithoutUpdateduserNestedInput
    createdpermissions?: permissionUpdateManyWithoutCreateduserNestedInput
    updatedpermissions?: permissionUpdateManyWithoutUpdateduserNestedInput
    refreshtokens?: refreshtokenUpdateManyWithoutUserNestedInput
    createdroles?: roleUpdateManyWithoutCreateduserNestedInput
    updatedroles?: roleUpdateManyWithoutUpdateduserNestedInput
    createdrolepermissions?: rolepermissionUpdateManyWithoutCreateduserNestedInput
    updatedrolepermissions?: rolepermissionUpdateManyWithoutUpdateduserNestedInput
    createduser?: userUpdateOneRequiredWithoutCreatedusersNestedInput
    createdusers?: userUpdateManyWithoutCreateduserNestedInput
    updateduser?: userUpdateOneWithoutUpdatedusersNestedInput
    updatedusers?: userUpdateManyWithoutUpdateduserNestedInput
    createduserpermissions?: userpermissionUpdateManyWithoutCreateduserNestedInput
    updateduserpermissions?: userpermissionUpdateManyWithoutUpdateduserNestedInput
    userpermissions?: userpermissionUpdateManyWithoutUserNestedInput
    createduserroles?: userroleUpdateManyWithoutCreateduserNestedInput
    updateduserroles?: userroleUpdateManyWithoutUpdateduserNestedInput
    userroles?: userroleUpdateManyWithoutUserNestedInput
    language?: languagesUpdateManyWithoutUserNestedInput
    learningProgress?: learningProgressUpdateManyWithoutUserNestedInput
    chats?: chatUpdateManyWithoutUserNestedInput
    subscriptions?: subscriptionUpdateManyWithoutUserNestedInput
  }

  export type userUncheckedUpdateWithoutChatRoomsInput = {
    id?: StringFieldUpdateOperationsInput | string
    firstname?: StringFieldUpdateOperationsInput | string
    lastname?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    appLanguage?: NullableStringFieldUpdateOperationsInput | string | null
    learningLanguage?: NullableStringFieldUpdateOperationsInput | string | null
    learningLevel?: NullableStringFieldUpdateOperationsInput | string | null
    theme?: NullableStringFieldUpdateOperationsInput | string | null
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    createdby?: StringFieldUpdateOperationsInput | string
    createdat?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedby?: NullableStringFieldUpdateOperationsInput | string | null
    updatedat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: IntFieldUpdateOperationsInput | number
    lastentranceat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastexitat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastloginat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    stripeCustomerId?: NullableStringFieldUpdateOperationsInput | string | null
    notificationuser?: notificationUncheckedUpdateManyWithoutToNestedInput
    createdapiclients?: apiclientUncheckedUpdateManyWithoutCreateduserNestedInput
    updatedapiclients?: apiclientUncheckedUpdateManyWithoutUpdateduserNestedInput
    createdpermissions?: permissionUncheckedUpdateManyWithoutCreateduserNestedInput
    updatedpermissions?: permissionUncheckedUpdateManyWithoutUpdateduserNestedInput
    refreshtokens?: refreshtokenUncheckedUpdateManyWithoutUserNestedInput
    createdroles?: roleUncheckedUpdateManyWithoutCreateduserNestedInput
    updatedroles?: roleUncheckedUpdateManyWithoutUpdateduserNestedInput
    createdrolepermissions?: rolepermissionUncheckedUpdateManyWithoutCreateduserNestedInput
    updatedrolepermissions?: rolepermissionUncheckedUpdateManyWithoutUpdateduserNestedInput
    createdusers?: userUncheckedUpdateManyWithoutCreateduserNestedInput
    updatedusers?: userUncheckedUpdateManyWithoutUpdateduserNestedInput
    createduserpermissions?: userpermissionUncheckedUpdateManyWithoutCreateduserNestedInput
    updateduserpermissions?: userpermissionUncheckedUpdateManyWithoutUpdateduserNestedInput
    userpermissions?: userpermissionUncheckedUpdateManyWithoutUserNestedInput
    createduserroles?: userroleUncheckedUpdateManyWithoutCreateduserNestedInput
    updateduserroles?: userroleUncheckedUpdateManyWithoutUpdateduserNestedInput
    userroles?: userroleUncheckedUpdateManyWithoutUserNestedInput
    language?: languagesUncheckedUpdateManyWithoutUserNestedInput
    learningProgress?: learningProgressUncheckedUpdateManyWithoutUserNestedInput
    chats?: chatUncheckedUpdateManyWithoutUserNestedInput
    subscriptions?: subscriptionUncheckedUpdateManyWithoutUserNestedInput
  }

  export type chatUpsertWithWhereUniqueWithoutRoomInput = {
    where: chatWhereUniqueInput
    update: XOR<chatUpdateWithoutRoomInput, chatUncheckedUpdateWithoutRoomInput>
    create: XOR<chatCreateWithoutRoomInput, chatUncheckedCreateWithoutRoomInput>
  }

  export type chatUpdateWithWhereUniqueWithoutRoomInput = {
    where: chatWhereUniqueInput
    data: XOR<chatUpdateWithoutRoomInput, chatUncheckedUpdateWithoutRoomInput>
  }

  export type chatUpdateManyWithWhereWithoutRoomInput = {
    where: chatScalarWhereInput
    data: XOR<chatUpdateManyMutationInput, chatUncheckedUpdateManyWithoutRoomInput>
  }

  export type chatScalarWhereInput = {
    AND?: chatScalarWhereInput | chatScalarWhereInput[]
    OR?: chatScalarWhereInput[]
    NOT?: chatScalarWhereInput | chatScalarWhereInput[]
    id?: StringFilter<"chat"> | string
    roomId?: StringFilter<"chat"> | string
    userId?: StringFilter<"chat"> | string
    message?: StringFilter<"chat"> | string
    role?: StringFilter<"chat"> | string
    createdAt?: DateTimeFilter<"chat"> | Date | string
    updatedAt?: DateTimeNullableFilter<"chat"> | Date | string | null
  }

  export type userCreateWithoutChatsInput = {
    id?: string
    firstname: string
    lastname: string
    phone?: string | null
    email: string
    password: string
    appLanguage?: string | null
    learningLanguage?: string | null
    learningLevel?: string | null
    theme?: string | null
    avatar?: string | null
    createdat?: Date | string
    updatedat?: Date | string | null
    status?: number
    lastentranceat?: Date | string | null
    lastexitat?: Date | string | null
    lastloginat?: Date | string | null
    stripeCustomerId?: string | null
    notificationuser?: notificationCreateNestedManyWithoutToInput
    createdapiclients?: apiclientCreateNestedManyWithoutCreateduserInput
    updatedapiclients?: apiclientCreateNestedManyWithoutUpdateduserInput
    createdpermissions?: permissionCreateNestedManyWithoutCreateduserInput
    updatedpermissions?: permissionCreateNestedManyWithoutUpdateduserInput
    refreshtokens?: refreshtokenCreateNestedManyWithoutUserInput
    createdroles?: roleCreateNestedManyWithoutCreateduserInput
    updatedroles?: roleCreateNestedManyWithoutUpdateduserInput
    createdrolepermissions?: rolepermissionCreateNestedManyWithoutCreateduserInput
    updatedrolepermissions?: rolepermissionCreateNestedManyWithoutUpdateduserInput
    createduser: userCreateNestedOneWithoutCreatedusersInput
    createdusers?: userCreateNestedManyWithoutCreateduserInput
    updateduser?: userCreateNestedOneWithoutUpdatedusersInput
    updatedusers?: userCreateNestedManyWithoutUpdateduserInput
    createduserpermissions?: userpermissionCreateNestedManyWithoutCreateduserInput
    updateduserpermissions?: userpermissionCreateNestedManyWithoutUpdateduserInput
    userpermissions?: userpermissionCreateNestedManyWithoutUserInput
    createduserroles?: userroleCreateNestedManyWithoutCreateduserInput
    updateduserroles?: userroleCreateNestedManyWithoutUpdateduserInput
    userroles?: userroleCreateNestedManyWithoutUserInput
    language?: languagesCreateNestedManyWithoutUserInput
    learningProgress?: learningProgressCreateNestedManyWithoutUserInput
    chatRooms?: chatRoomCreateNestedManyWithoutUserInput
    subscriptions?: subscriptionCreateNestedManyWithoutUserInput
  }

  export type userUncheckedCreateWithoutChatsInput = {
    id?: string
    firstname: string
    lastname: string
    phone?: string | null
    email: string
    password: string
    appLanguage?: string | null
    learningLanguage?: string | null
    learningLevel?: string | null
    theme?: string | null
    avatar?: string | null
    createdby: string
    createdat?: Date | string
    updatedby?: string | null
    updatedat?: Date | string | null
    status?: number
    lastentranceat?: Date | string | null
    lastexitat?: Date | string | null
    lastloginat?: Date | string | null
    stripeCustomerId?: string | null
    notificationuser?: notificationUncheckedCreateNestedManyWithoutToInput
    createdapiclients?: apiclientUncheckedCreateNestedManyWithoutCreateduserInput
    updatedapiclients?: apiclientUncheckedCreateNestedManyWithoutUpdateduserInput
    createdpermissions?: permissionUncheckedCreateNestedManyWithoutCreateduserInput
    updatedpermissions?: permissionUncheckedCreateNestedManyWithoutUpdateduserInput
    refreshtokens?: refreshtokenUncheckedCreateNestedManyWithoutUserInput
    createdroles?: roleUncheckedCreateNestedManyWithoutCreateduserInput
    updatedroles?: roleUncheckedCreateNestedManyWithoutUpdateduserInput
    createdrolepermissions?: rolepermissionUncheckedCreateNestedManyWithoutCreateduserInput
    updatedrolepermissions?: rolepermissionUncheckedCreateNestedManyWithoutUpdateduserInput
    createdusers?: userUncheckedCreateNestedManyWithoutCreateduserInput
    updatedusers?: userUncheckedCreateNestedManyWithoutUpdateduserInput
    createduserpermissions?: userpermissionUncheckedCreateNestedManyWithoutCreateduserInput
    updateduserpermissions?: userpermissionUncheckedCreateNestedManyWithoutUpdateduserInput
    userpermissions?: userpermissionUncheckedCreateNestedManyWithoutUserInput
    createduserroles?: userroleUncheckedCreateNestedManyWithoutCreateduserInput
    updateduserroles?: userroleUncheckedCreateNestedManyWithoutUpdateduserInput
    userroles?: userroleUncheckedCreateNestedManyWithoutUserInput
    language?: languagesUncheckedCreateNestedManyWithoutUserInput
    learningProgress?: learningProgressUncheckedCreateNestedManyWithoutUserInput
    chatRooms?: chatRoomUncheckedCreateNestedManyWithoutUserInput
    subscriptions?: subscriptionUncheckedCreateNestedManyWithoutUserInput
  }

  export type userCreateOrConnectWithoutChatsInput = {
    where: userWhereUniqueInput
    create: XOR<userCreateWithoutChatsInput, userUncheckedCreateWithoutChatsInput>
  }

  export type chatRoomCreateWithoutMessagesInput = {
    id?: string
    title?: string
    language: string
    createdAt?: Date | string
    updatedAt?: Date | string | null
    user: userCreateNestedOneWithoutChatRoomsInput
  }

  export type chatRoomUncheckedCreateWithoutMessagesInput = {
    id?: string
    userId: string
    title?: string
    language: string
    createdAt?: Date | string
    updatedAt?: Date | string | null
  }

  export type chatRoomCreateOrConnectWithoutMessagesInput = {
    where: chatRoomWhereUniqueInput
    create: XOR<chatRoomCreateWithoutMessagesInput, chatRoomUncheckedCreateWithoutMessagesInput>
  }

  export type userUpsertWithoutChatsInput = {
    update: XOR<userUpdateWithoutChatsInput, userUncheckedUpdateWithoutChatsInput>
    create: XOR<userCreateWithoutChatsInput, userUncheckedCreateWithoutChatsInput>
    where?: userWhereInput
  }

  export type userUpdateToOneWithWhereWithoutChatsInput = {
    where?: userWhereInput
    data: XOR<userUpdateWithoutChatsInput, userUncheckedUpdateWithoutChatsInput>
  }

  export type userUpdateWithoutChatsInput = {
    id?: StringFieldUpdateOperationsInput | string
    firstname?: StringFieldUpdateOperationsInput | string
    lastname?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    appLanguage?: NullableStringFieldUpdateOperationsInput | string | null
    learningLanguage?: NullableStringFieldUpdateOperationsInput | string | null
    learningLevel?: NullableStringFieldUpdateOperationsInput | string | null
    theme?: NullableStringFieldUpdateOperationsInput | string | null
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    createdat?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: IntFieldUpdateOperationsInput | number
    lastentranceat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastexitat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastloginat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    stripeCustomerId?: NullableStringFieldUpdateOperationsInput | string | null
    notificationuser?: notificationUpdateManyWithoutToNestedInput
    createdapiclients?: apiclientUpdateManyWithoutCreateduserNestedInput
    updatedapiclients?: apiclientUpdateManyWithoutUpdateduserNestedInput
    createdpermissions?: permissionUpdateManyWithoutCreateduserNestedInput
    updatedpermissions?: permissionUpdateManyWithoutUpdateduserNestedInput
    refreshtokens?: refreshtokenUpdateManyWithoutUserNestedInput
    createdroles?: roleUpdateManyWithoutCreateduserNestedInput
    updatedroles?: roleUpdateManyWithoutUpdateduserNestedInput
    createdrolepermissions?: rolepermissionUpdateManyWithoutCreateduserNestedInput
    updatedrolepermissions?: rolepermissionUpdateManyWithoutUpdateduserNestedInput
    createduser?: userUpdateOneRequiredWithoutCreatedusersNestedInput
    createdusers?: userUpdateManyWithoutCreateduserNestedInput
    updateduser?: userUpdateOneWithoutUpdatedusersNestedInput
    updatedusers?: userUpdateManyWithoutUpdateduserNestedInput
    createduserpermissions?: userpermissionUpdateManyWithoutCreateduserNestedInput
    updateduserpermissions?: userpermissionUpdateManyWithoutUpdateduserNestedInput
    userpermissions?: userpermissionUpdateManyWithoutUserNestedInput
    createduserroles?: userroleUpdateManyWithoutCreateduserNestedInput
    updateduserroles?: userroleUpdateManyWithoutUpdateduserNestedInput
    userroles?: userroleUpdateManyWithoutUserNestedInput
    language?: languagesUpdateManyWithoutUserNestedInput
    learningProgress?: learningProgressUpdateManyWithoutUserNestedInput
    chatRooms?: chatRoomUpdateManyWithoutUserNestedInput
    subscriptions?: subscriptionUpdateManyWithoutUserNestedInput
  }

  export type userUncheckedUpdateWithoutChatsInput = {
    id?: StringFieldUpdateOperationsInput | string
    firstname?: StringFieldUpdateOperationsInput | string
    lastname?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    appLanguage?: NullableStringFieldUpdateOperationsInput | string | null
    learningLanguage?: NullableStringFieldUpdateOperationsInput | string | null
    learningLevel?: NullableStringFieldUpdateOperationsInput | string | null
    theme?: NullableStringFieldUpdateOperationsInput | string | null
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    createdby?: StringFieldUpdateOperationsInput | string
    createdat?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedby?: NullableStringFieldUpdateOperationsInput | string | null
    updatedat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: IntFieldUpdateOperationsInput | number
    lastentranceat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastexitat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastloginat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    stripeCustomerId?: NullableStringFieldUpdateOperationsInput | string | null
    notificationuser?: notificationUncheckedUpdateManyWithoutToNestedInput
    createdapiclients?: apiclientUncheckedUpdateManyWithoutCreateduserNestedInput
    updatedapiclients?: apiclientUncheckedUpdateManyWithoutUpdateduserNestedInput
    createdpermissions?: permissionUncheckedUpdateManyWithoutCreateduserNestedInput
    updatedpermissions?: permissionUncheckedUpdateManyWithoutUpdateduserNestedInput
    refreshtokens?: refreshtokenUncheckedUpdateManyWithoutUserNestedInput
    createdroles?: roleUncheckedUpdateManyWithoutCreateduserNestedInput
    updatedroles?: roleUncheckedUpdateManyWithoutUpdateduserNestedInput
    createdrolepermissions?: rolepermissionUncheckedUpdateManyWithoutCreateduserNestedInput
    updatedrolepermissions?: rolepermissionUncheckedUpdateManyWithoutUpdateduserNestedInput
    createdusers?: userUncheckedUpdateManyWithoutCreateduserNestedInput
    updatedusers?: userUncheckedUpdateManyWithoutUpdateduserNestedInput
    createduserpermissions?: userpermissionUncheckedUpdateManyWithoutCreateduserNestedInput
    updateduserpermissions?: userpermissionUncheckedUpdateManyWithoutUpdateduserNestedInput
    userpermissions?: userpermissionUncheckedUpdateManyWithoutUserNestedInput
    createduserroles?: userroleUncheckedUpdateManyWithoutCreateduserNestedInput
    updateduserroles?: userroleUncheckedUpdateManyWithoutUpdateduserNestedInput
    userroles?: userroleUncheckedUpdateManyWithoutUserNestedInput
    language?: languagesUncheckedUpdateManyWithoutUserNestedInput
    learningProgress?: learningProgressUncheckedUpdateManyWithoutUserNestedInput
    chatRooms?: chatRoomUncheckedUpdateManyWithoutUserNestedInput
    subscriptions?: subscriptionUncheckedUpdateManyWithoutUserNestedInput
  }

  export type chatRoomUpsertWithoutMessagesInput = {
    update: XOR<chatRoomUpdateWithoutMessagesInput, chatRoomUncheckedUpdateWithoutMessagesInput>
    create: XOR<chatRoomCreateWithoutMessagesInput, chatRoomUncheckedCreateWithoutMessagesInput>
    where?: chatRoomWhereInput
  }

  export type chatRoomUpdateToOneWithWhereWithoutMessagesInput = {
    where?: chatRoomWhereInput
    data: XOR<chatRoomUpdateWithoutMessagesInput, chatRoomUncheckedUpdateWithoutMessagesInput>
  }

  export type chatRoomUpdateWithoutMessagesInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    language?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    user?: userUpdateOneRequiredWithoutChatRoomsNestedInput
  }

  export type chatRoomUncheckedUpdateWithoutMessagesInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    language?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type userCreateWithoutLearningProgressInput = {
    id?: string
    firstname: string
    lastname: string
    phone?: string | null
    email: string
    password: string
    appLanguage?: string | null
    learningLanguage?: string | null
    learningLevel?: string | null
    theme?: string | null
    avatar?: string | null
    createdat?: Date | string
    updatedat?: Date | string | null
    status?: number
    lastentranceat?: Date | string | null
    lastexitat?: Date | string | null
    lastloginat?: Date | string | null
    stripeCustomerId?: string | null
    notificationuser?: notificationCreateNestedManyWithoutToInput
    createdapiclients?: apiclientCreateNestedManyWithoutCreateduserInput
    updatedapiclients?: apiclientCreateNestedManyWithoutUpdateduserInput
    createdpermissions?: permissionCreateNestedManyWithoutCreateduserInput
    updatedpermissions?: permissionCreateNestedManyWithoutUpdateduserInput
    refreshtokens?: refreshtokenCreateNestedManyWithoutUserInput
    createdroles?: roleCreateNestedManyWithoutCreateduserInput
    updatedroles?: roleCreateNestedManyWithoutUpdateduserInput
    createdrolepermissions?: rolepermissionCreateNestedManyWithoutCreateduserInput
    updatedrolepermissions?: rolepermissionCreateNestedManyWithoutUpdateduserInput
    createduser: userCreateNestedOneWithoutCreatedusersInput
    createdusers?: userCreateNestedManyWithoutCreateduserInput
    updateduser?: userCreateNestedOneWithoutUpdatedusersInput
    updatedusers?: userCreateNestedManyWithoutUpdateduserInput
    createduserpermissions?: userpermissionCreateNestedManyWithoutCreateduserInput
    updateduserpermissions?: userpermissionCreateNestedManyWithoutUpdateduserInput
    userpermissions?: userpermissionCreateNestedManyWithoutUserInput
    createduserroles?: userroleCreateNestedManyWithoutCreateduserInput
    updateduserroles?: userroleCreateNestedManyWithoutUpdateduserInput
    userroles?: userroleCreateNestedManyWithoutUserInput
    language?: languagesCreateNestedManyWithoutUserInput
    chats?: chatCreateNestedManyWithoutUserInput
    chatRooms?: chatRoomCreateNestedManyWithoutUserInput
    subscriptions?: subscriptionCreateNestedManyWithoutUserInput
  }

  export type userUncheckedCreateWithoutLearningProgressInput = {
    id?: string
    firstname: string
    lastname: string
    phone?: string | null
    email: string
    password: string
    appLanguage?: string | null
    learningLanguage?: string | null
    learningLevel?: string | null
    theme?: string | null
    avatar?: string | null
    createdby: string
    createdat?: Date | string
    updatedby?: string | null
    updatedat?: Date | string | null
    status?: number
    lastentranceat?: Date | string | null
    lastexitat?: Date | string | null
    lastloginat?: Date | string | null
    stripeCustomerId?: string | null
    notificationuser?: notificationUncheckedCreateNestedManyWithoutToInput
    createdapiclients?: apiclientUncheckedCreateNestedManyWithoutCreateduserInput
    updatedapiclients?: apiclientUncheckedCreateNestedManyWithoutUpdateduserInput
    createdpermissions?: permissionUncheckedCreateNestedManyWithoutCreateduserInput
    updatedpermissions?: permissionUncheckedCreateNestedManyWithoutUpdateduserInput
    refreshtokens?: refreshtokenUncheckedCreateNestedManyWithoutUserInput
    createdroles?: roleUncheckedCreateNestedManyWithoutCreateduserInput
    updatedroles?: roleUncheckedCreateNestedManyWithoutUpdateduserInput
    createdrolepermissions?: rolepermissionUncheckedCreateNestedManyWithoutCreateduserInput
    updatedrolepermissions?: rolepermissionUncheckedCreateNestedManyWithoutUpdateduserInput
    createdusers?: userUncheckedCreateNestedManyWithoutCreateduserInput
    updatedusers?: userUncheckedCreateNestedManyWithoutUpdateduserInput
    createduserpermissions?: userpermissionUncheckedCreateNestedManyWithoutCreateduserInput
    updateduserpermissions?: userpermissionUncheckedCreateNestedManyWithoutUpdateduserInput
    userpermissions?: userpermissionUncheckedCreateNestedManyWithoutUserInput
    createduserroles?: userroleUncheckedCreateNestedManyWithoutCreateduserInput
    updateduserroles?: userroleUncheckedCreateNestedManyWithoutUpdateduserInput
    userroles?: userroleUncheckedCreateNestedManyWithoutUserInput
    language?: languagesUncheckedCreateNestedManyWithoutUserInput
    chats?: chatUncheckedCreateNestedManyWithoutUserInput
    chatRooms?: chatRoomUncheckedCreateNestedManyWithoutUserInput
    subscriptions?: subscriptionUncheckedCreateNestedManyWithoutUserInput
  }

  export type userCreateOrConnectWithoutLearningProgressInput = {
    where: userWhereUniqueInput
    create: XOR<userCreateWithoutLearningProgressInput, userUncheckedCreateWithoutLearningProgressInput>
  }

  export type languagesCreateWithoutLearningProgressInput = {
    id?: string
    flag: string
    name: string
    code: string
    user?: userCreateNestedManyWithoutLanguageInput
  }

  export type languagesUncheckedCreateWithoutLearningProgressInput = {
    id?: string
    flag: string
    name: string
    code: string
    user?: userUncheckedCreateNestedManyWithoutLanguageInput
  }

  export type languagesCreateOrConnectWithoutLearningProgressInput = {
    where: languagesWhereUniqueInput
    create: XOR<languagesCreateWithoutLearningProgressInput, languagesUncheckedCreateWithoutLearningProgressInput>
  }

  export type userUpsertWithoutLearningProgressInput = {
    update: XOR<userUpdateWithoutLearningProgressInput, userUncheckedUpdateWithoutLearningProgressInput>
    create: XOR<userCreateWithoutLearningProgressInput, userUncheckedCreateWithoutLearningProgressInput>
    where?: userWhereInput
  }

  export type userUpdateToOneWithWhereWithoutLearningProgressInput = {
    where?: userWhereInput
    data: XOR<userUpdateWithoutLearningProgressInput, userUncheckedUpdateWithoutLearningProgressInput>
  }

  export type userUpdateWithoutLearningProgressInput = {
    id?: StringFieldUpdateOperationsInput | string
    firstname?: StringFieldUpdateOperationsInput | string
    lastname?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    appLanguage?: NullableStringFieldUpdateOperationsInput | string | null
    learningLanguage?: NullableStringFieldUpdateOperationsInput | string | null
    learningLevel?: NullableStringFieldUpdateOperationsInput | string | null
    theme?: NullableStringFieldUpdateOperationsInput | string | null
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    createdat?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: IntFieldUpdateOperationsInput | number
    lastentranceat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastexitat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastloginat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    stripeCustomerId?: NullableStringFieldUpdateOperationsInput | string | null
    notificationuser?: notificationUpdateManyWithoutToNestedInput
    createdapiclients?: apiclientUpdateManyWithoutCreateduserNestedInput
    updatedapiclients?: apiclientUpdateManyWithoutUpdateduserNestedInput
    createdpermissions?: permissionUpdateManyWithoutCreateduserNestedInput
    updatedpermissions?: permissionUpdateManyWithoutUpdateduserNestedInput
    refreshtokens?: refreshtokenUpdateManyWithoutUserNestedInput
    createdroles?: roleUpdateManyWithoutCreateduserNestedInput
    updatedroles?: roleUpdateManyWithoutUpdateduserNestedInput
    createdrolepermissions?: rolepermissionUpdateManyWithoutCreateduserNestedInput
    updatedrolepermissions?: rolepermissionUpdateManyWithoutUpdateduserNestedInput
    createduser?: userUpdateOneRequiredWithoutCreatedusersNestedInput
    createdusers?: userUpdateManyWithoutCreateduserNestedInput
    updateduser?: userUpdateOneWithoutUpdatedusersNestedInput
    updatedusers?: userUpdateManyWithoutUpdateduserNestedInput
    createduserpermissions?: userpermissionUpdateManyWithoutCreateduserNestedInput
    updateduserpermissions?: userpermissionUpdateManyWithoutUpdateduserNestedInput
    userpermissions?: userpermissionUpdateManyWithoutUserNestedInput
    createduserroles?: userroleUpdateManyWithoutCreateduserNestedInput
    updateduserroles?: userroleUpdateManyWithoutUpdateduserNestedInput
    userroles?: userroleUpdateManyWithoutUserNestedInput
    language?: languagesUpdateManyWithoutUserNestedInput
    chats?: chatUpdateManyWithoutUserNestedInput
    chatRooms?: chatRoomUpdateManyWithoutUserNestedInput
    subscriptions?: subscriptionUpdateManyWithoutUserNestedInput
  }

  export type userUncheckedUpdateWithoutLearningProgressInput = {
    id?: StringFieldUpdateOperationsInput | string
    firstname?: StringFieldUpdateOperationsInput | string
    lastname?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    appLanguage?: NullableStringFieldUpdateOperationsInput | string | null
    learningLanguage?: NullableStringFieldUpdateOperationsInput | string | null
    learningLevel?: NullableStringFieldUpdateOperationsInput | string | null
    theme?: NullableStringFieldUpdateOperationsInput | string | null
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    createdby?: StringFieldUpdateOperationsInput | string
    createdat?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedby?: NullableStringFieldUpdateOperationsInput | string | null
    updatedat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: IntFieldUpdateOperationsInput | number
    lastentranceat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastexitat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastloginat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    stripeCustomerId?: NullableStringFieldUpdateOperationsInput | string | null
    notificationuser?: notificationUncheckedUpdateManyWithoutToNestedInput
    createdapiclients?: apiclientUncheckedUpdateManyWithoutCreateduserNestedInput
    updatedapiclients?: apiclientUncheckedUpdateManyWithoutUpdateduserNestedInput
    createdpermissions?: permissionUncheckedUpdateManyWithoutCreateduserNestedInput
    updatedpermissions?: permissionUncheckedUpdateManyWithoutUpdateduserNestedInput
    refreshtokens?: refreshtokenUncheckedUpdateManyWithoutUserNestedInput
    createdroles?: roleUncheckedUpdateManyWithoutCreateduserNestedInput
    updatedroles?: roleUncheckedUpdateManyWithoutUpdateduserNestedInput
    createdrolepermissions?: rolepermissionUncheckedUpdateManyWithoutCreateduserNestedInput
    updatedrolepermissions?: rolepermissionUncheckedUpdateManyWithoutUpdateduserNestedInput
    createdusers?: userUncheckedUpdateManyWithoutCreateduserNestedInput
    updatedusers?: userUncheckedUpdateManyWithoutUpdateduserNestedInput
    createduserpermissions?: userpermissionUncheckedUpdateManyWithoutCreateduserNestedInput
    updateduserpermissions?: userpermissionUncheckedUpdateManyWithoutUpdateduserNestedInput
    userpermissions?: userpermissionUncheckedUpdateManyWithoutUserNestedInput
    createduserroles?: userroleUncheckedUpdateManyWithoutCreateduserNestedInput
    updateduserroles?: userroleUncheckedUpdateManyWithoutUpdateduserNestedInput
    userroles?: userroleUncheckedUpdateManyWithoutUserNestedInput
    language?: languagesUncheckedUpdateManyWithoutUserNestedInput
    chats?: chatUncheckedUpdateManyWithoutUserNestedInput
    chatRooms?: chatRoomUncheckedUpdateManyWithoutUserNestedInput
    subscriptions?: subscriptionUncheckedUpdateManyWithoutUserNestedInput
  }

  export type languagesUpsertWithoutLearningProgressInput = {
    update: XOR<languagesUpdateWithoutLearningProgressInput, languagesUncheckedUpdateWithoutLearningProgressInput>
    create: XOR<languagesCreateWithoutLearningProgressInput, languagesUncheckedCreateWithoutLearningProgressInput>
    where?: languagesWhereInput
  }

  export type languagesUpdateToOneWithWhereWithoutLearningProgressInput = {
    where?: languagesWhereInput
    data: XOR<languagesUpdateWithoutLearningProgressInput, languagesUncheckedUpdateWithoutLearningProgressInput>
  }

  export type languagesUpdateWithoutLearningProgressInput = {
    id?: StringFieldUpdateOperationsInput | string
    flag?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    code?: StringFieldUpdateOperationsInput | string
    user?: userUpdateManyWithoutLanguageNestedInput
  }

  export type languagesUncheckedUpdateWithoutLearningProgressInput = {
    id?: StringFieldUpdateOperationsInput | string
    flag?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    code?: StringFieldUpdateOperationsInput | string
    user?: userUncheckedUpdateManyWithoutLanguageNestedInput
  }

  export type learningProgressCreateWithoutLanguageInput = {
    id?: string
    progress?: number
    createdat?: Date | string
    updatedat?: Date | string | null
    user: userCreateNestedOneWithoutLearningProgressInput
  }

  export type learningProgressUncheckedCreateWithoutLanguageInput = {
    id?: string
    userid: string
    progress?: number
    createdat?: Date | string
    updatedat?: Date | string | null
  }

  export type learningProgressCreateOrConnectWithoutLanguageInput = {
    where: learningProgressWhereUniqueInput
    create: XOR<learningProgressCreateWithoutLanguageInput, learningProgressUncheckedCreateWithoutLanguageInput>
  }

  export type learningProgressCreateManyLanguageInputEnvelope = {
    data: learningProgressCreateManyLanguageInput | learningProgressCreateManyLanguageInput[]
    skipDuplicates?: boolean
  }

  export type userCreateWithoutLanguageInput = {
    id?: string
    firstname: string
    lastname: string
    phone?: string | null
    email: string
    password: string
    appLanguage?: string | null
    learningLanguage?: string | null
    learningLevel?: string | null
    theme?: string | null
    avatar?: string | null
    createdat?: Date | string
    updatedat?: Date | string | null
    status?: number
    lastentranceat?: Date | string | null
    lastexitat?: Date | string | null
    lastloginat?: Date | string | null
    stripeCustomerId?: string | null
    notificationuser?: notificationCreateNestedManyWithoutToInput
    createdapiclients?: apiclientCreateNestedManyWithoutCreateduserInput
    updatedapiclients?: apiclientCreateNestedManyWithoutUpdateduserInput
    createdpermissions?: permissionCreateNestedManyWithoutCreateduserInput
    updatedpermissions?: permissionCreateNestedManyWithoutUpdateduserInput
    refreshtokens?: refreshtokenCreateNestedManyWithoutUserInput
    createdroles?: roleCreateNestedManyWithoutCreateduserInput
    updatedroles?: roleCreateNestedManyWithoutUpdateduserInput
    createdrolepermissions?: rolepermissionCreateNestedManyWithoutCreateduserInput
    updatedrolepermissions?: rolepermissionCreateNestedManyWithoutUpdateduserInput
    createduser: userCreateNestedOneWithoutCreatedusersInput
    createdusers?: userCreateNestedManyWithoutCreateduserInput
    updateduser?: userCreateNestedOneWithoutUpdatedusersInput
    updatedusers?: userCreateNestedManyWithoutUpdateduserInput
    createduserpermissions?: userpermissionCreateNestedManyWithoutCreateduserInput
    updateduserpermissions?: userpermissionCreateNestedManyWithoutUpdateduserInput
    userpermissions?: userpermissionCreateNestedManyWithoutUserInput
    createduserroles?: userroleCreateNestedManyWithoutCreateduserInput
    updateduserroles?: userroleCreateNestedManyWithoutUpdateduserInput
    userroles?: userroleCreateNestedManyWithoutUserInput
    learningProgress?: learningProgressCreateNestedManyWithoutUserInput
    chats?: chatCreateNestedManyWithoutUserInput
    chatRooms?: chatRoomCreateNestedManyWithoutUserInput
    subscriptions?: subscriptionCreateNestedManyWithoutUserInput
  }

  export type userUncheckedCreateWithoutLanguageInput = {
    id?: string
    firstname: string
    lastname: string
    phone?: string | null
    email: string
    password: string
    appLanguage?: string | null
    learningLanguage?: string | null
    learningLevel?: string | null
    theme?: string | null
    avatar?: string | null
    createdby: string
    createdat?: Date | string
    updatedby?: string | null
    updatedat?: Date | string | null
    status?: number
    lastentranceat?: Date | string | null
    lastexitat?: Date | string | null
    lastloginat?: Date | string | null
    stripeCustomerId?: string | null
    notificationuser?: notificationUncheckedCreateNestedManyWithoutToInput
    createdapiclients?: apiclientUncheckedCreateNestedManyWithoutCreateduserInput
    updatedapiclients?: apiclientUncheckedCreateNestedManyWithoutUpdateduserInput
    createdpermissions?: permissionUncheckedCreateNestedManyWithoutCreateduserInput
    updatedpermissions?: permissionUncheckedCreateNestedManyWithoutUpdateduserInput
    refreshtokens?: refreshtokenUncheckedCreateNestedManyWithoutUserInput
    createdroles?: roleUncheckedCreateNestedManyWithoutCreateduserInput
    updatedroles?: roleUncheckedCreateNestedManyWithoutUpdateduserInput
    createdrolepermissions?: rolepermissionUncheckedCreateNestedManyWithoutCreateduserInput
    updatedrolepermissions?: rolepermissionUncheckedCreateNestedManyWithoutUpdateduserInput
    createdusers?: userUncheckedCreateNestedManyWithoutCreateduserInput
    updatedusers?: userUncheckedCreateNestedManyWithoutUpdateduserInput
    createduserpermissions?: userpermissionUncheckedCreateNestedManyWithoutCreateduserInput
    updateduserpermissions?: userpermissionUncheckedCreateNestedManyWithoutUpdateduserInput
    userpermissions?: userpermissionUncheckedCreateNestedManyWithoutUserInput
    createduserroles?: userroleUncheckedCreateNestedManyWithoutCreateduserInput
    updateduserroles?: userroleUncheckedCreateNestedManyWithoutUpdateduserInput
    userroles?: userroleUncheckedCreateNestedManyWithoutUserInput
    learningProgress?: learningProgressUncheckedCreateNestedManyWithoutUserInput
    chats?: chatUncheckedCreateNestedManyWithoutUserInput
    chatRooms?: chatRoomUncheckedCreateNestedManyWithoutUserInput
    subscriptions?: subscriptionUncheckedCreateNestedManyWithoutUserInput
  }

  export type userCreateOrConnectWithoutLanguageInput = {
    where: userWhereUniqueInput
    create: XOR<userCreateWithoutLanguageInput, userUncheckedCreateWithoutLanguageInput>
  }

  export type learningProgressUpsertWithWhereUniqueWithoutLanguageInput = {
    where: learningProgressWhereUniqueInput
    update: XOR<learningProgressUpdateWithoutLanguageInput, learningProgressUncheckedUpdateWithoutLanguageInput>
    create: XOR<learningProgressCreateWithoutLanguageInput, learningProgressUncheckedCreateWithoutLanguageInput>
  }

  export type learningProgressUpdateWithWhereUniqueWithoutLanguageInput = {
    where: learningProgressWhereUniqueInput
    data: XOR<learningProgressUpdateWithoutLanguageInput, learningProgressUncheckedUpdateWithoutLanguageInput>
  }

  export type learningProgressUpdateManyWithWhereWithoutLanguageInput = {
    where: learningProgressScalarWhereInput
    data: XOR<learningProgressUpdateManyMutationInput, learningProgressUncheckedUpdateManyWithoutLanguageInput>
  }

  export type learningProgressScalarWhereInput = {
    AND?: learningProgressScalarWhereInput | learningProgressScalarWhereInput[]
    OR?: learningProgressScalarWhereInput[]
    NOT?: learningProgressScalarWhereInput | learningProgressScalarWhereInput[]
    id?: StringFilter<"learningProgress"> | string
    userid?: StringFilter<"learningProgress"> | string
    languageID?: StringFilter<"learningProgress"> | string
    progress?: IntFilter<"learningProgress"> | number
    createdat?: DateTimeFilter<"learningProgress"> | Date | string
    updatedat?: DateTimeNullableFilter<"learningProgress"> | Date | string | null
  }

  export type userUpsertWithWhereUniqueWithoutLanguageInput = {
    where: userWhereUniqueInput
    update: XOR<userUpdateWithoutLanguageInput, userUncheckedUpdateWithoutLanguageInput>
    create: XOR<userCreateWithoutLanguageInput, userUncheckedCreateWithoutLanguageInput>
  }

  export type userUpdateWithWhereUniqueWithoutLanguageInput = {
    where: userWhereUniqueInput
    data: XOR<userUpdateWithoutLanguageInput, userUncheckedUpdateWithoutLanguageInput>
  }

  export type userUpdateManyWithWhereWithoutLanguageInput = {
    where: userScalarWhereInput
    data: XOR<userUpdateManyMutationInput, userUncheckedUpdateManyWithoutLanguageInput>
  }

  export type userScalarWhereInput = {
    AND?: userScalarWhereInput | userScalarWhereInput[]
    OR?: userScalarWhereInput[]
    NOT?: userScalarWhereInput | userScalarWhereInput[]
    id?: StringFilter<"user"> | string
    firstname?: StringFilter<"user"> | string
    lastname?: StringFilter<"user"> | string
    phone?: StringNullableFilter<"user"> | string | null
    email?: StringFilter<"user"> | string
    password?: StringFilter<"user"> | string
    appLanguage?: StringNullableFilter<"user"> | string | null
    learningLanguage?: StringNullableFilter<"user"> | string | null
    learningLevel?: StringNullableFilter<"user"> | string | null
    theme?: StringNullableFilter<"user"> | string | null
    avatar?: StringNullableFilter<"user"> | string | null
    createdby?: StringFilter<"user"> | string
    createdat?: DateTimeFilter<"user"> | Date | string
    updatedby?: StringNullableFilter<"user"> | string | null
    updatedat?: DateTimeNullableFilter<"user"> | Date | string | null
    status?: IntFilter<"user"> | number
    lastentranceat?: DateTimeNullableFilter<"user"> | Date | string | null
    lastexitat?: DateTimeNullableFilter<"user"> | Date | string | null
    lastloginat?: DateTimeNullableFilter<"user"> | Date | string | null
    stripeCustomerId?: StringNullableFilter<"user"> | string | null
  }

  export type userCreateWithoutCreatedapiclientsInput = {
    id?: string
    firstname: string
    lastname: string
    phone?: string | null
    email: string
    password: string
    appLanguage?: string | null
    learningLanguage?: string | null
    learningLevel?: string | null
    theme?: string | null
    avatar?: string | null
    createdat?: Date | string
    updatedat?: Date | string | null
    status?: number
    lastentranceat?: Date | string | null
    lastexitat?: Date | string | null
    lastloginat?: Date | string | null
    stripeCustomerId?: string | null
    notificationuser?: notificationCreateNestedManyWithoutToInput
    updatedapiclients?: apiclientCreateNestedManyWithoutUpdateduserInput
    createdpermissions?: permissionCreateNestedManyWithoutCreateduserInput
    updatedpermissions?: permissionCreateNestedManyWithoutUpdateduserInput
    refreshtokens?: refreshtokenCreateNestedManyWithoutUserInput
    createdroles?: roleCreateNestedManyWithoutCreateduserInput
    updatedroles?: roleCreateNestedManyWithoutUpdateduserInput
    createdrolepermissions?: rolepermissionCreateNestedManyWithoutCreateduserInput
    updatedrolepermissions?: rolepermissionCreateNestedManyWithoutUpdateduserInput
    createduser: userCreateNestedOneWithoutCreatedusersInput
    createdusers?: userCreateNestedManyWithoutCreateduserInput
    updateduser?: userCreateNestedOneWithoutUpdatedusersInput
    updatedusers?: userCreateNestedManyWithoutUpdateduserInput
    createduserpermissions?: userpermissionCreateNestedManyWithoutCreateduserInput
    updateduserpermissions?: userpermissionCreateNestedManyWithoutUpdateduserInput
    userpermissions?: userpermissionCreateNestedManyWithoutUserInput
    createduserroles?: userroleCreateNestedManyWithoutCreateduserInput
    updateduserroles?: userroleCreateNestedManyWithoutUpdateduserInput
    userroles?: userroleCreateNestedManyWithoutUserInput
    language?: languagesCreateNestedManyWithoutUserInput
    learningProgress?: learningProgressCreateNestedManyWithoutUserInput
    chats?: chatCreateNestedManyWithoutUserInput
    chatRooms?: chatRoomCreateNestedManyWithoutUserInput
    subscriptions?: subscriptionCreateNestedManyWithoutUserInput
  }

  export type userUncheckedCreateWithoutCreatedapiclientsInput = {
    id?: string
    firstname: string
    lastname: string
    phone?: string | null
    email: string
    password: string
    appLanguage?: string | null
    learningLanguage?: string | null
    learningLevel?: string | null
    theme?: string | null
    avatar?: string | null
    createdby: string
    createdat?: Date | string
    updatedby?: string | null
    updatedat?: Date | string | null
    status?: number
    lastentranceat?: Date | string | null
    lastexitat?: Date | string | null
    lastloginat?: Date | string | null
    stripeCustomerId?: string | null
    notificationuser?: notificationUncheckedCreateNestedManyWithoutToInput
    updatedapiclients?: apiclientUncheckedCreateNestedManyWithoutUpdateduserInput
    createdpermissions?: permissionUncheckedCreateNestedManyWithoutCreateduserInput
    updatedpermissions?: permissionUncheckedCreateNestedManyWithoutUpdateduserInput
    refreshtokens?: refreshtokenUncheckedCreateNestedManyWithoutUserInput
    createdroles?: roleUncheckedCreateNestedManyWithoutCreateduserInput
    updatedroles?: roleUncheckedCreateNestedManyWithoutUpdateduserInput
    createdrolepermissions?: rolepermissionUncheckedCreateNestedManyWithoutCreateduserInput
    updatedrolepermissions?: rolepermissionUncheckedCreateNestedManyWithoutUpdateduserInput
    createdusers?: userUncheckedCreateNestedManyWithoutCreateduserInput
    updatedusers?: userUncheckedCreateNestedManyWithoutUpdateduserInput
    createduserpermissions?: userpermissionUncheckedCreateNestedManyWithoutCreateduserInput
    updateduserpermissions?: userpermissionUncheckedCreateNestedManyWithoutUpdateduserInput
    userpermissions?: userpermissionUncheckedCreateNestedManyWithoutUserInput
    createduserroles?: userroleUncheckedCreateNestedManyWithoutCreateduserInput
    updateduserroles?: userroleUncheckedCreateNestedManyWithoutUpdateduserInput
    userroles?: userroleUncheckedCreateNestedManyWithoutUserInput
    language?: languagesUncheckedCreateNestedManyWithoutUserInput
    learningProgress?: learningProgressUncheckedCreateNestedManyWithoutUserInput
    chats?: chatUncheckedCreateNestedManyWithoutUserInput
    chatRooms?: chatRoomUncheckedCreateNestedManyWithoutUserInput
    subscriptions?: subscriptionUncheckedCreateNestedManyWithoutUserInput
  }

  export type userCreateOrConnectWithoutCreatedapiclientsInput = {
    where: userWhereUniqueInput
    create: XOR<userCreateWithoutCreatedapiclientsInput, userUncheckedCreateWithoutCreatedapiclientsInput>
  }

  export type userCreateWithoutUpdatedapiclientsInput = {
    id?: string
    firstname: string
    lastname: string
    phone?: string | null
    email: string
    password: string
    appLanguage?: string | null
    learningLanguage?: string | null
    learningLevel?: string | null
    theme?: string | null
    avatar?: string | null
    createdat?: Date | string
    updatedat?: Date | string | null
    status?: number
    lastentranceat?: Date | string | null
    lastexitat?: Date | string | null
    lastloginat?: Date | string | null
    stripeCustomerId?: string | null
    notificationuser?: notificationCreateNestedManyWithoutToInput
    createdapiclients?: apiclientCreateNestedManyWithoutCreateduserInput
    createdpermissions?: permissionCreateNestedManyWithoutCreateduserInput
    updatedpermissions?: permissionCreateNestedManyWithoutUpdateduserInput
    refreshtokens?: refreshtokenCreateNestedManyWithoutUserInput
    createdroles?: roleCreateNestedManyWithoutCreateduserInput
    updatedroles?: roleCreateNestedManyWithoutUpdateduserInput
    createdrolepermissions?: rolepermissionCreateNestedManyWithoutCreateduserInput
    updatedrolepermissions?: rolepermissionCreateNestedManyWithoutUpdateduserInput
    createduser: userCreateNestedOneWithoutCreatedusersInput
    createdusers?: userCreateNestedManyWithoutCreateduserInput
    updateduser?: userCreateNestedOneWithoutUpdatedusersInput
    updatedusers?: userCreateNestedManyWithoutUpdateduserInput
    createduserpermissions?: userpermissionCreateNestedManyWithoutCreateduserInput
    updateduserpermissions?: userpermissionCreateNestedManyWithoutUpdateduserInput
    userpermissions?: userpermissionCreateNestedManyWithoutUserInput
    createduserroles?: userroleCreateNestedManyWithoutCreateduserInput
    updateduserroles?: userroleCreateNestedManyWithoutUpdateduserInput
    userroles?: userroleCreateNestedManyWithoutUserInput
    language?: languagesCreateNestedManyWithoutUserInput
    learningProgress?: learningProgressCreateNestedManyWithoutUserInput
    chats?: chatCreateNestedManyWithoutUserInput
    chatRooms?: chatRoomCreateNestedManyWithoutUserInput
    subscriptions?: subscriptionCreateNestedManyWithoutUserInput
  }

  export type userUncheckedCreateWithoutUpdatedapiclientsInput = {
    id?: string
    firstname: string
    lastname: string
    phone?: string | null
    email: string
    password: string
    appLanguage?: string | null
    learningLanguage?: string | null
    learningLevel?: string | null
    theme?: string | null
    avatar?: string | null
    createdby: string
    createdat?: Date | string
    updatedby?: string | null
    updatedat?: Date | string | null
    status?: number
    lastentranceat?: Date | string | null
    lastexitat?: Date | string | null
    lastloginat?: Date | string | null
    stripeCustomerId?: string | null
    notificationuser?: notificationUncheckedCreateNestedManyWithoutToInput
    createdapiclients?: apiclientUncheckedCreateNestedManyWithoutCreateduserInput
    createdpermissions?: permissionUncheckedCreateNestedManyWithoutCreateduserInput
    updatedpermissions?: permissionUncheckedCreateNestedManyWithoutUpdateduserInput
    refreshtokens?: refreshtokenUncheckedCreateNestedManyWithoutUserInput
    createdroles?: roleUncheckedCreateNestedManyWithoutCreateduserInput
    updatedroles?: roleUncheckedCreateNestedManyWithoutUpdateduserInput
    createdrolepermissions?: rolepermissionUncheckedCreateNestedManyWithoutCreateduserInput
    updatedrolepermissions?: rolepermissionUncheckedCreateNestedManyWithoutUpdateduserInput
    createdusers?: userUncheckedCreateNestedManyWithoutCreateduserInput
    updatedusers?: userUncheckedCreateNestedManyWithoutUpdateduserInput
    createduserpermissions?: userpermissionUncheckedCreateNestedManyWithoutCreateduserInput
    updateduserpermissions?: userpermissionUncheckedCreateNestedManyWithoutUpdateduserInput
    userpermissions?: userpermissionUncheckedCreateNestedManyWithoutUserInput
    createduserroles?: userroleUncheckedCreateNestedManyWithoutCreateduserInput
    updateduserroles?: userroleUncheckedCreateNestedManyWithoutUpdateduserInput
    userroles?: userroleUncheckedCreateNestedManyWithoutUserInput
    language?: languagesUncheckedCreateNestedManyWithoutUserInput
    learningProgress?: learningProgressUncheckedCreateNestedManyWithoutUserInput
    chats?: chatUncheckedCreateNestedManyWithoutUserInput
    chatRooms?: chatRoomUncheckedCreateNestedManyWithoutUserInput
    subscriptions?: subscriptionUncheckedCreateNestedManyWithoutUserInput
  }

  export type userCreateOrConnectWithoutUpdatedapiclientsInput = {
    where: userWhereUniqueInput
    create: XOR<userCreateWithoutUpdatedapiclientsInput, userUncheckedCreateWithoutUpdatedapiclientsInput>
  }

  export type userUpsertWithoutCreatedapiclientsInput = {
    update: XOR<userUpdateWithoutCreatedapiclientsInput, userUncheckedUpdateWithoutCreatedapiclientsInput>
    create: XOR<userCreateWithoutCreatedapiclientsInput, userUncheckedCreateWithoutCreatedapiclientsInput>
    where?: userWhereInput
  }

  export type userUpdateToOneWithWhereWithoutCreatedapiclientsInput = {
    where?: userWhereInput
    data: XOR<userUpdateWithoutCreatedapiclientsInput, userUncheckedUpdateWithoutCreatedapiclientsInput>
  }

  export type userUpdateWithoutCreatedapiclientsInput = {
    id?: StringFieldUpdateOperationsInput | string
    firstname?: StringFieldUpdateOperationsInput | string
    lastname?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    appLanguage?: NullableStringFieldUpdateOperationsInput | string | null
    learningLanguage?: NullableStringFieldUpdateOperationsInput | string | null
    learningLevel?: NullableStringFieldUpdateOperationsInput | string | null
    theme?: NullableStringFieldUpdateOperationsInput | string | null
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    createdat?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: IntFieldUpdateOperationsInput | number
    lastentranceat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastexitat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastloginat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    stripeCustomerId?: NullableStringFieldUpdateOperationsInput | string | null
    notificationuser?: notificationUpdateManyWithoutToNestedInput
    updatedapiclients?: apiclientUpdateManyWithoutUpdateduserNestedInput
    createdpermissions?: permissionUpdateManyWithoutCreateduserNestedInput
    updatedpermissions?: permissionUpdateManyWithoutUpdateduserNestedInput
    refreshtokens?: refreshtokenUpdateManyWithoutUserNestedInput
    createdroles?: roleUpdateManyWithoutCreateduserNestedInput
    updatedroles?: roleUpdateManyWithoutUpdateduserNestedInput
    createdrolepermissions?: rolepermissionUpdateManyWithoutCreateduserNestedInput
    updatedrolepermissions?: rolepermissionUpdateManyWithoutUpdateduserNestedInput
    createduser?: userUpdateOneRequiredWithoutCreatedusersNestedInput
    createdusers?: userUpdateManyWithoutCreateduserNestedInput
    updateduser?: userUpdateOneWithoutUpdatedusersNestedInput
    updatedusers?: userUpdateManyWithoutUpdateduserNestedInput
    createduserpermissions?: userpermissionUpdateManyWithoutCreateduserNestedInput
    updateduserpermissions?: userpermissionUpdateManyWithoutUpdateduserNestedInput
    userpermissions?: userpermissionUpdateManyWithoutUserNestedInput
    createduserroles?: userroleUpdateManyWithoutCreateduserNestedInput
    updateduserroles?: userroleUpdateManyWithoutUpdateduserNestedInput
    userroles?: userroleUpdateManyWithoutUserNestedInput
    language?: languagesUpdateManyWithoutUserNestedInput
    learningProgress?: learningProgressUpdateManyWithoutUserNestedInput
    chats?: chatUpdateManyWithoutUserNestedInput
    chatRooms?: chatRoomUpdateManyWithoutUserNestedInput
    subscriptions?: subscriptionUpdateManyWithoutUserNestedInput
  }

  export type userUncheckedUpdateWithoutCreatedapiclientsInput = {
    id?: StringFieldUpdateOperationsInput | string
    firstname?: StringFieldUpdateOperationsInput | string
    lastname?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    appLanguage?: NullableStringFieldUpdateOperationsInput | string | null
    learningLanguage?: NullableStringFieldUpdateOperationsInput | string | null
    learningLevel?: NullableStringFieldUpdateOperationsInput | string | null
    theme?: NullableStringFieldUpdateOperationsInput | string | null
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    createdby?: StringFieldUpdateOperationsInput | string
    createdat?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedby?: NullableStringFieldUpdateOperationsInput | string | null
    updatedat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: IntFieldUpdateOperationsInput | number
    lastentranceat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastexitat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastloginat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    stripeCustomerId?: NullableStringFieldUpdateOperationsInput | string | null
    notificationuser?: notificationUncheckedUpdateManyWithoutToNestedInput
    updatedapiclients?: apiclientUncheckedUpdateManyWithoutUpdateduserNestedInput
    createdpermissions?: permissionUncheckedUpdateManyWithoutCreateduserNestedInput
    updatedpermissions?: permissionUncheckedUpdateManyWithoutUpdateduserNestedInput
    refreshtokens?: refreshtokenUncheckedUpdateManyWithoutUserNestedInput
    createdroles?: roleUncheckedUpdateManyWithoutCreateduserNestedInput
    updatedroles?: roleUncheckedUpdateManyWithoutUpdateduserNestedInput
    createdrolepermissions?: rolepermissionUncheckedUpdateManyWithoutCreateduserNestedInput
    updatedrolepermissions?: rolepermissionUncheckedUpdateManyWithoutUpdateduserNestedInput
    createdusers?: userUncheckedUpdateManyWithoutCreateduserNestedInput
    updatedusers?: userUncheckedUpdateManyWithoutUpdateduserNestedInput
    createduserpermissions?: userpermissionUncheckedUpdateManyWithoutCreateduserNestedInput
    updateduserpermissions?: userpermissionUncheckedUpdateManyWithoutUpdateduserNestedInput
    userpermissions?: userpermissionUncheckedUpdateManyWithoutUserNestedInput
    createduserroles?: userroleUncheckedUpdateManyWithoutCreateduserNestedInput
    updateduserroles?: userroleUncheckedUpdateManyWithoutUpdateduserNestedInput
    userroles?: userroleUncheckedUpdateManyWithoutUserNestedInput
    language?: languagesUncheckedUpdateManyWithoutUserNestedInput
    learningProgress?: learningProgressUncheckedUpdateManyWithoutUserNestedInput
    chats?: chatUncheckedUpdateManyWithoutUserNestedInput
    chatRooms?: chatRoomUncheckedUpdateManyWithoutUserNestedInput
    subscriptions?: subscriptionUncheckedUpdateManyWithoutUserNestedInput
  }

  export type userUpsertWithoutUpdatedapiclientsInput = {
    update: XOR<userUpdateWithoutUpdatedapiclientsInput, userUncheckedUpdateWithoutUpdatedapiclientsInput>
    create: XOR<userCreateWithoutUpdatedapiclientsInput, userUncheckedCreateWithoutUpdatedapiclientsInput>
    where?: userWhereInput
  }

  export type userUpdateToOneWithWhereWithoutUpdatedapiclientsInput = {
    where?: userWhereInput
    data: XOR<userUpdateWithoutUpdatedapiclientsInput, userUncheckedUpdateWithoutUpdatedapiclientsInput>
  }

  export type userUpdateWithoutUpdatedapiclientsInput = {
    id?: StringFieldUpdateOperationsInput | string
    firstname?: StringFieldUpdateOperationsInput | string
    lastname?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    appLanguage?: NullableStringFieldUpdateOperationsInput | string | null
    learningLanguage?: NullableStringFieldUpdateOperationsInput | string | null
    learningLevel?: NullableStringFieldUpdateOperationsInput | string | null
    theme?: NullableStringFieldUpdateOperationsInput | string | null
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    createdat?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: IntFieldUpdateOperationsInput | number
    lastentranceat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastexitat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastloginat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    stripeCustomerId?: NullableStringFieldUpdateOperationsInput | string | null
    notificationuser?: notificationUpdateManyWithoutToNestedInput
    createdapiclients?: apiclientUpdateManyWithoutCreateduserNestedInput
    createdpermissions?: permissionUpdateManyWithoutCreateduserNestedInput
    updatedpermissions?: permissionUpdateManyWithoutUpdateduserNestedInput
    refreshtokens?: refreshtokenUpdateManyWithoutUserNestedInput
    createdroles?: roleUpdateManyWithoutCreateduserNestedInput
    updatedroles?: roleUpdateManyWithoutUpdateduserNestedInput
    createdrolepermissions?: rolepermissionUpdateManyWithoutCreateduserNestedInput
    updatedrolepermissions?: rolepermissionUpdateManyWithoutUpdateduserNestedInput
    createduser?: userUpdateOneRequiredWithoutCreatedusersNestedInput
    createdusers?: userUpdateManyWithoutCreateduserNestedInput
    updateduser?: userUpdateOneWithoutUpdatedusersNestedInput
    updatedusers?: userUpdateManyWithoutUpdateduserNestedInput
    createduserpermissions?: userpermissionUpdateManyWithoutCreateduserNestedInput
    updateduserpermissions?: userpermissionUpdateManyWithoutUpdateduserNestedInput
    userpermissions?: userpermissionUpdateManyWithoutUserNestedInput
    createduserroles?: userroleUpdateManyWithoutCreateduserNestedInput
    updateduserroles?: userroleUpdateManyWithoutUpdateduserNestedInput
    userroles?: userroleUpdateManyWithoutUserNestedInput
    language?: languagesUpdateManyWithoutUserNestedInput
    learningProgress?: learningProgressUpdateManyWithoutUserNestedInput
    chats?: chatUpdateManyWithoutUserNestedInput
    chatRooms?: chatRoomUpdateManyWithoutUserNestedInput
    subscriptions?: subscriptionUpdateManyWithoutUserNestedInput
  }

  export type userUncheckedUpdateWithoutUpdatedapiclientsInput = {
    id?: StringFieldUpdateOperationsInput | string
    firstname?: StringFieldUpdateOperationsInput | string
    lastname?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    appLanguage?: NullableStringFieldUpdateOperationsInput | string | null
    learningLanguage?: NullableStringFieldUpdateOperationsInput | string | null
    learningLevel?: NullableStringFieldUpdateOperationsInput | string | null
    theme?: NullableStringFieldUpdateOperationsInput | string | null
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    createdby?: StringFieldUpdateOperationsInput | string
    createdat?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedby?: NullableStringFieldUpdateOperationsInput | string | null
    updatedat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: IntFieldUpdateOperationsInput | number
    lastentranceat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastexitat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastloginat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    stripeCustomerId?: NullableStringFieldUpdateOperationsInput | string | null
    notificationuser?: notificationUncheckedUpdateManyWithoutToNestedInput
    createdapiclients?: apiclientUncheckedUpdateManyWithoutCreateduserNestedInput
    createdpermissions?: permissionUncheckedUpdateManyWithoutCreateduserNestedInput
    updatedpermissions?: permissionUncheckedUpdateManyWithoutUpdateduserNestedInput
    refreshtokens?: refreshtokenUncheckedUpdateManyWithoutUserNestedInput
    createdroles?: roleUncheckedUpdateManyWithoutCreateduserNestedInput
    updatedroles?: roleUncheckedUpdateManyWithoutUpdateduserNestedInput
    createdrolepermissions?: rolepermissionUncheckedUpdateManyWithoutCreateduserNestedInput
    updatedrolepermissions?: rolepermissionUncheckedUpdateManyWithoutUpdateduserNestedInput
    createdusers?: userUncheckedUpdateManyWithoutCreateduserNestedInput
    updatedusers?: userUncheckedUpdateManyWithoutUpdateduserNestedInput
    createduserpermissions?: userpermissionUncheckedUpdateManyWithoutCreateduserNestedInput
    updateduserpermissions?: userpermissionUncheckedUpdateManyWithoutUpdateduserNestedInput
    userpermissions?: userpermissionUncheckedUpdateManyWithoutUserNestedInput
    createduserroles?: userroleUncheckedUpdateManyWithoutCreateduserNestedInput
    updateduserroles?: userroleUncheckedUpdateManyWithoutUpdateduserNestedInput
    userroles?: userroleUncheckedUpdateManyWithoutUserNestedInput
    language?: languagesUncheckedUpdateManyWithoutUserNestedInput
    learningProgress?: learningProgressUncheckedUpdateManyWithoutUserNestedInput
    chats?: chatUncheckedUpdateManyWithoutUserNestedInput
    chatRooms?: chatRoomUncheckedUpdateManyWithoutUserNestedInput
    subscriptions?: subscriptionUncheckedUpdateManyWithoutUserNestedInput
  }

  export type userCreateWithoutRefreshtokensInput = {
    id?: string
    firstname: string
    lastname: string
    phone?: string | null
    email: string
    password: string
    appLanguage?: string | null
    learningLanguage?: string | null
    learningLevel?: string | null
    theme?: string | null
    avatar?: string | null
    createdat?: Date | string
    updatedat?: Date | string | null
    status?: number
    lastentranceat?: Date | string | null
    lastexitat?: Date | string | null
    lastloginat?: Date | string | null
    stripeCustomerId?: string | null
    notificationuser?: notificationCreateNestedManyWithoutToInput
    createdapiclients?: apiclientCreateNestedManyWithoutCreateduserInput
    updatedapiclients?: apiclientCreateNestedManyWithoutUpdateduserInput
    createdpermissions?: permissionCreateNestedManyWithoutCreateduserInput
    updatedpermissions?: permissionCreateNestedManyWithoutUpdateduserInput
    createdroles?: roleCreateNestedManyWithoutCreateduserInput
    updatedroles?: roleCreateNestedManyWithoutUpdateduserInput
    createdrolepermissions?: rolepermissionCreateNestedManyWithoutCreateduserInput
    updatedrolepermissions?: rolepermissionCreateNestedManyWithoutUpdateduserInput
    createduser: userCreateNestedOneWithoutCreatedusersInput
    createdusers?: userCreateNestedManyWithoutCreateduserInput
    updateduser?: userCreateNestedOneWithoutUpdatedusersInput
    updatedusers?: userCreateNestedManyWithoutUpdateduserInput
    createduserpermissions?: userpermissionCreateNestedManyWithoutCreateduserInput
    updateduserpermissions?: userpermissionCreateNestedManyWithoutUpdateduserInput
    userpermissions?: userpermissionCreateNestedManyWithoutUserInput
    createduserroles?: userroleCreateNestedManyWithoutCreateduserInput
    updateduserroles?: userroleCreateNestedManyWithoutUpdateduserInput
    userroles?: userroleCreateNestedManyWithoutUserInput
    language?: languagesCreateNestedManyWithoutUserInput
    learningProgress?: learningProgressCreateNestedManyWithoutUserInput
    chats?: chatCreateNestedManyWithoutUserInput
    chatRooms?: chatRoomCreateNestedManyWithoutUserInput
    subscriptions?: subscriptionCreateNestedManyWithoutUserInput
  }

  export type userUncheckedCreateWithoutRefreshtokensInput = {
    id?: string
    firstname: string
    lastname: string
    phone?: string | null
    email: string
    password: string
    appLanguage?: string | null
    learningLanguage?: string | null
    learningLevel?: string | null
    theme?: string | null
    avatar?: string | null
    createdby: string
    createdat?: Date | string
    updatedby?: string | null
    updatedat?: Date | string | null
    status?: number
    lastentranceat?: Date | string | null
    lastexitat?: Date | string | null
    lastloginat?: Date | string | null
    stripeCustomerId?: string | null
    notificationuser?: notificationUncheckedCreateNestedManyWithoutToInput
    createdapiclients?: apiclientUncheckedCreateNestedManyWithoutCreateduserInput
    updatedapiclients?: apiclientUncheckedCreateNestedManyWithoutUpdateduserInput
    createdpermissions?: permissionUncheckedCreateNestedManyWithoutCreateduserInput
    updatedpermissions?: permissionUncheckedCreateNestedManyWithoutUpdateduserInput
    createdroles?: roleUncheckedCreateNestedManyWithoutCreateduserInput
    updatedroles?: roleUncheckedCreateNestedManyWithoutUpdateduserInput
    createdrolepermissions?: rolepermissionUncheckedCreateNestedManyWithoutCreateduserInput
    updatedrolepermissions?: rolepermissionUncheckedCreateNestedManyWithoutUpdateduserInput
    createdusers?: userUncheckedCreateNestedManyWithoutCreateduserInput
    updatedusers?: userUncheckedCreateNestedManyWithoutUpdateduserInput
    createduserpermissions?: userpermissionUncheckedCreateNestedManyWithoutCreateduserInput
    updateduserpermissions?: userpermissionUncheckedCreateNestedManyWithoutUpdateduserInput
    userpermissions?: userpermissionUncheckedCreateNestedManyWithoutUserInput
    createduserroles?: userroleUncheckedCreateNestedManyWithoutCreateduserInput
    updateduserroles?: userroleUncheckedCreateNestedManyWithoutUpdateduserInput
    userroles?: userroleUncheckedCreateNestedManyWithoutUserInput
    language?: languagesUncheckedCreateNestedManyWithoutUserInput
    learningProgress?: learningProgressUncheckedCreateNestedManyWithoutUserInput
    chats?: chatUncheckedCreateNestedManyWithoutUserInput
    chatRooms?: chatRoomUncheckedCreateNestedManyWithoutUserInput
    subscriptions?: subscriptionUncheckedCreateNestedManyWithoutUserInput
  }

  export type userCreateOrConnectWithoutRefreshtokensInput = {
    where: userWhereUniqueInput
    create: XOR<userCreateWithoutRefreshtokensInput, userUncheckedCreateWithoutRefreshtokensInput>
  }

  export type userUpsertWithoutRefreshtokensInput = {
    update: XOR<userUpdateWithoutRefreshtokensInput, userUncheckedUpdateWithoutRefreshtokensInput>
    create: XOR<userCreateWithoutRefreshtokensInput, userUncheckedCreateWithoutRefreshtokensInput>
    where?: userWhereInput
  }

  export type userUpdateToOneWithWhereWithoutRefreshtokensInput = {
    where?: userWhereInput
    data: XOR<userUpdateWithoutRefreshtokensInput, userUncheckedUpdateWithoutRefreshtokensInput>
  }

  export type userUpdateWithoutRefreshtokensInput = {
    id?: StringFieldUpdateOperationsInput | string
    firstname?: StringFieldUpdateOperationsInput | string
    lastname?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    appLanguage?: NullableStringFieldUpdateOperationsInput | string | null
    learningLanguage?: NullableStringFieldUpdateOperationsInput | string | null
    learningLevel?: NullableStringFieldUpdateOperationsInput | string | null
    theme?: NullableStringFieldUpdateOperationsInput | string | null
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    createdat?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: IntFieldUpdateOperationsInput | number
    lastentranceat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastexitat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastloginat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    stripeCustomerId?: NullableStringFieldUpdateOperationsInput | string | null
    notificationuser?: notificationUpdateManyWithoutToNestedInput
    createdapiclients?: apiclientUpdateManyWithoutCreateduserNestedInput
    updatedapiclients?: apiclientUpdateManyWithoutUpdateduserNestedInput
    createdpermissions?: permissionUpdateManyWithoutCreateduserNestedInput
    updatedpermissions?: permissionUpdateManyWithoutUpdateduserNestedInput
    createdroles?: roleUpdateManyWithoutCreateduserNestedInput
    updatedroles?: roleUpdateManyWithoutUpdateduserNestedInput
    createdrolepermissions?: rolepermissionUpdateManyWithoutCreateduserNestedInput
    updatedrolepermissions?: rolepermissionUpdateManyWithoutUpdateduserNestedInput
    createduser?: userUpdateOneRequiredWithoutCreatedusersNestedInput
    createdusers?: userUpdateManyWithoutCreateduserNestedInput
    updateduser?: userUpdateOneWithoutUpdatedusersNestedInput
    updatedusers?: userUpdateManyWithoutUpdateduserNestedInput
    createduserpermissions?: userpermissionUpdateManyWithoutCreateduserNestedInput
    updateduserpermissions?: userpermissionUpdateManyWithoutUpdateduserNestedInput
    userpermissions?: userpermissionUpdateManyWithoutUserNestedInput
    createduserroles?: userroleUpdateManyWithoutCreateduserNestedInput
    updateduserroles?: userroleUpdateManyWithoutUpdateduserNestedInput
    userroles?: userroleUpdateManyWithoutUserNestedInput
    language?: languagesUpdateManyWithoutUserNestedInput
    learningProgress?: learningProgressUpdateManyWithoutUserNestedInput
    chats?: chatUpdateManyWithoutUserNestedInput
    chatRooms?: chatRoomUpdateManyWithoutUserNestedInput
    subscriptions?: subscriptionUpdateManyWithoutUserNestedInput
  }

  export type userUncheckedUpdateWithoutRefreshtokensInput = {
    id?: StringFieldUpdateOperationsInput | string
    firstname?: StringFieldUpdateOperationsInput | string
    lastname?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    appLanguage?: NullableStringFieldUpdateOperationsInput | string | null
    learningLanguage?: NullableStringFieldUpdateOperationsInput | string | null
    learningLevel?: NullableStringFieldUpdateOperationsInput | string | null
    theme?: NullableStringFieldUpdateOperationsInput | string | null
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    createdby?: StringFieldUpdateOperationsInput | string
    createdat?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedby?: NullableStringFieldUpdateOperationsInput | string | null
    updatedat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: IntFieldUpdateOperationsInput | number
    lastentranceat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastexitat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastloginat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    stripeCustomerId?: NullableStringFieldUpdateOperationsInput | string | null
    notificationuser?: notificationUncheckedUpdateManyWithoutToNestedInput
    createdapiclients?: apiclientUncheckedUpdateManyWithoutCreateduserNestedInput
    updatedapiclients?: apiclientUncheckedUpdateManyWithoutUpdateduserNestedInput
    createdpermissions?: permissionUncheckedUpdateManyWithoutCreateduserNestedInput
    updatedpermissions?: permissionUncheckedUpdateManyWithoutUpdateduserNestedInput
    createdroles?: roleUncheckedUpdateManyWithoutCreateduserNestedInput
    updatedroles?: roleUncheckedUpdateManyWithoutUpdateduserNestedInput
    createdrolepermissions?: rolepermissionUncheckedUpdateManyWithoutCreateduserNestedInput
    updatedrolepermissions?: rolepermissionUncheckedUpdateManyWithoutUpdateduserNestedInput
    createdusers?: userUncheckedUpdateManyWithoutCreateduserNestedInput
    updatedusers?: userUncheckedUpdateManyWithoutUpdateduserNestedInput
    createduserpermissions?: userpermissionUncheckedUpdateManyWithoutCreateduserNestedInput
    updateduserpermissions?: userpermissionUncheckedUpdateManyWithoutUpdateduserNestedInput
    userpermissions?: userpermissionUncheckedUpdateManyWithoutUserNestedInput
    createduserroles?: userroleUncheckedUpdateManyWithoutCreateduserNestedInput
    updateduserroles?: userroleUncheckedUpdateManyWithoutUpdateduserNestedInput
    userroles?: userroleUncheckedUpdateManyWithoutUserNestedInput
    language?: languagesUncheckedUpdateManyWithoutUserNestedInput
    learningProgress?: learningProgressUncheckedUpdateManyWithoutUserNestedInput
    chats?: chatUncheckedUpdateManyWithoutUserNestedInput
    chatRooms?: chatRoomUncheckedUpdateManyWithoutUserNestedInput
    subscriptions?: subscriptionUncheckedUpdateManyWithoutUserNestedInput
  }

  export type userCreateWithoutCreatedrolesInput = {
    id?: string
    firstname: string
    lastname: string
    phone?: string | null
    email: string
    password: string
    appLanguage?: string | null
    learningLanguage?: string | null
    learningLevel?: string | null
    theme?: string | null
    avatar?: string | null
    createdat?: Date | string
    updatedat?: Date | string | null
    status?: number
    lastentranceat?: Date | string | null
    lastexitat?: Date | string | null
    lastloginat?: Date | string | null
    stripeCustomerId?: string | null
    notificationuser?: notificationCreateNestedManyWithoutToInput
    createdapiclients?: apiclientCreateNestedManyWithoutCreateduserInput
    updatedapiclients?: apiclientCreateNestedManyWithoutUpdateduserInput
    createdpermissions?: permissionCreateNestedManyWithoutCreateduserInput
    updatedpermissions?: permissionCreateNestedManyWithoutUpdateduserInput
    refreshtokens?: refreshtokenCreateNestedManyWithoutUserInput
    updatedroles?: roleCreateNestedManyWithoutUpdateduserInput
    createdrolepermissions?: rolepermissionCreateNestedManyWithoutCreateduserInput
    updatedrolepermissions?: rolepermissionCreateNestedManyWithoutUpdateduserInput
    createduser: userCreateNestedOneWithoutCreatedusersInput
    createdusers?: userCreateNestedManyWithoutCreateduserInput
    updateduser?: userCreateNestedOneWithoutUpdatedusersInput
    updatedusers?: userCreateNestedManyWithoutUpdateduserInput
    createduserpermissions?: userpermissionCreateNestedManyWithoutCreateduserInput
    updateduserpermissions?: userpermissionCreateNestedManyWithoutUpdateduserInput
    userpermissions?: userpermissionCreateNestedManyWithoutUserInput
    createduserroles?: userroleCreateNestedManyWithoutCreateduserInput
    updateduserroles?: userroleCreateNestedManyWithoutUpdateduserInput
    userroles?: userroleCreateNestedManyWithoutUserInput
    language?: languagesCreateNestedManyWithoutUserInput
    learningProgress?: learningProgressCreateNestedManyWithoutUserInput
    chats?: chatCreateNestedManyWithoutUserInput
    chatRooms?: chatRoomCreateNestedManyWithoutUserInput
    subscriptions?: subscriptionCreateNestedManyWithoutUserInput
  }

  export type userUncheckedCreateWithoutCreatedrolesInput = {
    id?: string
    firstname: string
    lastname: string
    phone?: string | null
    email: string
    password: string
    appLanguage?: string | null
    learningLanguage?: string | null
    learningLevel?: string | null
    theme?: string | null
    avatar?: string | null
    createdby: string
    createdat?: Date | string
    updatedby?: string | null
    updatedat?: Date | string | null
    status?: number
    lastentranceat?: Date | string | null
    lastexitat?: Date | string | null
    lastloginat?: Date | string | null
    stripeCustomerId?: string | null
    notificationuser?: notificationUncheckedCreateNestedManyWithoutToInput
    createdapiclients?: apiclientUncheckedCreateNestedManyWithoutCreateduserInput
    updatedapiclients?: apiclientUncheckedCreateNestedManyWithoutUpdateduserInput
    createdpermissions?: permissionUncheckedCreateNestedManyWithoutCreateduserInput
    updatedpermissions?: permissionUncheckedCreateNestedManyWithoutUpdateduserInput
    refreshtokens?: refreshtokenUncheckedCreateNestedManyWithoutUserInput
    updatedroles?: roleUncheckedCreateNestedManyWithoutUpdateduserInput
    createdrolepermissions?: rolepermissionUncheckedCreateNestedManyWithoutCreateduserInput
    updatedrolepermissions?: rolepermissionUncheckedCreateNestedManyWithoutUpdateduserInput
    createdusers?: userUncheckedCreateNestedManyWithoutCreateduserInput
    updatedusers?: userUncheckedCreateNestedManyWithoutUpdateduserInput
    createduserpermissions?: userpermissionUncheckedCreateNestedManyWithoutCreateduserInput
    updateduserpermissions?: userpermissionUncheckedCreateNestedManyWithoutUpdateduserInput
    userpermissions?: userpermissionUncheckedCreateNestedManyWithoutUserInput
    createduserroles?: userroleUncheckedCreateNestedManyWithoutCreateduserInput
    updateduserroles?: userroleUncheckedCreateNestedManyWithoutUpdateduserInput
    userroles?: userroleUncheckedCreateNestedManyWithoutUserInput
    language?: languagesUncheckedCreateNestedManyWithoutUserInput
    learningProgress?: learningProgressUncheckedCreateNestedManyWithoutUserInput
    chats?: chatUncheckedCreateNestedManyWithoutUserInput
    chatRooms?: chatRoomUncheckedCreateNestedManyWithoutUserInput
    subscriptions?: subscriptionUncheckedCreateNestedManyWithoutUserInput
  }

  export type userCreateOrConnectWithoutCreatedrolesInput = {
    where: userWhereUniqueInput
    create: XOR<userCreateWithoutCreatedrolesInput, userUncheckedCreateWithoutCreatedrolesInput>
  }

  export type userCreateWithoutUpdatedrolesInput = {
    id?: string
    firstname: string
    lastname: string
    phone?: string | null
    email: string
    password: string
    appLanguage?: string | null
    learningLanguage?: string | null
    learningLevel?: string | null
    theme?: string | null
    avatar?: string | null
    createdat?: Date | string
    updatedat?: Date | string | null
    status?: number
    lastentranceat?: Date | string | null
    lastexitat?: Date | string | null
    lastloginat?: Date | string | null
    stripeCustomerId?: string | null
    notificationuser?: notificationCreateNestedManyWithoutToInput
    createdapiclients?: apiclientCreateNestedManyWithoutCreateduserInput
    updatedapiclients?: apiclientCreateNestedManyWithoutUpdateduserInput
    createdpermissions?: permissionCreateNestedManyWithoutCreateduserInput
    updatedpermissions?: permissionCreateNestedManyWithoutUpdateduserInput
    refreshtokens?: refreshtokenCreateNestedManyWithoutUserInput
    createdroles?: roleCreateNestedManyWithoutCreateduserInput
    createdrolepermissions?: rolepermissionCreateNestedManyWithoutCreateduserInput
    updatedrolepermissions?: rolepermissionCreateNestedManyWithoutUpdateduserInput
    createduser: userCreateNestedOneWithoutCreatedusersInput
    createdusers?: userCreateNestedManyWithoutCreateduserInput
    updateduser?: userCreateNestedOneWithoutUpdatedusersInput
    updatedusers?: userCreateNestedManyWithoutUpdateduserInput
    createduserpermissions?: userpermissionCreateNestedManyWithoutCreateduserInput
    updateduserpermissions?: userpermissionCreateNestedManyWithoutUpdateduserInput
    userpermissions?: userpermissionCreateNestedManyWithoutUserInput
    createduserroles?: userroleCreateNestedManyWithoutCreateduserInput
    updateduserroles?: userroleCreateNestedManyWithoutUpdateduserInput
    userroles?: userroleCreateNestedManyWithoutUserInput
    language?: languagesCreateNestedManyWithoutUserInput
    learningProgress?: learningProgressCreateNestedManyWithoutUserInput
    chats?: chatCreateNestedManyWithoutUserInput
    chatRooms?: chatRoomCreateNestedManyWithoutUserInput
    subscriptions?: subscriptionCreateNestedManyWithoutUserInput
  }

  export type userUncheckedCreateWithoutUpdatedrolesInput = {
    id?: string
    firstname: string
    lastname: string
    phone?: string | null
    email: string
    password: string
    appLanguage?: string | null
    learningLanguage?: string | null
    learningLevel?: string | null
    theme?: string | null
    avatar?: string | null
    createdby: string
    createdat?: Date | string
    updatedby?: string | null
    updatedat?: Date | string | null
    status?: number
    lastentranceat?: Date | string | null
    lastexitat?: Date | string | null
    lastloginat?: Date | string | null
    stripeCustomerId?: string | null
    notificationuser?: notificationUncheckedCreateNestedManyWithoutToInput
    createdapiclients?: apiclientUncheckedCreateNestedManyWithoutCreateduserInput
    updatedapiclients?: apiclientUncheckedCreateNestedManyWithoutUpdateduserInput
    createdpermissions?: permissionUncheckedCreateNestedManyWithoutCreateduserInput
    updatedpermissions?: permissionUncheckedCreateNestedManyWithoutUpdateduserInput
    refreshtokens?: refreshtokenUncheckedCreateNestedManyWithoutUserInput
    createdroles?: roleUncheckedCreateNestedManyWithoutCreateduserInput
    createdrolepermissions?: rolepermissionUncheckedCreateNestedManyWithoutCreateduserInput
    updatedrolepermissions?: rolepermissionUncheckedCreateNestedManyWithoutUpdateduserInput
    createdusers?: userUncheckedCreateNestedManyWithoutCreateduserInput
    updatedusers?: userUncheckedCreateNestedManyWithoutUpdateduserInput
    createduserpermissions?: userpermissionUncheckedCreateNestedManyWithoutCreateduserInput
    updateduserpermissions?: userpermissionUncheckedCreateNestedManyWithoutUpdateduserInput
    userpermissions?: userpermissionUncheckedCreateNestedManyWithoutUserInput
    createduserroles?: userroleUncheckedCreateNestedManyWithoutCreateduserInput
    updateduserroles?: userroleUncheckedCreateNestedManyWithoutUpdateduserInput
    userroles?: userroleUncheckedCreateNestedManyWithoutUserInput
    language?: languagesUncheckedCreateNestedManyWithoutUserInput
    learningProgress?: learningProgressUncheckedCreateNestedManyWithoutUserInput
    chats?: chatUncheckedCreateNestedManyWithoutUserInput
    chatRooms?: chatRoomUncheckedCreateNestedManyWithoutUserInput
    subscriptions?: subscriptionUncheckedCreateNestedManyWithoutUserInput
  }

  export type userCreateOrConnectWithoutUpdatedrolesInput = {
    where: userWhereUniqueInput
    create: XOR<userCreateWithoutUpdatedrolesInput, userUncheckedCreateWithoutUpdatedrolesInput>
  }

  export type rolepermissionCreateWithoutRoleInput = {
    id?: string
    createdat?: Date | string
    updatedat?: Date | string | null
    createduser: userCreateNestedOneWithoutCreatedrolepermissionsInput
    permission: permissionCreateNestedOneWithoutRolepermissionsInput
    updateduser?: userCreateNestedOneWithoutUpdatedrolepermissionsInput
  }

  export type rolepermissionUncheckedCreateWithoutRoleInput = {
    id?: string
    permissionid: string
    createdat?: Date | string
    createdby: string
    updatedby?: string | null
    updatedat?: Date | string | null
  }

  export type rolepermissionCreateOrConnectWithoutRoleInput = {
    where: rolepermissionWhereUniqueInput
    create: XOR<rolepermissionCreateWithoutRoleInput, rolepermissionUncheckedCreateWithoutRoleInput>
  }

  export type rolepermissionCreateManyRoleInputEnvelope = {
    data: rolepermissionCreateManyRoleInput | rolepermissionCreateManyRoleInput[]
    skipDuplicates?: boolean
  }

  export type userroleCreateWithoutRoleInput = {
    id?: string
    createdat?: Date | string
    updatedat?: Date | string | null
    createduser: userCreateNestedOneWithoutCreateduserrolesInput
    updateduser?: userCreateNestedOneWithoutUpdateduserrolesInput
    user: userCreateNestedOneWithoutUserrolesInput
  }

  export type userroleUncheckedCreateWithoutRoleInput = {
    id?: string
    userid: string
    createdby: string
    createdat?: Date | string
    updatedby?: string | null
    updatedat?: Date | string | null
  }

  export type userroleCreateOrConnectWithoutRoleInput = {
    where: userroleWhereUniqueInput
    create: XOR<userroleCreateWithoutRoleInput, userroleUncheckedCreateWithoutRoleInput>
  }

  export type userroleCreateManyRoleInputEnvelope = {
    data: userroleCreateManyRoleInput | userroleCreateManyRoleInput[]
    skipDuplicates?: boolean
  }

  export type userUpsertWithoutCreatedrolesInput = {
    update: XOR<userUpdateWithoutCreatedrolesInput, userUncheckedUpdateWithoutCreatedrolesInput>
    create: XOR<userCreateWithoutCreatedrolesInput, userUncheckedCreateWithoutCreatedrolesInput>
    where?: userWhereInput
  }

  export type userUpdateToOneWithWhereWithoutCreatedrolesInput = {
    where?: userWhereInput
    data: XOR<userUpdateWithoutCreatedrolesInput, userUncheckedUpdateWithoutCreatedrolesInput>
  }

  export type userUpdateWithoutCreatedrolesInput = {
    id?: StringFieldUpdateOperationsInput | string
    firstname?: StringFieldUpdateOperationsInput | string
    lastname?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    appLanguage?: NullableStringFieldUpdateOperationsInput | string | null
    learningLanguage?: NullableStringFieldUpdateOperationsInput | string | null
    learningLevel?: NullableStringFieldUpdateOperationsInput | string | null
    theme?: NullableStringFieldUpdateOperationsInput | string | null
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    createdat?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: IntFieldUpdateOperationsInput | number
    lastentranceat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastexitat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastloginat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    stripeCustomerId?: NullableStringFieldUpdateOperationsInput | string | null
    notificationuser?: notificationUpdateManyWithoutToNestedInput
    createdapiclients?: apiclientUpdateManyWithoutCreateduserNestedInput
    updatedapiclients?: apiclientUpdateManyWithoutUpdateduserNestedInput
    createdpermissions?: permissionUpdateManyWithoutCreateduserNestedInput
    updatedpermissions?: permissionUpdateManyWithoutUpdateduserNestedInput
    refreshtokens?: refreshtokenUpdateManyWithoutUserNestedInput
    updatedroles?: roleUpdateManyWithoutUpdateduserNestedInput
    createdrolepermissions?: rolepermissionUpdateManyWithoutCreateduserNestedInput
    updatedrolepermissions?: rolepermissionUpdateManyWithoutUpdateduserNestedInput
    createduser?: userUpdateOneRequiredWithoutCreatedusersNestedInput
    createdusers?: userUpdateManyWithoutCreateduserNestedInput
    updateduser?: userUpdateOneWithoutUpdatedusersNestedInput
    updatedusers?: userUpdateManyWithoutUpdateduserNestedInput
    createduserpermissions?: userpermissionUpdateManyWithoutCreateduserNestedInput
    updateduserpermissions?: userpermissionUpdateManyWithoutUpdateduserNestedInput
    userpermissions?: userpermissionUpdateManyWithoutUserNestedInput
    createduserroles?: userroleUpdateManyWithoutCreateduserNestedInput
    updateduserroles?: userroleUpdateManyWithoutUpdateduserNestedInput
    userroles?: userroleUpdateManyWithoutUserNestedInput
    language?: languagesUpdateManyWithoutUserNestedInput
    learningProgress?: learningProgressUpdateManyWithoutUserNestedInput
    chats?: chatUpdateManyWithoutUserNestedInput
    chatRooms?: chatRoomUpdateManyWithoutUserNestedInput
    subscriptions?: subscriptionUpdateManyWithoutUserNestedInput
  }

  export type userUncheckedUpdateWithoutCreatedrolesInput = {
    id?: StringFieldUpdateOperationsInput | string
    firstname?: StringFieldUpdateOperationsInput | string
    lastname?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    appLanguage?: NullableStringFieldUpdateOperationsInput | string | null
    learningLanguage?: NullableStringFieldUpdateOperationsInput | string | null
    learningLevel?: NullableStringFieldUpdateOperationsInput | string | null
    theme?: NullableStringFieldUpdateOperationsInput | string | null
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    createdby?: StringFieldUpdateOperationsInput | string
    createdat?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedby?: NullableStringFieldUpdateOperationsInput | string | null
    updatedat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: IntFieldUpdateOperationsInput | number
    lastentranceat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastexitat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastloginat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    stripeCustomerId?: NullableStringFieldUpdateOperationsInput | string | null
    notificationuser?: notificationUncheckedUpdateManyWithoutToNestedInput
    createdapiclients?: apiclientUncheckedUpdateManyWithoutCreateduserNestedInput
    updatedapiclients?: apiclientUncheckedUpdateManyWithoutUpdateduserNestedInput
    createdpermissions?: permissionUncheckedUpdateManyWithoutCreateduserNestedInput
    updatedpermissions?: permissionUncheckedUpdateManyWithoutUpdateduserNestedInput
    refreshtokens?: refreshtokenUncheckedUpdateManyWithoutUserNestedInput
    updatedroles?: roleUncheckedUpdateManyWithoutUpdateduserNestedInput
    createdrolepermissions?: rolepermissionUncheckedUpdateManyWithoutCreateduserNestedInput
    updatedrolepermissions?: rolepermissionUncheckedUpdateManyWithoutUpdateduserNestedInput
    createdusers?: userUncheckedUpdateManyWithoutCreateduserNestedInput
    updatedusers?: userUncheckedUpdateManyWithoutUpdateduserNestedInput
    createduserpermissions?: userpermissionUncheckedUpdateManyWithoutCreateduserNestedInput
    updateduserpermissions?: userpermissionUncheckedUpdateManyWithoutUpdateduserNestedInput
    userpermissions?: userpermissionUncheckedUpdateManyWithoutUserNestedInput
    createduserroles?: userroleUncheckedUpdateManyWithoutCreateduserNestedInput
    updateduserroles?: userroleUncheckedUpdateManyWithoutUpdateduserNestedInput
    userroles?: userroleUncheckedUpdateManyWithoutUserNestedInput
    language?: languagesUncheckedUpdateManyWithoutUserNestedInput
    learningProgress?: learningProgressUncheckedUpdateManyWithoutUserNestedInput
    chats?: chatUncheckedUpdateManyWithoutUserNestedInput
    chatRooms?: chatRoomUncheckedUpdateManyWithoutUserNestedInput
    subscriptions?: subscriptionUncheckedUpdateManyWithoutUserNestedInput
  }

  export type userUpsertWithoutUpdatedrolesInput = {
    update: XOR<userUpdateWithoutUpdatedrolesInput, userUncheckedUpdateWithoutUpdatedrolesInput>
    create: XOR<userCreateWithoutUpdatedrolesInput, userUncheckedCreateWithoutUpdatedrolesInput>
    where?: userWhereInput
  }

  export type userUpdateToOneWithWhereWithoutUpdatedrolesInput = {
    where?: userWhereInput
    data: XOR<userUpdateWithoutUpdatedrolesInput, userUncheckedUpdateWithoutUpdatedrolesInput>
  }

  export type userUpdateWithoutUpdatedrolesInput = {
    id?: StringFieldUpdateOperationsInput | string
    firstname?: StringFieldUpdateOperationsInput | string
    lastname?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    appLanguage?: NullableStringFieldUpdateOperationsInput | string | null
    learningLanguage?: NullableStringFieldUpdateOperationsInput | string | null
    learningLevel?: NullableStringFieldUpdateOperationsInput | string | null
    theme?: NullableStringFieldUpdateOperationsInput | string | null
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    createdat?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: IntFieldUpdateOperationsInput | number
    lastentranceat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastexitat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastloginat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    stripeCustomerId?: NullableStringFieldUpdateOperationsInput | string | null
    notificationuser?: notificationUpdateManyWithoutToNestedInput
    createdapiclients?: apiclientUpdateManyWithoutCreateduserNestedInput
    updatedapiclients?: apiclientUpdateManyWithoutUpdateduserNestedInput
    createdpermissions?: permissionUpdateManyWithoutCreateduserNestedInput
    updatedpermissions?: permissionUpdateManyWithoutUpdateduserNestedInput
    refreshtokens?: refreshtokenUpdateManyWithoutUserNestedInput
    createdroles?: roleUpdateManyWithoutCreateduserNestedInput
    createdrolepermissions?: rolepermissionUpdateManyWithoutCreateduserNestedInput
    updatedrolepermissions?: rolepermissionUpdateManyWithoutUpdateduserNestedInput
    createduser?: userUpdateOneRequiredWithoutCreatedusersNestedInput
    createdusers?: userUpdateManyWithoutCreateduserNestedInput
    updateduser?: userUpdateOneWithoutUpdatedusersNestedInput
    updatedusers?: userUpdateManyWithoutUpdateduserNestedInput
    createduserpermissions?: userpermissionUpdateManyWithoutCreateduserNestedInput
    updateduserpermissions?: userpermissionUpdateManyWithoutUpdateduserNestedInput
    userpermissions?: userpermissionUpdateManyWithoutUserNestedInput
    createduserroles?: userroleUpdateManyWithoutCreateduserNestedInput
    updateduserroles?: userroleUpdateManyWithoutUpdateduserNestedInput
    userroles?: userroleUpdateManyWithoutUserNestedInput
    language?: languagesUpdateManyWithoutUserNestedInput
    learningProgress?: learningProgressUpdateManyWithoutUserNestedInput
    chats?: chatUpdateManyWithoutUserNestedInput
    chatRooms?: chatRoomUpdateManyWithoutUserNestedInput
    subscriptions?: subscriptionUpdateManyWithoutUserNestedInput
  }

  export type userUncheckedUpdateWithoutUpdatedrolesInput = {
    id?: StringFieldUpdateOperationsInput | string
    firstname?: StringFieldUpdateOperationsInput | string
    lastname?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    appLanguage?: NullableStringFieldUpdateOperationsInput | string | null
    learningLanguage?: NullableStringFieldUpdateOperationsInput | string | null
    learningLevel?: NullableStringFieldUpdateOperationsInput | string | null
    theme?: NullableStringFieldUpdateOperationsInput | string | null
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    createdby?: StringFieldUpdateOperationsInput | string
    createdat?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedby?: NullableStringFieldUpdateOperationsInput | string | null
    updatedat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: IntFieldUpdateOperationsInput | number
    lastentranceat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastexitat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastloginat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    stripeCustomerId?: NullableStringFieldUpdateOperationsInput | string | null
    notificationuser?: notificationUncheckedUpdateManyWithoutToNestedInput
    createdapiclients?: apiclientUncheckedUpdateManyWithoutCreateduserNestedInput
    updatedapiclients?: apiclientUncheckedUpdateManyWithoutUpdateduserNestedInput
    createdpermissions?: permissionUncheckedUpdateManyWithoutCreateduserNestedInput
    updatedpermissions?: permissionUncheckedUpdateManyWithoutUpdateduserNestedInput
    refreshtokens?: refreshtokenUncheckedUpdateManyWithoutUserNestedInput
    createdroles?: roleUncheckedUpdateManyWithoutCreateduserNestedInput
    createdrolepermissions?: rolepermissionUncheckedUpdateManyWithoutCreateduserNestedInput
    updatedrolepermissions?: rolepermissionUncheckedUpdateManyWithoutUpdateduserNestedInput
    createdusers?: userUncheckedUpdateManyWithoutCreateduserNestedInput
    updatedusers?: userUncheckedUpdateManyWithoutUpdateduserNestedInput
    createduserpermissions?: userpermissionUncheckedUpdateManyWithoutCreateduserNestedInput
    updateduserpermissions?: userpermissionUncheckedUpdateManyWithoutUpdateduserNestedInput
    userpermissions?: userpermissionUncheckedUpdateManyWithoutUserNestedInput
    createduserroles?: userroleUncheckedUpdateManyWithoutCreateduserNestedInput
    updateduserroles?: userroleUncheckedUpdateManyWithoutUpdateduserNestedInput
    userroles?: userroleUncheckedUpdateManyWithoutUserNestedInput
    language?: languagesUncheckedUpdateManyWithoutUserNestedInput
    learningProgress?: learningProgressUncheckedUpdateManyWithoutUserNestedInput
    chats?: chatUncheckedUpdateManyWithoutUserNestedInput
    chatRooms?: chatRoomUncheckedUpdateManyWithoutUserNestedInput
    subscriptions?: subscriptionUncheckedUpdateManyWithoutUserNestedInput
  }

  export type rolepermissionUpsertWithWhereUniqueWithoutRoleInput = {
    where: rolepermissionWhereUniqueInput
    update: XOR<rolepermissionUpdateWithoutRoleInput, rolepermissionUncheckedUpdateWithoutRoleInput>
    create: XOR<rolepermissionCreateWithoutRoleInput, rolepermissionUncheckedCreateWithoutRoleInput>
  }

  export type rolepermissionUpdateWithWhereUniqueWithoutRoleInput = {
    where: rolepermissionWhereUniqueInput
    data: XOR<rolepermissionUpdateWithoutRoleInput, rolepermissionUncheckedUpdateWithoutRoleInput>
  }

  export type rolepermissionUpdateManyWithWhereWithoutRoleInput = {
    where: rolepermissionScalarWhereInput
    data: XOR<rolepermissionUpdateManyMutationInput, rolepermissionUncheckedUpdateManyWithoutRoleInput>
  }

  export type rolepermissionScalarWhereInput = {
    AND?: rolepermissionScalarWhereInput | rolepermissionScalarWhereInput[]
    OR?: rolepermissionScalarWhereInput[]
    NOT?: rolepermissionScalarWhereInput | rolepermissionScalarWhereInput[]
    id?: StringFilter<"rolepermission"> | string
    roleid?: StringFilter<"rolepermission"> | string
    permissionid?: StringFilter<"rolepermission"> | string
    createdat?: DateTimeFilter<"rolepermission"> | Date | string
    createdby?: StringFilter<"rolepermission"> | string
    updatedby?: StringNullableFilter<"rolepermission"> | string | null
    updatedat?: DateTimeNullableFilter<"rolepermission"> | Date | string | null
  }

  export type userroleUpsertWithWhereUniqueWithoutRoleInput = {
    where: userroleWhereUniqueInput
    update: XOR<userroleUpdateWithoutRoleInput, userroleUncheckedUpdateWithoutRoleInput>
    create: XOR<userroleCreateWithoutRoleInput, userroleUncheckedCreateWithoutRoleInput>
  }

  export type userroleUpdateWithWhereUniqueWithoutRoleInput = {
    where: userroleWhereUniqueInput
    data: XOR<userroleUpdateWithoutRoleInput, userroleUncheckedUpdateWithoutRoleInput>
  }

  export type userroleUpdateManyWithWhereWithoutRoleInput = {
    where: userroleScalarWhereInput
    data: XOR<userroleUpdateManyMutationInput, userroleUncheckedUpdateManyWithoutRoleInput>
  }

  export type userroleScalarWhereInput = {
    AND?: userroleScalarWhereInput | userroleScalarWhereInput[]
    OR?: userroleScalarWhereInput[]
    NOT?: userroleScalarWhereInput | userroleScalarWhereInput[]
    id?: StringFilter<"userrole"> | string
    userid?: StringFilter<"userrole"> | string
    roleid?: StringFilter<"userrole"> | string
    createdby?: StringFilter<"userrole"> | string
    createdat?: DateTimeFilter<"userrole"> | Date | string
    updatedby?: StringNullableFilter<"userrole"> | string | null
    updatedat?: DateTimeNullableFilter<"userrole"> | Date | string | null
  }

  export type userCreateWithoutNotificationuserInput = {
    id?: string
    firstname: string
    lastname: string
    phone?: string | null
    email: string
    password: string
    appLanguage?: string | null
    learningLanguage?: string | null
    learningLevel?: string | null
    theme?: string | null
    avatar?: string | null
    createdat?: Date | string
    updatedat?: Date | string | null
    status?: number
    lastentranceat?: Date | string | null
    lastexitat?: Date | string | null
    lastloginat?: Date | string | null
    stripeCustomerId?: string | null
    createdapiclients?: apiclientCreateNestedManyWithoutCreateduserInput
    updatedapiclients?: apiclientCreateNestedManyWithoutUpdateduserInput
    createdpermissions?: permissionCreateNestedManyWithoutCreateduserInput
    updatedpermissions?: permissionCreateNestedManyWithoutUpdateduserInput
    refreshtokens?: refreshtokenCreateNestedManyWithoutUserInput
    createdroles?: roleCreateNestedManyWithoutCreateduserInput
    updatedroles?: roleCreateNestedManyWithoutUpdateduserInput
    createdrolepermissions?: rolepermissionCreateNestedManyWithoutCreateduserInput
    updatedrolepermissions?: rolepermissionCreateNestedManyWithoutUpdateduserInput
    createduser: userCreateNestedOneWithoutCreatedusersInput
    createdusers?: userCreateNestedManyWithoutCreateduserInput
    updateduser?: userCreateNestedOneWithoutUpdatedusersInput
    updatedusers?: userCreateNestedManyWithoutUpdateduserInput
    createduserpermissions?: userpermissionCreateNestedManyWithoutCreateduserInput
    updateduserpermissions?: userpermissionCreateNestedManyWithoutUpdateduserInput
    userpermissions?: userpermissionCreateNestedManyWithoutUserInput
    createduserroles?: userroleCreateNestedManyWithoutCreateduserInput
    updateduserroles?: userroleCreateNestedManyWithoutUpdateduserInput
    userroles?: userroleCreateNestedManyWithoutUserInput
    language?: languagesCreateNestedManyWithoutUserInput
    learningProgress?: learningProgressCreateNestedManyWithoutUserInput
    chats?: chatCreateNestedManyWithoutUserInput
    chatRooms?: chatRoomCreateNestedManyWithoutUserInput
    subscriptions?: subscriptionCreateNestedManyWithoutUserInput
  }

  export type userUncheckedCreateWithoutNotificationuserInput = {
    id?: string
    firstname: string
    lastname: string
    phone?: string | null
    email: string
    password: string
    appLanguage?: string | null
    learningLanguage?: string | null
    learningLevel?: string | null
    theme?: string | null
    avatar?: string | null
    createdby: string
    createdat?: Date | string
    updatedby?: string | null
    updatedat?: Date | string | null
    status?: number
    lastentranceat?: Date | string | null
    lastexitat?: Date | string | null
    lastloginat?: Date | string | null
    stripeCustomerId?: string | null
    createdapiclients?: apiclientUncheckedCreateNestedManyWithoutCreateduserInput
    updatedapiclients?: apiclientUncheckedCreateNestedManyWithoutUpdateduserInput
    createdpermissions?: permissionUncheckedCreateNestedManyWithoutCreateduserInput
    updatedpermissions?: permissionUncheckedCreateNestedManyWithoutUpdateduserInput
    refreshtokens?: refreshtokenUncheckedCreateNestedManyWithoutUserInput
    createdroles?: roleUncheckedCreateNestedManyWithoutCreateduserInput
    updatedroles?: roleUncheckedCreateNestedManyWithoutUpdateduserInput
    createdrolepermissions?: rolepermissionUncheckedCreateNestedManyWithoutCreateduserInput
    updatedrolepermissions?: rolepermissionUncheckedCreateNestedManyWithoutUpdateduserInput
    createdusers?: userUncheckedCreateNestedManyWithoutCreateduserInput
    updatedusers?: userUncheckedCreateNestedManyWithoutUpdateduserInput
    createduserpermissions?: userpermissionUncheckedCreateNestedManyWithoutCreateduserInput
    updateduserpermissions?: userpermissionUncheckedCreateNestedManyWithoutUpdateduserInput
    userpermissions?: userpermissionUncheckedCreateNestedManyWithoutUserInput
    createduserroles?: userroleUncheckedCreateNestedManyWithoutCreateduserInput
    updateduserroles?: userroleUncheckedCreateNestedManyWithoutUpdateduserInput
    userroles?: userroleUncheckedCreateNestedManyWithoutUserInput
    language?: languagesUncheckedCreateNestedManyWithoutUserInput
    learningProgress?: learningProgressUncheckedCreateNestedManyWithoutUserInput
    chats?: chatUncheckedCreateNestedManyWithoutUserInput
    chatRooms?: chatRoomUncheckedCreateNestedManyWithoutUserInput
    subscriptions?: subscriptionUncheckedCreateNestedManyWithoutUserInput
  }

  export type userCreateOrConnectWithoutNotificationuserInput = {
    where: userWhereUniqueInput
    create: XOR<userCreateWithoutNotificationuserInput, userUncheckedCreateWithoutNotificationuserInput>
  }

  export type userUpsertWithoutNotificationuserInput = {
    update: XOR<userUpdateWithoutNotificationuserInput, userUncheckedUpdateWithoutNotificationuserInput>
    create: XOR<userCreateWithoutNotificationuserInput, userUncheckedCreateWithoutNotificationuserInput>
    where?: userWhereInput
  }

  export type userUpdateToOneWithWhereWithoutNotificationuserInput = {
    where?: userWhereInput
    data: XOR<userUpdateWithoutNotificationuserInput, userUncheckedUpdateWithoutNotificationuserInput>
  }

  export type userUpdateWithoutNotificationuserInput = {
    id?: StringFieldUpdateOperationsInput | string
    firstname?: StringFieldUpdateOperationsInput | string
    lastname?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    appLanguage?: NullableStringFieldUpdateOperationsInput | string | null
    learningLanguage?: NullableStringFieldUpdateOperationsInput | string | null
    learningLevel?: NullableStringFieldUpdateOperationsInput | string | null
    theme?: NullableStringFieldUpdateOperationsInput | string | null
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    createdat?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: IntFieldUpdateOperationsInput | number
    lastentranceat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastexitat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastloginat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    stripeCustomerId?: NullableStringFieldUpdateOperationsInput | string | null
    createdapiclients?: apiclientUpdateManyWithoutCreateduserNestedInput
    updatedapiclients?: apiclientUpdateManyWithoutUpdateduserNestedInput
    createdpermissions?: permissionUpdateManyWithoutCreateduserNestedInput
    updatedpermissions?: permissionUpdateManyWithoutUpdateduserNestedInput
    refreshtokens?: refreshtokenUpdateManyWithoutUserNestedInput
    createdroles?: roleUpdateManyWithoutCreateduserNestedInput
    updatedroles?: roleUpdateManyWithoutUpdateduserNestedInput
    createdrolepermissions?: rolepermissionUpdateManyWithoutCreateduserNestedInput
    updatedrolepermissions?: rolepermissionUpdateManyWithoutUpdateduserNestedInput
    createduser?: userUpdateOneRequiredWithoutCreatedusersNestedInput
    createdusers?: userUpdateManyWithoutCreateduserNestedInput
    updateduser?: userUpdateOneWithoutUpdatedusersNestedInput
    updatedusers?: userUpdateManyWithoutUpdateduserNestedInput
    createduserpermissions?: userpermissionUpdateManyWithoutCreateduserNestedInput
    updateduserpermissions?: userpermissionUpdateManyWithoutUpdateduserNestedInput
    userpermissions?: userpermissionUpdateManyWithoutUserNestedInput
    createduserroles?: userroleUpdateManyWithoutCreateduserNestedInput
    updateduserroles?: userroleUpdateManyWithoutUpdateduserNestedInput
    userroles?: userroleUpdateManyWithoutUserNestedInput
    language?: languagesUpdateManyWithoutUserNestedInput
    learningProgress?: learningProgressUpdateManyWithoutUserNestedInput
    chats?: chatUpdateManyWithoutUserNestedInput
    chatRooms?: chatRoomUpdateManyWithoutUserNestedInput
    subscriptions?: subscriptionUpdateManyWithoutUserNestedInput
  }

  export type userUncheckedUpdateWithoutNotificationuserInput = {
    id?: StringFieldUpdateOperationsInput | string
    firstname?: StringFieldUpdateOperationsInput | string
    lastname?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    appLanguage?: NullableStringFieldUpdateOperationsInput | string | null
    learningLanguage?: NullableStringFieldUpdateOperationsInput | string | null
    learningLevel?: NullableStringFieldUpdateOperationsInput | string | null
    theme?: NullableStringFieldUpdateOperationsInput | string | null
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    createdby?: StringFieldUpdateOperationsInput | string
    createdat?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedby?: NullableStringFieldUpdateOperationsInput | string | null
    updatedat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: IntFieldUpdateOperationsInput | number
    lastentranceat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastexitat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastloginat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    stripeCustomerId?: NullableStringFieldUpdateOperationsInput | string | null
    createdapiclients?: apiclientUncheckedUpdateManyWithoutCreateduserNestedInput
    updatedapiclients?: apiclientUncheckedUpdateManyWithoutUpdateduserNestedInput
    createdpermissions?: permissionUncheckedUpdateManyWithoutCreateduserNestedInput
    updatedpermissions?: permissionUncheckedUpdateManyWithoutUpdateduserNestedInput
    refreshtokens?: refreshtokenUncheckedUpdateManyWithoutUserNestedInput
    createdroles?: roleUncheckedUpdateManyWithoutCreateduserNestedInput
    updatedroles?: roleUncheckedUpdateManyWithoutUpdateduserNestedInput
    createdrolepermissions?: rolepermissionUncheckedUpdateManyWithoutCreateduserNestedInput
    updatedrolepermissions?: rolepermissionUncheckedUpdateManyWithoutUpdateduserNestedInput
    createdusers?: userUncheckedUpdateManyWithoutCreateduserNestedInput
    updatedusers?: userUncheckedUpdateManyWithoutUpdateduserNestedInput
    createduserpermissions?: userpermissionUncheckedUpdateManyWithoutCreateduserNestedInput
    updateduserpermissions?: userpermissionUncheckedUpdateManyWithoutUpdateduserNestedInput
    userpermissions?: userpermissionUncheckedUpdateManyWithoutUserNestedInput
    createduserroles?: userroleUncheckedUpdateManyWithoutCreateduserNestedInput
    updateduserroles?: userroleUncheckedUpdateManyWithoutUpdateduserNestedInput
    userroles?: userroleUncheckedUpdateManyWithoutUserNestedInput
    language?: languagesUncheckedUpdateManyWithoutUserNestedInput
    learningProgress?: learningProgressUncheckedUpdateManyWithoutUserNestedInput
    chats?: chatUncheckedUpdateManyWithoutUserNestedInput
    chatRooms?: chatRoomUncheckedUpdateManyWithoutUserNestedInput
    subscriptions?: subscriptionUncheckedUpdateManyWithoutUserNestedInput
  }

  export type userCreateWithoutCreatedpermissionsInput = {
    id?: string
    firstname: string
    lastname: string
    phone?: string | null
    email: string
    password: string
    appLanguage?: string | null
    learningLanguage?: string | null
    learningLevel?: string | null
    theme?: string | null
    avatar?: string | null
    createdat?: Date | string
    updatedat?: Date | string | null
    status?: number
    lastentranceat?: Date | string | null
    lastexitat?: Date | string | null
    lastloginat?: Date | string | null
    stripeCustomerId?: string | null
    notificationuser?: notificationCreateNestedManyWithoutToInput
    createdapiclients?: apiclientCreateNestedManyWithoutCreateduserInput
    updatedapiclients?: apiclientCreateNestedManyWithoutUpdateduserInput
    updatedpermissions?: permissionCreateNestedManyWithoutUpdateduserInput
    refreshtokens?: refreshtokenCreateNestedManyWithoutUserInput
    createdroles?: roleCreateNestedManyWithoutCreateduserInput
    updatedroles?: roleCreateNestedManyWithoutUpdateduserInput
    createdrolepermissions?: rolepermissionCreateNestedManyWithoutCreateduserInput
    updatedrolepermissions?: rolepermissionCreateNestedManyWithoutUpdateduserInput
    createduser: userCreateNestedOneWithoutCreatedusersInput
    createdusers?: userCreateNestedManyWithoutCreateduserInput
    updateduser?: userCreateNestedOneWithoutUpdatedusersInput
    updatedusers?: userCreateNestedManyWithoutUpdateduserInput
    createduserpermissions?: userpermissionCreateNestedManyWithoutCreateduserInput
    updateduserpermissions?: userpermissionCreateNestedManyWithoutUpdateduserInput
    userpermissions?: userpermissionCreateNestedManyWithoutUserInput
    createduserroles?: userroleCreateNestedManyWithoutCreateduserInput
    updateduserroles?: userroleCreateNestedManyWithoutUpdateduserInput
    userroles?: userroleCreateNestedManyWithoutUserInput
    language?: languagesCreateNestedManyWithoutUserInput
    learningProgress?: learningProgressCreateNestedManyWithoutUserInput
    chats?: chatCreateNestedManyWithoutUserInput
    chatRooms?: chatRoomCreateNestedManyWithoutUserInput
    subscriptions?: subscriptionCreateNestedManyWithoutUserInput
  }

  export type userUncheckedCreateWithoutCreatedpermissionsInput = {
    id?: string
    firstname: string
    lastname: string
    phone?: string | null
    email: string
    password: string
    appLanguage?: string | null
    learningLanguage?: string | null
    learningLevel?: string | null
    theme?: string | null
    avatar?: string | null
    createdby: string
    createdat?: Date | string
    updatedby?: string | null
    updatedat?: Date | string | null
    status?: number
    lastentranceat?: Date | string | null
    lastexitat?: Date | string | null
    lastloginat?: Date | string | null
    stripeCustomerId?: string | null
    notificationuser?: notificationUncheckedCreateNestedManyWithoutToInput
    createdapiclients?: apiclientUncheckedCreateNestedManyWithoutCreateduserInput
    updatedapiclients?: apiclientUncheckedCreateNestedManyWithoutUpdateduserInput
    updatedpermissions?: permissionUncheckedCreateNestedManyWithoutUpdateduserInput
    refreshtokens?: refreshtokenUncheckedCreateNestedManyWithoutUserInput
    createdroles?: roleUncheckedCreateNestedManyWithoutCreateduserInput
    updatedroles?: roleUncheckedCreateNestedManyWithoutUpdateduserInput
    createdrolepermissions?: rolepermissionUncheckedCreateNestedManyWithoutCreateduserInput
    updatedrolepermissions?: rolepermissionUncheckedCreateNestedManyWithoutUpdateduserInput
    createdusers?: userUncheckedCreateNestedManyWithoutCreateduserInput
    updatedusers?: userUncheckedCreateNestedManyWithoutUpdateduserInput
    createduserpermissions?: userpermissionUncheckedCreateNestedManyWithoutCreateduserInput
    updateduserpermissions?: userpermissionUncheckedCreateNestedManyWithoutUpdateduserInput
    userpermissions?: userpermissionUncheckedCreateNestedManyWithoutUserInput
    createduserroles?: userroleUncheckedCreateNestedManyWithoutCreateduserInput
    updateduserroles?: userroleUncheckedCreateNestedManyWithoutUpdateduserInput
    userroles?: userroleUncheckedCreateNestedManyWithoutUserInput
    language?: languagesUncheckedCreateNestedManyWithoutUserInput
    learningProgress?: learningProgressUncheckedCreateNestedManyWithoutUserInput
    chats?: chatUncheckedCreateNestedManyWithoutUserInput
    chatRooms?: chatRoomUncheckedCreateNestedManyWithoutUserInput
    subscriptions?: subscriptionUncheckedCreateNestedManyWithoutUserInput
  }

  export type userCreateOrConnectWithoutCreatedpermissionsInput = {
    where: userWhereUniqueInput
    create: XOR<userCreateWithoutCreatedpermissionsInput, userUncheckedCreateWithoutCreatedpermissionsInput>
  }

  export type userCreateWithoutUpdatedpermissionsInput = {
    id?: string
    firstname: string
    lastname: string
    phone?: string | null
    email: string
    password: string
    appLanguage?: string | null
    learningLanguage?: string | null
    learningLevel?: string | null
    theme?: string | null
    avatar?: string | null
    createdat?: Date | string
    updatedat?: Date | string | null
    status?: number
    lastentranceat?: Date | string | null
    lastexitat?: Date | string | null
    lastloginat?: Date | string | null
    stripeCustomerId?: string | null
    notificationuser?: notificationCreateNestedManyWithoutToInput
    createdapiclients?: apiclientCreateNestedManyWithoutCreateduserInput
    updatedapiclients?: apiclientCreateNestedManyWithoutUpdateduserInput
    createdpermissions?: permissionCreateNestedManyWithoutCreateduserInput
    refreshtokens?: refreshtokenCreateNestedManyWithoutUserInput
    createdroles?: roleCreateNestedManyWithoutCreateduserInput
    updatedroles?: roleCreateNestedManyWithoutUpdateduserInput
    createdrolepermissions?: rolepermissionCreateNestedManyWithoutCreateduserInput
    updatedrolepermissions?: rolepermissionCreateNestedManyWithoutUpdateduserInput
    createduser: userCreateNestedOneWithoutCreatedusersInput
    createdusers?: userCreateNestedManyWithoutCreateduserInput
    updateduser?: userCreateNestedOneWithoutUpdatedusersInput
    updatedusers?: userCreateNestedManyWithoutUpdateduserInput
    createduserpermissions?: userpermissionCreateNestedManyWithoutCreateduserInput
    updateduserpermissions?: userpermissionCreateNestedManyWithoutUpdateduserInput
    userpermissions?: userpermissionCreateNestedManyWithoutUserInput
    createduserroles?: userroleCreateNestedManyWithoutCreateduserInput
    updateduserroles?: userroleCreateNestedManyWithoutUpdateduserInput
    userroles?: userroleCreateNestedManyWithoutUserInput
    language?: languagesCreateNestedManyWithoutUserInput
    learningProgress?: learningProgressCreateNestedManyWithoutUserInput
    chats?: chatCreateNestedManyWithoutUserInput
    chatRooms?: chatRoomCreateNestedManyWithoutUserInput
    subscriptions?: subscriptionCreateNestedManyWithoutUserInput
  }

  export type userUncheckedCreateWithoutUpdatedpermissionsInput = {
    id?: string
    firstname: string
    lastname: string
    phone?: string | null
    email: string
    password: string
    appLanguage?: string | null
    learningLanguage?: string | null
    learningLevel?: string | null
    theme?: string | null
    avatar?: string | null
    createdby: string
    createdat?: Date | string
    updatedby?: string | null
    updatedat?: Date | string | null
    status?: number
    lastentranceat?: Date | string | null
    lastexitat?: Date | string | null
    lastloginat?: Date | string | null
    stripeCustomerId?: string | null
    notificationuser?: notificationUncheckedCreateNestedManyWithoutToInput
    createdapiclients?: apiclientUncheckedCreateNestedManyWithoutCreateduserInput
    updatedapiclients?: apiclientUncheckedCreateNestedManyWithoutUpdateduserInput
    createdpermissions?: permissionUncheckedCreateNestedManyWithoutCreateduserInput
    refreshtokens?: refreshtokenUncheckedCreateNestedManyWithoutUserInput
    createdroles?: roleUncheckedCreateNestedManyWithoutCreateduserInput
    updatedroles?: roleUncheckedCreateNestedManyWithoutUpdateduserInput
    createdrolepermissions?: rolepermissionUncheckedCreateNestedManyWithoutCreateduserInput
    updatedrolepermissions?: rolepermissionUncheckedCreateNestedManyWithoutUpdateduserInput
    createdusers?: userUncheckedCreateNestedManyWithoutCreateduserInput
    updatedusers?: userUncheckedCreateNestedManyWithoutUpdateduserInput
    createduserpermissions?: userpermissionUncheckedCreateNestedManyWithoutCreateduserInput
    updateduserpermissions?: userpermissionUncheckedCreateNestedManyWithoutUpdateduserInput
    userpermissions?: userpermissionUncheckedCreateNestedManyWithoutUserInput
    createduserroles?: userroleUncheckedCreateNestedManyWithoutCreateduserInput
    updateduserroles?: userroleUncheckedCreateNestedManyWithoutUpdateduserInput
    userroles?: userroleUncheckedCreateNestedManyWithoutUserInput
    language?: languagesUncheckedCreateNestedManyWithoutUserInput
    learningProgress?: learningProgressUncheckedCreateNestedManyWithoutUserInput
    chats?: chatUncheckedCreateNestedManyWithoutUserInput
    chatRooms?: chatRoomUncheckedCreateNestedManyWithoutUserInput
    subscriptions?: subscriptionUncheckedCreateNestedManyWithoutUserInput
  }

  export type userCreateOrConnectWithoutUpdatedpermissionsInput = {
    where: userWhereUniqueInput
    create: XOR<userCreateWithoutUpdatedpermissionsInput, userUncheckedCreateWithoutUpdatedpermissionsInput>
  }

  export type rolepermissionCreateWithoutPermissionInput = {
    id?: string
    createdat?: Date | string
    updatedat?: Date | string | null
    createduser: userCreateNestedOneWithoutCreatedrolepermissionsInput
    role: roleCreateNestedOneWithoutRolepermissionsInput
    updateduser?: userCreateNestedOneWithoutUpdatedrolepermissionsInput
  }

  export type rolepermissionUncheckedCreateWithoutPermissionInput = {
    id?: string
    roleid: string
    createdat?: Date | string
    createdby: string
    updatedby?: string | null
    updatedat?: Date | string | null
  }

  export type rolepermissionCreateOrConnectWithoutPermissionInput = {
    where: rolepermissionWhereUniqueInput
    create: XOR<rolepermissionCreateWithoutPermissionInput, rolepermissionUncheckedCreateWithoutPermissionInput>
  }

  export type rolepermissionCreateManyPermissionInputEnvelope = {
    data: rolepermissionCreateManyPermissionInput | rolepermissionCreateManyPermissionInput[]
    skipDuplicates?: boolean
  }

  export type userpermissionCreateWithoutPermissionInput = {
    id?: string
    createdat?: Date | string
    updatedat?: Date | string | null
    createduser: userCreateNestedOneWithoutCreateduserpermissionsInput
    updateduser?: userCreateNestedOneWithoutUpdateduserpermissionsInput
    user: userCreateNestedOneWithoutUserpermissionsInput
  }

  export type userpermissionUncheckedCreateWithoutPermissionInput = {
    id?: string
    userid: string
    createdby: string
    createdat?: Date | string
    updatedby?: string | null
    updatedat?: Date | string | null
  }

  export type userpermissionCreateOrConnectWithoutPermissionInput = {
    where: userpermissionWhereUniqueInput
    create: XOR<userpermissionCreateWithoutPermissionInput, userpermissionUncheckedCreateWithoutPermissionInput>
  }

  export type userpermissionCreateManyPermissionInputEnvelope = {
    data: userpermissionCreateManyPermissionInput | userpermissionCreateManyPermissionInput[]
    skipDuplicates?: boolean
  }

  export type userUpsertWithoutCreatedpermissionsInput = {
    update: XOR<userUpdateWithoutCreatedpermissionsInput, userUncheckedUpdateWithoutCreatedpermissionsInput>
    create: XOR<userCreateWithoutCreatedpermissionsInput, userUncheckedCreateWithoutCreatedpermissionsInput>
    where?: userWhereInput
  }

  export type userUpdateToOneWithWhereWithoutCreatedpermissionsInput = {
    where?: userWhereInput
    data: XOR<userUpdateWithoutCreatedpermissionsInput, userUncheckedUpdateWithoutCreatedpermissionsInput>
  }

  export type userUpdateWithoutCreatedpermissionsInput = {
    id?: StringFieldUpdateOperationsInput | string
    firstname?: StringFieldUpdateOperationsInput | string
    lastname?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    appLanguage?: NullableStringFieldUpdateOperationsInput | string | null
    learningLanguage?: NullableStringFieldUpdateOperationsInput | string | null
    learningLevel?: NullableStringFieldUpdateOperationsInput | string | null
    theme?: NullableStringFieldUpdateOperationsInput | string | null
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    createdat?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: IntFieldUpdateOperationsInput | number
    lastentranceat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastexitat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastloginat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    stripeCustomerId?: NullableStringFieldUpdateOperationsInput | string | null
    notificationuser?: notificationUpdateManyWithoutToNestedInput
    createdapiclients?: apiclientUpdateManyWithoutCreateduserNestedInput
    updatedapiclients?: apiclientUpdateManyWithoutUpdateduserNestedInput
    updatedpermissions?: permissionUpdateManyWithoutUpdateduserNestedInput
    refreshtokens?: refreshtokenUpdateManyWithoutUserNestedInput
    createdroles?: roleUpdateManyWithoutCreateduserNestedInput
    updatedroles?: roleUpdateManyWithoutUpdateduserNestedInput
    createdrolepermissions?: rolepermissionUpdateManyWithoutCreateduserNestedInput
    updatedrolepermissions?: rolepermissionUpdateManyWithoutUpdateduserNestedInput
    createduser?: userUpdateOneRequiredWithoutCreatedusersNestedInput
    createdusers?: userUpdateManyWithoutCreateduserNestedInput
    updateduser?: userUpdateOneWithoutUpdatedusersNestedInput
    updatedusers?: userUpdateManyWithoutUpdateduserNestedInput
    createduserpermissions?: userpermissionUpdateManyWithoutCreateduserNestedInput
    updateduserpermissions?: userpermissionUpdateManyWithoutUpdateduserNestedInput
    userpermissions?: userpermissionUpdateManyWithoutUserNestedInput
    createduserroles?: userroleUpdateManyWithoutCreateduserNestedInput
    updateduserroles?: userroleUpdateManyWithoutUpdateduserNestedInput
    userroles?: userroleUpdateManyWithoutUserNestedInput
    language?: languagesUpdateManyWithoutUserNestedInput
    learningProgress?: learningProgressUpdateManyWithoutUserNestedInput
    chats?: chatUpdateManyWithoutUserNestedInput
    chatRooms?: chatRoomUpdateManyWithoutUserNestedInput
    subscriptions?: subscriptionUpdateManyWithoutUserNestedInput
  }

  export type userUncheckedUpdateWithoutCreatedpermissionsInput = {
    id?: StringFieldUpdateOperationsInput | string
    firstname?: StringFieldUpdateOperationsInput | string
    lastname?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    appLanguage?: NullableStringFieldUpdateOperationsInput | string | null
    learningLanguage?: NullableStringFieldUpdateOperationsInput | string | null
    learningLevel?: NullableStringFieldUpdateOperationsInput | string | null
    theme?: NullableStringFieldUpdateOperationsInput | string | null
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    createdby?: StringFieldUpdateOperationsInput | string
    createdat?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedby?: NullableStringFieldUpdateOperationsInput | string | null
    updatedat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: IntFieldUpdateOperationsInput | number
    lastentranceat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastexitat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastloginat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    stripeCustomerId?: NullableStringFieldUpdateOperationsInput | string | null
    notificationuser?: notificationUncheckedUpdateManyWithoutToNestedInput
    createdapiclients?: apiclientUncheckedUpdateManyWithoutCreateduserNestedInput
    updatedapiclients?: apiclientUncheckedUpdateManyWithoutUpdateduserNestedInput
    updatedpermissions?: permissionUncheckedUpdateManyWithoutUpdateduserNestedInput
    refreshtokens?: refreshtokenUncheckedUpdateManyWithoutUserNestedInput
    createdroles?: roleUncheckedUpdateManyWithoutCreateduserNestedInput
    updatedroles?: roleUncheckedUpdateManyWithoutUpdateduserNestedInput
    createdrolepermissions?: rolepermissionUncheckedUpdateManyWithoutCreateduserNestedInput
    updatedrolepermissions?: rolepermissionUncheckedUpdateManyWithoutUpdateduserNestedInput
    createdusers?: userUncheckedUpdateManyWithoutCreateduserNestedInput
    updatedusers?: userUncheckedUpdateManyWithoutUpdateduserNestedInput
    createduserpermissions?: userpermissionUncheckedUpdateManyWithoutCreateduserNestedInput
    updateduserpermissions?: userpermissionUncheckedUpdateManyWithoutUpdateduserNestedInput
    userpermissions?: userpermissionUncheckedUpdateManyWithoutUserNestedInput
    createduserroles?: userroleUncheckedUpdateManyWithoutCreateduserNestedInput
    updateduserroles?: userroleUncheckedUpdateManyWithoutUpdateduserNestedInput
    userroles?: userroleUncheckedUpdateManyWithoutUserNestedInput
    language?: languagesUncheckedUpdateManyWithoutUserNestedInput
    learningProgress?: learningProgressUncheckedUpdateManyWithoutUserNestedInput
    chats?: chatUncheckedUpdateManyWithoutUserNestedInput
    chatRooms?: chatRoomUncheckedUpdateManyWithoutUserNestedInput
    subscriptions?: subscriptionUncheckedUpdateManyWithoutUserNestedInput
  }

  export type userUpsertWithoutUpdatedpermissionsInput = {
    update: XOR<userUpdateWithoutUpdatedpermissionsInput, userUncheckedUpdateWithoutUpdatedpermissionsInput>
    create: XOR<userCreateWithoutUpdatedpermissionsInput, userUncheckedCreateWithoutUpdatedpermissionsInput>
    where?: userWhereInput
  }

  export type userUpdateToOneWithWhereWithoutUpdatedpermissionsInput = {
    where?: userWhereInput
    data: XOR<userUpdateWithoutUpdatedpermissionsInput, userUncheckedUpdateWithoutUpdatedpermissionsInput>
  }

  export type userUpdateWithoutUpdatedpermissionsInput = {
    id?: StringFieldUpdateOperationsInput | string
    firstname?: StringFieldUpdateOperationsInput | string
    lastname?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    appLanguage?: NullableStringFieldUpdateOperationsInput | string | null
    learningLanguage?: NullableStringFieldUpdateOperationsInput | string | null
    learningLevel?: NullableStringFieldUpdateOperationsInput | string | null
    theme?: NullableStringFieldUpdateOperationsInput | string | null
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    createdat?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: IntFieldUpdateOperationsInput | number
    lastentranceat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastexitat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastloginat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    stripeCustomerId?: NullableStringFieldUpdateOperationsInput | string | null
    notificationuser?: notificationUpdateManyWithoutToNestedInput
    createdapiclients?: apiclientUpdateManyWithoutCreateduserNestedInput
    updatedapiclients?: apiclientUpdateManyWithoutUpdateduserNestedInput
    createdpermissions?: permissionUpdateManyWithoutCreateduserNestedInput
    refreshtokens?: refreshtokenUpdateManyWithoutUserNestedInput
    createdroles?: roleUpdateManyWithoutCreateduserNestedInput
    updatedroles?: roleUpdateManyWithoutUpdateduserNestedInput
    createdrolepermissions?: rolepermissionUpdateManyWithoutCreateduserNestedInput
    updatedrolepermissions?: rolepermissionUpdateManyWithoutUpdateduserNestedInput
    createduser?: userUpdateOneRequiredWithoutCreatedusersNestedInput
    createdusers?: userUpdateManyWithoutCreateduserNestedInput
    updateduser?: userUpdateOneWithoutUpdatedusersNestedInput
    updatedusers?: userUpdateManyWithoutUpdateduserNestedInput
    createduserpermissions?: userpermissionUpdateManyWithoutCreateduserNestedInput
    updateduserpermissions?: userpermissionUpdateManyWithoutUpdateduserNestedInput
    userpermissions?: userpermissionUpdateManyWithoutUserNestedInput
    createduserroles?: userroleUpdateManyWithoutCreateduserNestedInput
    updateduserroles?: userroleUpdateManyWithoutUpdateduserNestedInput
    userroles?: userroleUpdateManyWithoutUserNestedInput
    language?: languagesUpdateManyWithoutUserNestedInput
    learningProgress?: learningProgressUpdateManyWithoutUserNestedInput
    chats?: chatUpdateManyWithoutUserNestedInput
    chatRooms?: chatRoomUpdateManyWithoutUserNestedInput
    subscriptions?: subscriptionUpdateManyWithoutUserNestedInput
  }

  export type userUncheckedUpdateWithoutUpdatedpermissionsInput = {
    id?: StringFieldUpdateOperationsInput | string
    firstname?: StringFieldUpdateOperationsInput | string
    lastname?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    appLanguage?: NullableStringFieldUpdateOperationsInput | string | null
    learningLanguage?: NullableStringFieldUpdateOperationsInput | string | null
    learningLevel?: NullableStringFieldUpdateOperationsInput | string | null
    theme?: NullableStringFieldUpdateOperationsInput | string | null
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    createdby?: StringFieldUpdateOperationsInput | string
    createdat?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedby?: NullableStringFieldUpdateOperationsInput | string | null
    updatedat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: IntFieldUpdateOperationsInput | number
    lastentranceat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastexitat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastloginat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    stripeCustomerId?: NullableStringFieldUpdateOperationsInput | string | null
    notificationuser?: notificationUncheckedUpdateManyWithoutToNestedInput
    createdapiclients?: apiclientUncheckedUpdateManyWithoutCreateduserNestedInput
    updatedapiclients?: apiclientUncheckedUpdateManyWithoutUpdateduserNestedInput
    createdpermissions?: permissionUncheckedUpdateManyWithoutCreateduserNestedInput
    refreshtokens?: refreshtokenUncheckedUpdateManyWithoutUserNestedInput
    createdroles?: roleUncheckedUpdateManyWithoutCreateduserNestedInput
    updatedroles?: roleUncheckedUpdateManyWithoutUpdateduserNestedInput
    createdrolepermissions?: rolepermissionUncheckedUpdateManyWithoutCreateduserNestedInput
    updatedrolepermissions?: rolepermissionUncheckedUpdateManyWithoutUpdateduserNestedInput
    createdusers?: userUncheckedUpdateManyWithoutCreateduserNestedInput
    updatedusers?: userUncheckedUpdateManyWithoutUpdateduserNestedInput
    createduserpermissions?: userpermissionUncheckedUpdateManyWithoutCreateduserNestedInput
    updateduserpermissions?: userpermissionUncheckedUpdateManyWithoutUpdateduserNestedInput
    userpermissions?: userpermissionUncheckedUpdateManyWithoutUserNestedInput
    createduserroles?: userroleUncheckedUpdateManyWithoutCreateduserNestedInput
    updateduserroles?: userroleUncheckedUpdateManyWithoutUpdateduserNestedInput
    userroles?: userroleUncheckedUpdateManyWithoutUserNestedInput
    language?: languagesUncheckedUpdateManyWithoutUserNestedInput
    learningProgress?: learningProgressUncheckedUpdateManyWithoutUserNestedInput
    chats?: chatUncheckedUpdateManyWithoutUserNestedInput
    chatRooms?: chatRoomUncheckedUpdateManyWithoutUserNestedInput
    subscriptions?: subscriptionUncheckedUpdateManyWithoutUserNestedInput
  }

  export type rolepermissionUpsertWithWhereUniqueWithoutPermissionInput = {
    where: rolepermissionWhereUniqueInput
    update: XOR<rolepermissionUpdateWithoutPermissionInput, rolepermissionUncheckedUpdateWithoutPermissionInput>
    create: XOR<rolepermissionCreateWithoutPermissionInput, rolepermissionUncheckedCreateWithoutPermissionInput>
  }

  export type rolepermissionUpdateWithWhereUniqueWithoutPermissionInput = {
    where: rolepermissionWhereUniqueInput
    data: XOR<rolepermissionUpdateWithoutPermissionInput, rolepermissionUncheckedUpdateWithoutPermissionInput>
  }

  export type rolepermissionUpdateManyWithWhereWithoutPermissionInput = {
    where: rolepermissionScalarWhereInput
    data: XOR<rolepermissionUpdateManyMutationInput, rolepermissionUncheckedUpdateManyWithoutPermissionInput>
  }

  export type userpermissionUpsertWithWhereUniqueWithoutPermissionInput = {
    where: userpermissionWhereUniqueInput
    update: XOR<userpermissionUpdateWithoutPermissionInput, userpermissionUncheckedUpdateWithoutPermissionInput>
    create: XOR<userpermissionCreateWithoutPermissionInput, userpermissionUncheckedCreateWithoutPermissionInput>
  }

  export type userpermissionUpdateWithWhereUniqueWithoutPermissionInput = {
    where: userpermissionWhereUniqueInput
    data: XOR<userpermissionUpdateWithoutPermissionInput, userpermissionUncheckedUpdateWithoutPermissionInput>
  }

  export type userpermissionUpdateManyWithWhereWithoutPermissionInput = {
    where: userpermissionScalarWhereInput
    data: XOR<userpermissionUpdateManyMutationInput, userpermissionUncheckedUpdateManyWithoutPermissionInput>
  }

  export type userpermissionScalarWhereInput = {
    AND?: userpermissionScalarWhereInput | userpermissionScalarWhereInput[]
    OR?: userpermissionScalarWhereInput[]
    NOT?: userpermissionScalarWhereInput | userpermissionScalarWhereInput[]
    id?: StringFilter<"userpermission"> | string
    userid?: StringFilter<"userpermission"> | string
    permissionid?: StringFilter<"userpermission"> | string
    createdby?: StringFilter<"userpermission"> | string
    createdat?: DateTimeFilter<"userpermission"> | Date | string
    updatedby?: StringNullableFilter<"userpermission"> | string | null
    updatedat?: DateTimeNullableFilter<"userpermission"> | Date | string | null
  }

  export type userCreateWithoutCreatedrolepermissionsInput = {
    id?: string
    firstname: string
    lastname: string
    phone?: string | null
    email: string
    password: string
    appLanguage?: string | null
    learningLanguage?: string | null
    learningLevel?: string | null
    theme?: string | null
    avatar?: string | null
    createdat?: Date | string
    updatedat?: Date | string | null
    status?: number
    lastentranceat?: Date | string | null
    lastexitat?: Date | string | null
    lastloginat?: Date | string | null
    stripeCustomerId?: string | null
    notificationuser?: notificationCreateNestedManyWithoutToInput
    createdapiclients?: apiclientCreateNestedManyWithoutCreateduserInput
    updatedapiclients?: apiclientCreateNestedManyWithoutUpdateduserInput
    createdpermissions?: permissionCreateNestedManyWithoutCreateduserInput
    updatedpermissions?: permissionCreateNestedManyWithoutUpdateduserInput
    refreshtokens?: refreshtokenCreateNestedManyWithoutUserInput
    createdroles?: roleCreateNestedManyWithoutCreateduserInput
    updatedroles?: roleCreateNestedManyWithoutUpdateduserInput
    updatedrolepermissions?: rolepermissionCreateNestedManyWithoutUpdateduserInput
    createduser: userCreateNestedOneWithoutCreatedusersInput
    createdusers?: userCreateNestedManyWithoutCreateduserInput
    updateduser?: userCreateNestedOneWithoutUpdatedusersInput
    updatedusers?: userCreateNestedManyWithoutUpdateduserInput
    createduserpermissions?: userpermissionCreateNestedManyWithoutCreateduserInput
    updateduserpermissions?: userpermissionCreateNestedManyWithoutUpdateduserInput
    userpermissions?: userpermissionCreateNestedManyWithoutUserInput
    createduserroles?: userroleCreateNestedManyWithoutCreateduserInput
    updateduserroles?: userroleCreateNestedManyWithoutUpdateduserInput
    userroles?: userroleCreateNestedManyWithoutUserInput
    language?: languagesCreateNestedManyWithoutUserInput
    learningProgress?: learningProgressCreateNestedManyWithoutUserInput
    chats?: chatCreateNestedManyWithoutUserInput
    chatRooms?: chatRoomCreateNestedManyWithoutUserInput
    subscriptions?: subscriptionCreateNestedManyWithoutUserInput
  }

  export type userUncheckedCreateWithoutCreatedrolepermissionsInput = {
    id?: string
    firstname: string
    lastname: string
    phone?: string | null
    email: string
    password: string
    appLanguage?: string | null
    learningLanguage?: string | null
    learningLevel?: string | null
    theme?: string | null
    avatar?: string | null
    createdby: string
    createdat?: Date | string
    updatedby?: string | null
    updatedat?: Date | string | null
    status?: number
    lastentranceat?: Date | string | null
    lastexitat?: Date | string | null
    lastloginat?: Date | string | null
    stripeCustomerId?: string | null
    notificationuser?: notificationUncheckedCreateNestedManyWithoutToInput
    createdapiclients?: apiclientUncheckedCreateNestedManyWithoutCreateduserInput
    updatedapiclients?: apiclientUncheckedCreateNestedManyWithoutUpdateduserInput
    createdpermissions?: permissionUncheckedCreateNestedManyWithoutCreateduserInput
    updatedpermissions?: permissionUncheckedCreateNestedManyWithoutUpdateduserInput
    refreshtokens?: refreshtokenUncheckedCreateNestedManyWithoutUserInput
    createdroles?: roleUncheckedCreateNestedManyWithoutCreateduserInput
    updatedroles?: roleUncheckedCreateNestedManyWithoutUpdateduserInput
    updatedrolepermissions?: rolepermissionUncheckedCreateNestedManyWithoutUpdateduserInput
    createdusers?: userUncheckedCreateNestedManyWithoutCreateduserInput
    updatedusers?: userUncheckedCreateNestedManyWithoutUpdateduserInput
    createduserpermissions?: userpermissionUncheckedCreateNestedManyWithoutCreateduserInput
    updateduserpermissions?: userpermissionUncheckedCreateNestedManyWithoutUpdateduserInput
    userpermissions?: userpermissionUncheckedCreateNestedManyWithoutUserInput
    createduserroles?: userroleUncheckedCreateNestedManyWithoutCreateduserInput
    updateduserroles?: userroleUncheckedCreateNestedManyWithoutUpdateduserInput
    userroles?: userroleUncheckedCreateNestedManyWithoutUserInput
    language?: languagesUncheckedCreateNestedManyWithoutUserInput
    learningProgress?: learningProgressUncheckedCreateNestedManyWithoutUserInput
    chats?: chatUncheckedCreateNestedManyWithoutUserInput
    chatRooms?: chatRoomUncheckedCreateNestedManyWithoutUserInput
    subscriptions?: subscriptionUncheckedCreateNestedManyWithoutUserInput
  }

  export type userCreateOrConnectWithoutCreatedrolepermissionsInput = {
    where: userWhereUniqueInput
    create: XOR<userCreateWithoutCreatedrolepermissionsInput, userUncheckedCreateWithoutCreatedrolepermissionsInput>
  }

  export type permissionCreateWithoutRolepermissionsInput = {
    id?: string
    name: string
    value: string
    group: string
    description: string
    createdat?: Date | string
    updatedat?: Date | string | null
    createduser: userCreateNestedOneWithoutCreatedpermissionsInput
    updateduser?: userCreateNestedOneWithoutUpdatedpermissionsInput
    userpermissions?: userpermissionCreateNestedManyWithoutPermissionInput
  }

  export type permissionUncheckedCreateWithoutRolepermissionsInput = {
    id?: string
    name: string
    value: string
    group: string
    description: string
    createdby: string
    createdat?: Date | string
    updatedby?: string | null
    updatedat?: Date | string | null
    userpermissions?: userpermissionUncheckedCreateNestedManyWithoutPermissionInput
  }

  export type permissionCreateOrConnectWithoutRolepermissionsInput = {
    where: permissionWhereUniqueInput
    create: XOR<permissionCreateWithoutRolepermissionsInput, permissionUncheckedCreateWithoutRolepermissionsInput>
  }

  export type roleCreateWithoutRolepermissionsInput = {
    id?: string
    name: string
    createdat?: Date | string
    updatedat?: Date | string | null
    issystemrole?: boolean
    createduser: userCreateNestedOneWithoutCreatedrolesInput
    updateduser?: userCreateNestedOneWithoutUpdatedrolesInput
    userroles?: userroleCreateNestedManyWithoutRoleInput
  }

  export type roleUncheckedCreateWithoutRolepermissionsInput = {
    id?: string
    name: string
    createdby: string
    createdat?: Date | string
    updatedby?: string | null
    updatedat?: Date | string | null
    issystemrole?: boolean
    userroles?: userroleUncheckedCreateNestedManyWithoutRoleInput
  }

  export type roleCreateOrConnectWithoutRolepermissionsInput = {
    where: roleWhereUniqueInput
    create: XOR<roleCreateWithoutRolepermissionsInput, roleUncheckedCreateWithoutRolepermissionsInput>
  }

  export type userCreateWithoutUpdatedrolepermissionsInput = {
    id?: string
    firstname: string
    lastname: string
    phone?: string | null
    email: string
    password: string
    appLanguage?: string | null
    learningLanguage?: string | null
    learningLevel?: string | null
    theme?: string | null
    avatar?: string | null
    createdat?: Date | string
    updatedat?: Date | string | null
    status?: number
    lastentranceat?: Date | string | null
    lastexitat?: Date | string | null
    lastloginat?: Date | string | null
    stripeCustomerId?: string | null
    notificationuser?: notificationCreateNestedManyWithoutToInput
    createdapiclients?: apiclientCreateNestedManyWithoutCreateduserInput
    updatedapiclients?: apiclientCreateNestedManyWithoutUpdateduserInput
    createdpermissions?: permissionCreateNestedManyWithoutCreateduserInput
    updatedpermissions?: permissionCreateNestedManyWithoutUpdateduserInput
    refreshtokens?: refreshtokenCreateNestedManyWithoutUserInput
    createdroles?: roleCreateNestedManyWithoutCreateduserInput
    updatedroles?: roleCreateNestedManyWithoutUpdateduserInput
    createdrolepermissions?: rolepermissionCreateNestedManyWithoutCreateduserInput
    createduser: userCreateNestedOneWithoutCreatedusersInput
    createdusers?: userCreateNestedManyWithoutCreateduserInput
    updateduser?: userCreateNestedOneWithoutUpdatedusersInput
    updatedusers?: userCreateNestedManyWithoutUpdateduserInput
    createduserpermissions?: userpermissionCreateNestedManyWithoutCreateduserInput
    updateduserpermissions?: userpermissionCreateNestedManyWithoutUpdateduserInput
    userpermissions?: userpermissionCreateNestedManyWithoutUserInput
    createduserroles?: userroleCreateNestedManyWithoutCreateduserInput
    updateduserroles?: userroleCreateNestedManyWithoutUpdateduserInput
    userroles?: userroleCreateNestedManyWithoutUserInput
    language?: languagesCreateNestedManyWithoutUserInput
    learningProgress?: learningProgressCreateNestedManyWithoutUserInput
    chats?: chatCreateNestedManyWithoutUserInput
    chatRooms?: chatRoomCreateNestedManyWithoutUserInput
    subscriptions?: subscriptionCreateNestedManyWithoutUserInput
  }

  export type userUncheckedCreateWithoutUpdatedrolepermissionsInput = {
    id?: string
    firstname: string
    lastname: string
    phone?: string | null
    email: string
    password: string
    appLanguage?: string | null
    learningLanguage?: string | null
    learningLevel?: string | null
    theme?: string | null
    avatar?: string | null
    createdby: string
    createdat?: Date | string
    updatedby?: string | null
    updatedat?: Date | string | null
    status?: number
    lastentranceat?: Date | string | null
    lastexitat?: Date | string | null
    lastloginat?: Date | string | null
    stripeCustomerId?: string | null
    notificationuser?: notificationUncheckedCreateNestedManyWithoutToInput
    createdapiclients?: apiclientUncheckedCreateNestedManyWithoutCreateduserInput
    updatedapiclients?: apiclientUncheckedCreateNestedManyWithoutUpdateduserInput
    createdpermissions?: permissionUncheckedCreateNestedManyWithoutCreateduserInput
    updatedpermissions?: permissionUncheckedCreateNestedManyWithoutUpdateduserInput
    refreshtokens?: refreshtokenUncheckedCreateNestedManyWithoutUserInput
    createdroles?: roleUncheckedCreateNestedManyWithoutCreateduserInput
    updatedroles?: roleUncheckedCreateNestedManyWithoutUpdateduserInput
    createdrolepermissions?: rolepermissionUncheckedCreateNestedManyWithoutCreateduserInput
    createdusers?: userUncheckedCreateNestedManyWithoutCreateduserInput
    updatedusers?: userUncheckedCreateNestedManyWithoutUpdateduserInput
    createduserpermissions?: userpermissionUncheckedCreateNestedManyWithoutCreateduserInput
    updateduserpermissions?: userpermissionUncheckedCreateNestedManyWithoutUpdateduserInput
    userpermissions?: userpermissionUncheckedCreateNestedManyWithoutUserInput
    createduserroles?: userroleUncheckedCreateNestedManyWithoutCreateduserInput
    updateduserroles?: userroleUncheckedCreateNestedManyWithoutUpdateduserInput
    userroles?: userroleUncheckedCreateNestedManyWithoutUserInput
    language?: languagesUncheckedCreateNestedManyWithoutUserInput
    learningProgress?: learningProgressUncheckedCreateNestedManyWithoutUserInput
    chats?: chatUncheckedCreateNestedManyWithoutUserInput
    chatRooms?: chatRoomUncheckedCreateNestedManyWithoutUserInput
    subscriptions?: subscriptionUncheckedCreateNestedManyWithoutUserInput
  }

  export type userCreateOrConnectWithoutUpdatedrolepermissionsInput = {
    where: userWhereUniqueInput
    create: XOR<userCreateWithoutUpdatedrolepermissionsInput, userUncheckedCreateWithoutUpdatedrolepermissionsInput>
  }

  export type userUpsertWithoutCreatedrolepermissionsInput = {
    update: XOR<userUpdateWithoutCreatedrolepermissionsInput, userUncheckedUpdateWithoutCreatedrolepermissionsInput>
    create: XOR<userCreateWithoutCreatedrolepermissionsInput, userUncheckedCreateWithoutCreatedrolepermissionsInput>
    where?: userWhereInput
  }

  export type userUpdateToOneWithWhereWithoutCreatedrolepermissionsInput = {
    where?: userWhereInput
    data: XOR<userUpdateWithoutCreatedrolepermissionsInput, userUncheckedUpdateWithoutCreatedrolepermissionsInput>
  }

  export type userUpdateWithoutCreatedrolepermissionsInput = {
    id?: StringFieldUpdateOperationsInput | string
    firstname?: StringFieldUpdateOperationsInput | string
    lastname?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    appLanguage?: NullableStringFieldUpdateOperationsInput | string | null
    learningLanguage?: NullableStringFieldUpdateOperationsInput | string | null
    learningLevel?: NullableStringFieldUpdateOperationsInput | string | null
    theme?: NullableStringFieldUpdateOperationsInput | string | null
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    createdat?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: IntFieldUpdateOperationsInput | number
    lastentranceat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastexitat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastloginat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    stripeCustomerId?: NullableStringFieldUpdateOperationsInput | string | null
    notificationuser?: notificationUpdateManyWithoutToNestedInput
    createdapiclients?: apiclientUpdateManyWithoutCreateduserNestedInput
    updatedapiclients?: apiclientUpdateManyWithoutUpdateduserNestedInput
    createdpermissions?: permissionUpdateManyWithoutCreateduserNestedInput
    updatedpermissions?: permissionUpdateManyWithoutUpdateduserNestedInput
    refreshtokens?: refreshtokenUpdateManyWithoutUserNestedInput
    createdroles?: roleUpdateManyWithoutCreateduserNestedInput
    updatedroles?: roleUpdateManyWithoutUpdateduserNestedInput
    updatedrolepermissions?: rolepermissionUpdateManyWithoutUpdateduserNestedInput
    createduser?: userUpdateOneRequiredWithoutCreatedusersNestedInput
    createdusers?: userUpdateManyWithoutCreateduserNestedInput
    updateduser?: userUpdateOneWithoutUpdatedusersNestedInput
    updatedusers?: userUpdateManyWithoutUpdateduserNestedInput
    createduserpermissions?: userpermissionUpdateManyWithoutCreateduserNestedInput
    updateduserpermissions?: userpermissionUpdateManyWithoutUpdateduserNestedInput
    userpermissions?: userpermissionUpdateManyWithoutUserNestedInput
    createduserroles?: userroleUpdateManyWithoutCreateduserNestedInput
    updateduserroles?: userroleUpdateManyWithoutUpdateduserNestedInput
    userroles?: userroleUpdateManyWithoutUserNestedInput
    language?: languagesUpdateManyWithoutUserNestedInput
    learningProgress?: learningProgressUpdateManyWithoutUserNestedInput
    chats?: chatUpdateManyWithoutUserNestedInput
    chatRooms?: chatRoomUpdateManyWithoutUserNestedInput
    subscriptions?: subscriptionUpdateManyWithoutUserNestedInput
  }

  export type userUncheckedUpdateWithoutCreatedrolepermissionsInput = {
    id?: StringFieldUpdateOperationsInput | string
    firstname?: StringFieldUpdateOperationsInput | string
    lastname?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    appLanguage?: NullableStringFieldUpdateOperationsInput | string | null
    learningLanguage?: NullableStringFieldUpdateOperationsInput | string | null
    learningLevel?: NullableStringFieldUpdateOperationsInput | string | null
    theme?: NullableStringFieldUpdateOperationsInput | string | null
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    createdby?: StringFieldUpdateOperationsInput | string
    createdat?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedby?: NullableStringFieldUpdateOperationsInput | string | null
    updatedat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: IntFieldUpdateOperationsInput | number
    lastentranceat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastexitat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastloginat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    stripeCustomerId?: NullableStringFieldUpdateOperationsInput | string | null
    notificationuser?: notificationUncheckedUpdateManyWithoutToNestedInput
    createdapiclients?: apiclientUncheckedUpdateManyWithoutCreateduserNestedInput
    updatedapiclients?: apiclientUncheckedUpdateManyWithoutUpdateduserNestedInput
    createdpermissions?: permissionUncheckedUpdateManyWithoutCreateduserNestedInput
    updatedpermissions?: permissionUncheckedUpdateManyWithoutUpdateduserNestedInput
    refreshtokens?: refreshtokenUncheckedUpdateManyWithoutUserNestedInput
    createdroles?: roleUncheckedUpdateManyWithoutCreateduserNestedInput
    updatedroles?: roleUncheckedUpdateManyWithoutUpdateduserNestedInput
    updatedrolepermissions?: rolepermissionUncheckedUpdateManyWithoutUpdateduserNestedInput
    createdusers?: userUncheckedUpdateManyWithoutCreateduserNestedInput
    updatedusers?: userUncheckedUpdateManyWithoutUpdateduserNestedInput
    createduserpermissions?: userpermissionUncheckedUpdateManyWithoutCreateduserNestedInput
    updateduserpermissions?: userpermissionUncheckedUpdateManyWithoutUpdateduserNestedInput
    userpermissions?: userpermissionUncheckedUpdateManyWithoutUserNestedInput
    createduserroles?: userroleUncheckedUpdateManyWithoutCreateduserNestedInput
    updateduserroles?: userroleUncheckedUpdateManyWithoutUpdateduserNestedInput
    userroles?: userroleUncheckedUpdateManyWithoutUserNestedInput
    language?: languagesUncheckedUpdateManyWithoutUserNestedInput
    learningProgress?: learningProgressUncheckedUpdateManyWithoutUserNestedInput
    chats?: chatUncheckedUpdateManyWithoutUserNestedInput
    chatRooms?: chatRoomUncheckedUpdateManyWithoutUserNestedInput
    subscriptions?: subscriptionUncheckedUpdateManyWithoutUserNestedInput
  }

  export type permissionUpsertWithoutRolepermissionsInput = {
    update: XOR<permissionUpdateWithoutRolepermissionsInput, permissionUncheckedUpdateWithoutRolepermissionsInput>
    create: XOR<permissionCreateWithoutRolepermissionsInput, permissionUncheckedCreateWithoutRolepermissionsInput>
    where?: permissionWhereInput
  }

  export type permissionUpdateToOneWithWhereWithoutRolepermissionsInput = {
    where?: permissionWhereInput
    data: XOR<permissionUpdateWithoutRolepermissionsInput, permissionUncheckedUpdateWithoutRolepermissionsInput>
  }

  export type permissionUpdateWithoutRolepermissionsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    value?: StringFieldUpdateOperationsInput | string
    group?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    createdat?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createduser?: userUpdateOneRequiredWithoutCreatedpermissionsNestedInput
    updateduser?: userUpdateOneWithoutUpdatedpermissionsNestedInput
    userpermissions?: userpermissionUpdateManyWithoutPermissionNestedInput
  }

  export type permissionUncheckedUpdateWithoutRolepermissionsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    value?: StringFieldUpdateOperationsInput | string
    group?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    createdby?: StringFieldUpdateOperationsInput | string
    createdat?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedby?: NullableStringFieldUpdateOperationsInput | string | null
    updatedat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    userpermissions?: userpermissionUncheckedUpdateManyWithoutPermissionNestedInput
  }

  export type roleUpsertWithoutRolepermissionsInput = {
    update: XOR<roleUpdateWithoutRolepermissionsInput, roleUncheckedUpdateWithoutRolepermissionsInput>
    create: XOR<roleCreateWithoutRolepermissionsInput, roleUncheckedCreateWithoutRolepermissionsInput>
    where?: roleWhereInput
  }

  export type roleUpdateToOneWithWhereWithoutRolepermissionsInput = {
    where?: roleWhereInput
    data: XOR<roleUpdateWithoutRolepermissionsInput, roleUncheckedUpdateWithoutRolepermissionsInput>
  }

  export type roleUpdateWithoutRolepermissionsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    createdat?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    issystemrole?: BoolFieldUpdateOperationsInput | boolean
    createduser?: userUpdateOneRequiredWithoutCreatedrolesNestedInput
    updateduser?: userUpdateOneWithoutUpdatedrolesNestedInput
    userroles?: userroleUpdateManyWithoutRoleNestedInput
  }

  export type roleUncheckedUpdateWithoutRolepermissionsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    createdby?: StringFieldUpdateOperationsInput | string
    createdat?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedby?: NullableStringFieldUpdateOperationsInput | string | null
    updatedat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    issystemrole?: BoolFieldUpdateOperationsInput | boolean
    userroles?: userroleUncheckedUpdateManyWithoutRoleNestedInput
  }

  export type userUpsertWithoutUpdatedrolepermissionsInput = {
    update: XOR<userUpdateWithoutUpdatedrolepermissionsInput, userUncheckedUpdateWithoutUpdatedrolepermissionsInput>
    create: XOR<userCreateWithoutUpdatedrolepermissionsInput, userUncheckedCreateWithoutUpdatedrolepermissionsInput>
    where?: userWhereInput
  }

  export type userUpdateToOneWithWhereWithoutUpdatedrolepermissionsInput = {
    where?: userWhereInput
    data: XOR<userUpdateWithoutUpdatedrolepermissionsInput, userUncheckedUpdateWithoutUpdatedrolepermissionsInput>
  }

  export type userUpdateWithoutUpdatedrolepermissionsInput = {
    id?: StringFieldUpdateOperationsInput | string
    firstname?: StringFieldUpdateOperationsInput | string
    lastname?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    appLanguage?: NullableStringFieldUpdateOperationsInput | string | null
    learningLanguage?: NullableStringFieldUpdateOperationsInput | string | null
    learningLevel?: NullableStringFieldUpdateOperationsInput | string | null
    theme?: NullableStringFieldUpdateOperationsInput | string | null
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    createdat?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: IntFieldUpdateOperationsInput | number
    lastentranceat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastexitat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastloginat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    stripeCustomerId?: NullableStringFieldUpdateOperationsInput | string | null
    notificationuser?: notificationUpdateManyWithoutToNestedInput
    createdapiclients?: apiclientUpdateManyWithoutCreateduserNestedInput
    updatedapiclients?: apiclientUpdateManyWithoutUpdateduserNestedInput
    createdpermissions?: permissionUpdateManyWithoutCreateduserNestedInput
    updatedpermissions?: permissionUpdateManyWithoutUpdateduserNestedInput
    refreshtokens?: refreshtokenUpdateManyWithoutUserNestedInput
    createdroles?: roleUpdateManyWithoutCreateduserNestedInput
    updatedroles?: roleUpdateManyWithoutUpdateduserNestedInput
    createdrolepermissions?: rolepermissionUpdateManyWithoutCreateduserNestedInput
    createduser?: userUpdateOneRequiredWithoutCreatedusersNestedInput
    createdusers?: userUpdateManyWithoutCreateduserNestedInput
    updateduser?: userUpdateOneWithoutUpdatedusersNestedInput
    updatedusers?: userUpdateManyWithoutUpdateduserNestedInput
    createduserpermissions?: userpermissionUpdateManyWithoutCreateduserNestedInput
    updateduserpermissions?: userpermissionUpdateManyWithoutUpdateduserNestedInput
    userpermissions?: userpermissionUpdateManyWithoutUserNestedInput
    createduserroles?: userroleUpdateManyWithoutCreateduserNestedInput
    updateduserroles?: userroleUpdateManyWithoutUpdateduserNestedInput
    userroles?: userroleUpdateManyWithoutUserNestedInput
    language?: languagesUpdateManyWithoutUserNestedInput
    learningProgress?: learningProgressUpdateManyWithoutUserNestedInput
    chats?: chatUpdateManyWithoutUserNestedInput
    chatRooms?: chatRoomUpdateManyWithoutUserNestedInput
    subscriptions?: subscriptionUpdateManyWithoutUserNestedInput
  }

  export type userUncheckedUpdateWithoutUpdatedrolepermissionsInput = {
    id?: StringFieldUpdateOperationsInput | string
    firstname?: StringFieldUpdateOperationsInput | string
    lastname?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    appLanguage?: NullableStringFieldUpdateOperationsInput | string | null
    learningLanguage?: NullableStringFieldUpdateOperationsInput | string | null
    learningLevel?: NullableStringFieldUpdateOperationsInput | string | null
    theme?: NullableStringFieldUpdateOperationsInput | string | null
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    createdby?: StringFieldUpdateOperationsInput | string
    createdat?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedby?: NullableStringFieldUpdateOperationsInput | string | null
    updatedat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: IntFieldUpdateOperationsInput | number
    lastentranceat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastexitat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastloginat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    stripeCustomerId?: NullableStringFieldUpdateOperationsInput | string | null
    notificationuser?: notificationUncheckedUpdateManyWithoutToNestedInput
    createdapiclients?: apiclientUncheckedUpdateManyWithoutCreateduserNestedInput
    updatedapiclients?: apiclientUncheckedUpdateManyWithoutUpdateduserNestedInput
    createdpermissions?: permissionUncheckedUpdateManyWithoutCreateduserNestedInput
    updatedpermissions?: permissionUncheckedUpdateManyWithoutUpdateduserNestedInput
    refreshtokens?: refreshtokenUncheckedUpdateManyWithoutUserNestedInput
    createdroles?: roleUncheckedUpdateManyWithoutCreateduserNestedInput
    updatedroles?: roleUncheckedUpdateManyWithoutUpdateduserNestedInput
    createdrolepermissions?: rolepermissionUncheckedUpdateManyWithoutCreateduserNestedInput
    createdusers?: userUncheckedUpdateManyWithoutCreateduserNestedInput
    updatedusers?: userUncheckedUpdateManyWithoutUpdateduserNestedInput
    createduserpermissions?: userpermissionUncheckedUpdateManyWithoutCreateduserNestedInput
    updateduserpermissions?: userpermissionUncheckedUpdateManyWithoutUpdateduserNestedInput
    userpermissions?: userpermissionUncheckedUpdateManyWithoutUserNestedInput
    createduserroles?: userroleUncheckedUpdateManyWithoutCreateduserNestedInput
    updateduserroles?: userroleUncheckedUpdateManyWithoutUpdateduserNestedInput
    userroles?: userroleUncheckedUpdateManyWithoutUserNestedInput
    language?: languagesUncheckedUpdateManyWithoutUserNestedInput
    learningProgress?: learningProgressUncheckedUpdateManyWithoutUserNestedInput
    chats?: chatUncheckedUpdateManyWithoutUserNestedInput
    chatRooms?: chatRoomUncheckedUpdateManyWithoutUserNestedInput
    subscriptions?: subscriptionUncheckedUpdateManyWithoutUserNestedInput
  }

  export type notificationCreateWithoutToInput = {
    id?: string
    message: string
    url: string
    createdby: number
    createdat?: Date | string
    readedat?: Date | string | null
  }

  export type notificationUncheckedCreateWithoutToInput = {
    id?: string
    message: string
    url: string
    createdby: number
    createdat?: Date | string
    readedat?: Date | string | null
  }

  export type notificationCreateOrConnectWithoutToInput = {
    where: notificationWhereUniqueInput
    create: XOR<notificationCreateWithoutToInput, notificationUncheckedCreateWithoutToInput>
  }

  export type notificationCreateManyToInputEnvelope = {
    data: notificationCreateManyToInput | notificationCreateManyToInput[]
    skipDuplicates?: boolean
  }

  export type apiclientCreateWithoutCreateduserInput = {
    id?: string
    name: string
    key: string
    secret: string
    type: number
    createdat?: Date | string
    updatedat?: Date | string | null
    isactive: boolean
    updateduser?: userCreateNestedOneWithoutUpdatedapiclientsInput
  }

  export type apiclientUncheckedCreateWithoutCreateduserInput = {
    id?: string
    name: string
    key: string
    secret: string
    type: number
    createdat?: Date | string
    updatedat?: Date | string | null
    updatedby?: string | null
    isactive: boolean
  }

  export type apiclientCreateOrConnectWithoutCreateduserInput = {
    where: apiclientWhereUniqueInput
    create: XOR<apiclientCreateWithoutCreateduserInput, apiclientUncheckedCreateWithoutCreateduserInput>
  }

  export type apiclientCreateManyCreateduserInputEnvelope = {
    data: apiclientCreateManyCreateduserInput | apiclientCreateManyCreateduserInput[]
    skipDuplicates?: boolean
  }

  export type apiclientCreateWithoutUpdateduserInput = {
    id?: string
    name: string
    key: string
    secret: string
    type: number
    createdat?: Date | string
    updatedat?: Date | string | null
    isactive: boolean
    createduser: userCreateNestedOneWithoutCreatedapiclientsInput
  }

  export type apiclientUncheckedCreateWithoutUpdateduserInput = {
    id?: string
    name: string
    key: string
    secret: string
    type: number
    createdat?: Date | string
    createdby: string
    updatedat?: Date | string | null
    isactive: boolean
  }

  export type apiclientCreateOrConnectWithoutUpdateduserInput = {
    where: apiclientWhereUniqueInput
    create: XOR<apiclientCreateWithoutUpdateduserInput, apiclientUncheckedCreateWithoutUpdateduserInput>
  }

  export type apiclientCreateManyUpdateduserInputEnvelope = {
    data: apiclientCreateManyUpdateduserInput | apiclientCreateManyUpdateduserInput[]
    skipDuplicates?: boolean
  }

  export type permissionCreateWithoutCreateduserInput = {
    id?: string
    name: string
    value: string
    group: string
    description: string
    createdat?: Date | string
    updatedat?: Date | string | null
    updateduser?: userCreateNestedOneWithoutUpdatedpermissionsInput
    rolepermissions?: rolepermissionCreateNestedManyWithoutPermissionInput
    userpermissions?: userpermissionCreateNestedManyWithoutPermissionInput
  }

  export type permissionUncheckedCreateWithoutCreateduserInput = {
    id?: string
    name: string
    value: string
    group: string
    description: string
    createdat?: Date | string
    updatedby?: string | null
    updatedat?: Date | string | null
    rolepermissions?: rolepermissionUncheckedCreateNestedManyWithoutPermissionInput
    userpermissions?: userpermissionUncheckedCreateNestedManyWithoutPermissionInput
  }

  export type permissionCreateOrConnectWithoutCreateduserInput = {
    where: permissionWhereUniqueInput
    create: XOR<permissionCreateWithoutCreateduserInput, permissionUncheckedCreateWithoutCreateduserInput>
  }

  export type permissionCreateManyCreateduserInputEnvelope = {
    data: permissionCreateManyCreateduserInput | permissionCreateManyCreateduserInput[]
    skipDuplicates?: boolean
  }

  export type permissionCreateWithoutUpdateduserInput = {
    id?: string
    name: string
    value: string
    group: string
    description: string
    createdat?: Date | string
    updatedat?: Date | string | null
    createduser: userCreateNestedOneWithoutCreatedpermissionsInput
    rolepermissions?: rolepermissionCreateNestedManyWithoutPermissionInput
    userpermissions?: userpermissionCreateNestedManyWithoutPermissionInput
  }

  export type permissionUncheckedCreateWithoutUpdateduserInput = {
    id?: string
    name: string
    value: string
    group: string
    description: string
    createdby: string
    createdat?: Date | string
    updatedat?: Date | string | null
    rolepermissions?: rolepermissionUncheckedCreateNestedManyWithoutPermissionInput
    userpermissions?: userpermissionUncheckedCreateNestedManyWithoutPermissionInput
  }

  export type permissionCreateOrConnectWithoutUpdateduserInput = {
    where: permissionWhereUniqueInput
    create: XOR<permissionCreateWithoutUpdateduserInput, permissionUncheckedCreateWithoutUpdateduserInput>
  }

  export type permissionCreateManyUpdateduserInputEnvelope = {
    data: permissionCreateManyUpdateduserInput | permissionCreateManyUpdateduserInput[]
    skipDuplicates?: boolean
  }

  export type refreshtokenCreateWithoutUserInput = {
    id?: string
    token: string
    createdat?: Date | string
    updatedat?: Date | string | null
    expiresat?: Date | string | null
  }

  export type refreshtokenUncheckedCreateWithoutUserInput = {
    id?: string
    token: string
    createdat?: Date | string
    updatedat?: Date | string | null
    expiresat?: Date | string | null
  }

  export type refreshtokenCreateOrConnectWithoutUserInput = {
    where: refreshtokenWhereUniqueInput
    create: XOR<refreshtokenCreateWithoutUserInput, refreshtokenUncheckedCreateWithoutUserInput>
  }

  export type refreshtokenCreateManyUserInputEnvelope = {
    data: refreshtokenCreateManyUserInput | refreshtokenCreateManyUserInput[]
    skipDuplicates?: boolean
  }

  export type roleCreateWithoutCreateduserInput = {
    id?: string
    name: string
    createdat?: Date | string
    updatedat?: Date | string | null
    issystemrole?: boolean
    updateduser?: userCreateNestedOneWithoutUpdatedrolesInput
    rolepermissions?: rolepermissionCreateNestedManyWithoutRoleInput
    userroles?: userroleCreateNestedManyWithoutRoleInput
  }

  export type roleUncheckedCreateWithoutCreateduserInput = {
    id?: string
    name: string
    createdat?: Date | string
    updatedby?: string | null
    updatedat?: Date | string | null
    issystemrole?: boolean
    rolepermissions?: rolepermissionUncheckedCreateNestedManyWithoutRoleInput
    userroles?: userroleUncheckedCreateNestedManyWithoutRoleInput
  }

  export type roleCreateOrConnectWithoutCreateduserInput = {
    where: roleWhereUniqueInput
    create: XOR<roleCreateWithoutCreateduserInput, roleUncheckedCreateWithoutCreateduserInput>
  }

  export type roleCreateManyCreateduserInputEnvelope = {
    data: roleCreateManyCreateduserInput | roleCreateManyCreateduserInput[]
    skipDuplicates?: boolean
  }

  export type roleCreateWithoutUpdateduserInput = {
    id?: string
    name: string
    createdat?: Date | string
    updatedat?: Date | string | null
    issystemrole?: boolean
    createduser: userCreateNestedOneWithoutCreatedrolesInput
    rolepermissions?: rolepermissionCreateNestedManyWithoutRoleInput
    userroles?: userroleCreateNestedManyWithoutRoleInput
  }

  export type roleUncheckedCreateWithoutUpdateduserInput = {
    id?: string
    name: string
    createdby: string
    createdat?: Date | string
    updatedat?: Date | string | null
    issystemrole?: boolean
    rolepermissions?: rolepermissionUncheckedCreateNestedManyWithoutRoleInput
    userroles?: userroleUncheckedCreateNestedManyWithoutRoleInput
  }

  export type roleCreateOrConnectWithoutUpdateduserInput = {
    where: roleWhereUniqueInput
    create: XOR<roleCreateWithoutUpdateduserInput, roleUncheckedCreateWithoutUpdateduserInput>
  }

  export type roleCreateManyUpdateduserInputEnvelope = {
    data: roleCreateManyUpdateduserInput | roleCreateManyUpdateduserInput[]
    skipDuplicates?: boolean
  }

  export type rolepermissionCreateWithoutCreateduserInput = {
    id?: string
    createdat?: Date | string
    updatedat?: Date | string | null
    permission: permissionCreateNestedOneWithoutRolepermissionsInput
    role: roleCreateNestedOneWithoutRolepermissionsInput
    updateduser?: userCreateNestedOneWithoutUpdatedrolepermissionsInput
  }

  export type rolepermissionUncheckedCreateWithoutCreateduserInput = {
    id?: string
    roleid: string
    permissionid: string
    createdat?: Date | string
    updatedby?: string | null
    updatedat?: Date | string | null
  }

  export type rolepermissionCreateOrConnectWithoutCreateduserInput = {
    where: rolepermissionWhereUniqueInput
    create: XOR<rolepermissionCreateWithoutCreateduserInput, rolepermissionUncheckedCreateWithoutCreateduserInput>
  }

  export type rolepermissionCreateManyCreateduserInputEnvelope = {
    data: rolepermissionCreateManyCreateduserInput | rolepermissionCreateManyCreateduserInput[]
    skipDuplicates?: boolean
  }

  export type rolepermissionCreateWithoutUpdateduserInput = {
    id?: string
    createdat?: Date | string
    updatedat?: Date | string | null
    createduser: userCreateNestedOneWithoutCreatedrolepermissionsInput
    permission: permissionCreateNestedOneWithoutRolepermissionsInput
    role: roleCreateNestedOneWithoutRolepermissionsInput
  }

  export type rolepermissionUncheckedCreateWithoutUpdateduserInput = {
    id?: string
    roleid: string
    permissionid: string
    createdat?: Date | string
    createdby: string
    updatedat?: Date | string | null
  }

  export type rolepermissionCreateOrConnectWithoutUpdateduserInput = {
    where: rolepermissionWhereUniqueInput
    create: XOR<rolepermissionCreateWithoutUpdateduserInput, rolepermissionUncheckedCreateWithoutUpdateduserInput>
  }

  export type rolepermissionCreateManyUpdateduserInputEnvelope = {
    data: rolepermissionCreateManyUpdateduserInput | rolepermissionCreateManyUpdateduserInput[]
    skipDuplicates?: boolean
  }

  export type userCreateWithoutCreatedusersInput = {
    id?: string
    firstname: string
    lastname: string
    phone?: string | null
    email: string
    password: string
    appLanguage?: string | null
    learningLanguage?: string | null
    learningLevel?: string | null
    theme?: string | null
    avatar?: string | null
    createdat?: Date | string
    updatedat?: Date | string | null
    status?: number
    lastentranceat?: Date | string | null
    lastexitat?: Date | string | null
    lastloginat?: Date | string | null
    stripeCustomerId?: string | null
    notificationuser?: notificationCreateNestedManyWithoutToInput
    createdapiclients?: apiclientCreateNestedManyWithoutCreateduserInput
    updatedapiclients?: apiclientCreateNestedManyWithoutUpdateduserInput
    createdpermissions?: permissionCreateNestedManyWithoutCreateduserInput
    updatedpermissions?: permissionCreateNestedManyWithoutUpdateduserInput
    refreshtokens?: refreshtokenCreateNestedManyWithoutUserInput
    createdroles?: roleCreateNestedManyWithoutCreateduserInput
    updatedroles?: roleCreateNestedManyWithoutUpdateduserInput
    createdrolepermissions?: rolepermissionCreateNestedManyWithoutCreateduserInput
    updatedrolepermissions?: rolepermissionCreateNestedManyWithoutUpdateduserInput
    createduser: userCreateNestedOneWithoutCreatedusersInput
    updateduser?: userCreateNestedOneWithoutUpdatedusersInput
    updatedusers?: userCreateNestedManyWithoutUpdateduserInput
    createduserpermissions?: userpermissionCreateNestedManyWithoutCreateduserInput
    updateduserpermissions?: userpermissionCreateNestedManyWithoutUpdateduserInput
    userpermissions?: userpermissionCreateNestedManyWithoutUserInput
    createduserroles?: userroleCreateNestedManyWithoutCreateduserInput
    updateduserroles?: userroleCreateNestedManyWithoutUpdateduserInput
    userroles?: userroleCreateNestedManyWithoutUserInput
    language?: languagesCreateNestedManyWithoutUserInput
    learningProgress?: learningProgressCreateNestedManyWithoutUserInput
    chats?: chatCreateNestedManyWithoutUserInput
    chatRooms?: chatRoomCreateNestedManyWithoutUserInput
    subscriptions?: subscriptionCreateNestedManyWithoutUserInput
  }

  export type userUncheckedCreateWithoutCreatedusersInput = {
    id?: string
    firstname: string
    lastname: string
    phone?: string | null
    email: string
    password: string
    appLanguage?: string | null
    learningLanguage?: string | null
    learningLevel?: string | null
    theme?: string | null
    avatar?: string | null
    createdby: string
    createdat?: Date | string
    updatedby?: string | null
    updatedat?: Date | string | null
    status?: number
    lastentranceat?: Date | string | null
    lastexitat?: Date | string | null
    lastloginat?: Date | string | null
    stripeCustomerId?: string | null
    notificationuser?: notificationUncheckedCreateNestedManyWithoutToInput
    createdapiclients?: apiclientUncheckedCreateNestedManyWithoutCreateduserInput
    updatedapiclients?: apiclientUncheckedCreateNestedManyWithoutUpdateduserInput
    createdpermissions?: permissionUncheckedCreateNestedManyWithoutCreateduserInput
    updatedpermissions?: permissionUncheckedCreateNestedManyWithoutUpdateduserInput
    refreshtokens?: refreshtokenUncheckedCreateNestedManyWithoutUserInput
    createdroles?: roleUncheckedCreateNestedManyWithoutCreateduserInput
    updatedroles?: roleUncheckedCreateNestedManyWithoutUpdateduserInput
    createdrolepermissions?: rolepermissionUncheckedCreateNestedManyWithoutCreateduserInput
    updatedrolepermissions?: rolepermissionUncheckedCreateNestedManyWithoutUpdateduserInput
    updatedusers?: userUncheckedCreateNestedManyWithoutUpdateduserInput
    createduserpermissions?: userpermissionUncheckedCreateNestedManyWithoutCreateduserInput
    updateduserpermissions?: userpermissionUncheckedCreateNestedManyWithoutUpdateduserInput
    userpermissions?: userpermissionUncheckedCreateNestedManyWithoutUserInput
    createduserroles?: userroleUncheckedCreateNestedManyWithoutCreateduserInput
    updateduserroles?: userroleUncheckedCreateNestedManyWithoutUpdateduserInput
    userroles?: userroleUncheckedCreateNestedManyWithoutUserInput
    language?: languagesUncheckedCreateNestedManyWithoutUserInput
    learningProgress?: learningProgressUncheckedCreateNestedManyWithoutUserInput
    chats?: chatUncheckedCreateNestedManyWithoutUserInput
    chatRooms?: chatRoomUncheckedCreateNestedManyWithoutUserInput
    subscriptions?: subscriptionUncheckedCreateNestedManyWithoutUserInput
  }

  export type userCreateOrConnectWithoutCreatedusersInput = {
    where: userWhereUniqueInput
    create: XOR<userCreateWithoutCreatedusersInput, userUncheckedCreateWithoutCreatedusersInput>
  }

  export type userCreateWithoutCreateduserInput = {
    id?: string
    firstname: string
    lastname: string
    phone?: string | null
    email: string
    password: string
    appLanguage?: string | null
    learningLanguage?: string | null
    learningLevel?: string | null
    theme?: string | null
    avatar?: string | null
    createdat?: Date | string
    updatedat?: Date | string | null
    status?: number
    lastentranceat?: Date | string | null
    lastexitat?: Date | string | null
    lastloginat?: Date | string | null
    stripeCustomerId?: string | null
    notificationuser?: notificationCreateNestedManyWithoutToInput
    createdapiclients?: apiclientCreateNestedManyWithoutCreateduserInput
    updatedapiclients?: apiclientCreateNestedManyWithoutUpdateduserInput
    createdpermissions?: permissionCreateNestedManyWithoutCreateduserInput
    updatedpermissions?: permissionCreateNestedManyWithoutUpdateduserInput
    refreshtokens?: refreshtokenCreateNestedManyWithoutUserInput
    createdroles?: roleCreateNestedManyWithoutCreateduserInput
    updatedroles?: roleCreateNestedManyWithoutUpdateduserInput
    createdrolepermissions?: rolepermissionCreateNestedManyWithoutCreateduserInput
    updatedrolepermissions?: rolepermissionCreateNestedManyWithoutUpdateduserInput
    createdusers?: userCreateNestedManyWithoutCreateduserInput
    updateduser?: userCreateNestedOneWithoutUpdatedusersInput
    updatedusers?: userCreateNestedManyWithoutUpdateduserInput
    createduserpermissions?: userpermissionCreateNestedManyWithoutCreateduserInput
    updateduserpermissions?: userpermissionCreateNestedManyWithoutUpdateduserInput
    userpermissions?: userpermissionCreateNestedManyWithoutUserInput
    createduserroles?: userroleCreateNestedManyWithoutCreateduserInput
    updateduserroles?: userroleCreateNestedManyWithoutUpdateduserInput
    userroles?: userroleCreateNestedManyWithoutUserInput
    language?: languagesCreateNestedManyWithoutUserInput
    learningProgress?: learningProgressCreateNestedManyWithoutUserInput
    chats?: chatCreateNestedManyWithoutUserInput
    chatRooms?: chatRoomCreateNestedManyWithoutUserInput
    subscriptions?: subscriptionCreateNestedManyWithoutUserInput
  }

  export type userUncheckedCreateWithoutCreateduserInput = {
    id?: string
    firstname: string
    lastname: string
    phone?: string | null
    email: string
    password: string
    appLanguage?: string | null
    learningLanguage?: string | null
    learningLevel?: string | null
    theme?: string | null
    avatar?: string | null
    createdat?: Date | string
    updatedby?: string | null
    updatedat?: Date | string | null
    status?: number
    lastentranceat?: Date | string | null
    lastexitat?: Date | string | null
    lastloginat?: Date | string | null
    stripeCustomerId?: string | null
    notificationuser?: notificationUncheckedCreateNestedManyWithoutToInput
    createdapiclients?: apiclientUncheckedCreateNestedManyWithoutCreateduserInput
    updatedapiclients?: apiclientUncheckedCreateNestedManyWithoutUpdateduserInput
    createdpermissions?: permissionUncheckedCreateNestedManyWithoutCreateduserInput
    updatedpermissions?: permissionUncheckedCreateNestedManyWithoutUpdateduserInput
    refreshtokens?: refreshtokenUncheckedCreateNestedManyWithoutUserInput
    createdroles?: roleUncheckedCreateNestedManyWithoutCreateduserInput
    updatedroles?: roleUncheckedCreateNestedManyWithoutUpdateduserInput
    createdrolepermissions?: rolepermissionUncheckedCreateNestedManyWithoutCreateduserInput
    updatedrolepermissions?: rolepermissionUncheckedCreateNestedManyWithoutUpdateduserInput
    createdusers?: userUncheckedCreateNestedManyWithoutCreateduserInput
    updatedusers?: userUncheckedCreateNestedManyWithoutUpdateduserInput
    createduserpermissions?: userpermissionUncheckedCreateNestedManyWithoutCreateduserInput
    updateduserpermissions?: userpermissionUncheckedCreateNestedManyWithoutUpdateduserInput
    userpermissions?: userpermissionUncheckedCreateNestedManyWithoutUserInput
    createduserroles?: userroleUncheckedCreateNestedManyWithoutCreateduserInput
    updateduserroles?: userroleUncheckedCreateNestedManyWithoutUpdateduserInput
    userroles?: userroleUncheckedCreateNestedManyWithoutUserInput
    language?: languagesUncheckedCreateNestedManyWithoutUserInput
    learningProgress?: learningProgressUncheckedCreateNestedManyWithoutUserInput
    chats?: chatUncheckedCreateNestedManyWithoutUserInput
    chatRooms?: chatRoomUncheckedCreateNestedManyWithoutUserInput
    subscriptions?: subscriptionUncheckedCreateNestedManyWithoutUserInput
  }

  export type userCreateOrConnectWithoutCreateduserInput = {
    where: userWhereUniqueInput
    create: XOR<userCreateWithoutCreateduserInput, userUncheckedCreateWithoutCreateduserInput>
  }

  export type userCreateManyCreateduserInputEnvelope = {
    data: userCreateManyCreateduserInput | userCreateManyCreateduserInput[]
    skipDuplicates?: boolean
  }

  export type userCreateWithoutUpdatedusersInput = {
    id?: string
    firstname: string
    lastname: string
    phone?: string | null
    email: string
    password: string
    appLanguage?: string | null
    learningLanguage?: string | null
    learningLevel?: string | null
    theme?: string | null
    avatar?: string | null
    createdat?: Date | string
    updatedat?: Date | string | null
    status?: number
    lastentranceat?: Date | string | null
    lastexitat?: Date | string | null
    lastloginat?: Date | string | null
    stripeCustomerId?: string | null
    notificationuser?: notificationCreateNestedManyWithoutToInput
    createdapiclients?: apiclientCreateNestedManyWithoutCreateduserInput
    updatedapiclients?: apiclientCreateNestedManyWithoutUpdateduserInput
    createdpermissions?: permissionCreateNestedManyWithoutCreateduserInput
    updatedpermissions?: permissionCreateNestedManyWithoutUpdateduserInput
    refreshtokens?: refreshtokenCreateNestedManyWithoutUserInput
    createdroles?: roleCreateNestedManyWithoutCreateduserInput
    updatedroles?: roleCreateNestedManyWithoutUpdateduserInput
    createdrolepermissions?: rolepermissionCreateNestedManyWithoutCreateduserInput
    updatedrolepermissions?: rolepermissionCreateNestedManyWithoutUpdateduserInput
    createduser: userCreateNestedOneWithoutCreatedusersInput
    createdusers?: userCreateNestedManyWithoutCreateduserInput
    updateduser?: userCreateNestedOneWithoutUpdatedusersInput
    createduserpermissions?: userpermissionCreateNestedManyWithoutCreateduserInput
    updateduserpermissions?: userpermissionCreateNestedManyWithoutUpdateduserInput
    userpermissions?: userpermissionCreateNestedManyWithoutUserInput
    createduserroles?: userroleCreateNestedManyWithoutCreateduserInput
    updateduserroles?: userroleCreateNestedManyWithoutUpdateduserInput
    userroles?: userroleCreateNestedManyWithoutUserInput
    language?: languagesCreateNestedManyWithoutUserInput
    learningProgress?: learningProgressCreateNestedManyWithoutUserInput
    chats?: chatCreateNestedManyWithoutUserInput
    chatRooms?: chatRoomCreateNestedManyWithoutUserInput
    subscriptions?: subscriptionCreateNestedManyWithoutUserInput
  }

  export type userUncheckedCreateWithoutUpdatedusersInput = {
    id?: string
    firstname: string
    lastname: string
    phone?: string | null
    email: string
    password: string
    appLanguage?: string | null
    learningLanguage?: string | null
    learningLevel?: string | null
    theme?: string | null
    avatar?: string | null
    createdby: string
    createdat?: Date | string
    updatedby?: string | null
    updatedat?: Date | string | null
    status?: number
    lastentranceat?: Date | string | null
    lastexitat?: Date | string | null
    lastloginat?: Date | string | null
    stripeCustomerId?: string | null
    notificationuser?: notificationUncheckedCreateNestedManyWithoutToInput
    createdapiclients?: apiclientUncheckedCreateNestedManyWithoutCreateduserInput
    updatedapiclients?: apiclientUncheckedCreateNestedManyWithoutUpdateduserInput
    createdpermissions?: permissionUncheckedCreateNestedManyWithoutCreateduserInput
    updatedpermissions?: permissionUncheckedCreateNestedManyWithoutUpdateduserInput
    refreshtokens?: refreshtokenUncheckedCreateNestedManyWithoutUserInput
    createdroles?: roleUncheckedCreateNestedManyWithoutCreateduserInput
    updatedroles?: roleUncheckedCreateNestedManyWithoutUpdateduserInput
    createdrolepermissions?: rolepermissionUncheckedCreateNestedManyWithoutCreateduserInput
    updatedrolepermissions?: rolepermissionUncheckedCreateNestedManyWithoutUpdateduserInput
    createdusers?: userUncheckedCreateNestedManyWithoutCreateduserInput
    createduserpermissions?: userpermissionUncheckedCreateNestedManyWithoutCreateduserInput
    updateduserpermissions?: userpermissionUncheckedCreateNestedManyWithoutUpdateduserInput
    userpermissions?: userpermissionUncheckedCreateNestedManyWithoutUserInput
    createduserroles?: userroleUncheckedCreateNestedManyWithoutCreateduserInput
    updateduserroles?: userroleUncheckedCreateNestedManyWithoutUpdateduserInput
    userroles?: userroleUncheckedCreateNestedManyWithoutUserInput
    language?: languagesUncheckedCreateNestedManyWithoutUserInput
    learningProgress?: learningProgressUncheckedCreateNestedManyWithoutUserInput
    chats?: chatUncheckedCreateNestedManyWithoutUserInput
    chatRooms?: chatRoomUncheckedCreateNestedManyWithoutUserInput
    subscriptions?: subscriptionUncheckedCreateNestedManyWithoutUserInput
  }

  export type userCreateOrConnectWithoutUpdatedusersInput = {
    where: userWhereUniqueInput
    create: XOR<userCreateWithoutUpdatedusersInput, userUncheckedCreateWithoutUpdatedusersInput>
  }

  export type userCreateWithoutUpdateduserInput = {
    id?: string
    firstname: string
    lastname: string
    phone?: string | null
    email: string
    password: string
    appLanguage?: string | null
    learningLanguage?: string | null
    learningLevel?: string | null
    theme?: string | null
    avatar?: string | null
    createdat?: Date | string
    updatedat?: Date | string | null
    status?: number
    lastentranceat?: Date | string | null
    lastexitat?: Date | string | null
    lastloginat?: Date | string | null
    stripeCustomerId?: string | null
    notificationuser?: notificationCreateNestedManyWithoutToInput
    createdapiclients?: apiclientCreateNestedManyWithoutCreateduserInput
    updatedapiclients?: apiclientCreateNestedManyWithoutUpdateduserInput
    createdpermissions?: permissionCreateNestedManyWithoutCreateduserInput
    updatedpermissions?: permissionCreateNestedManyWithoutUpdateduserInput
    refreshtokens?: refreshtokenCreateNestedManyWithoutUserInput
    createdroles?: roleCreateNestedManyWithoutCreateduserInput
    updatedroles?: roleCreateNestedManyWithoutUpdateduserInput
    createdrolepermissions?: rolepermissionCreateNestedManyWithoutCreateduserInput
    updatedrolepermissions?: rolepermissionCreateNestedManyWithoutUpdateduserInput
    createduser: userCreateNestedOneWithoutCreatedusersInput
    createdusers?: userCreateNestedManyWithoutCreateduserInput
    updatedusers?: userCreateNestedManyWithoutUpdateduserInput
    createduserpermissions?: userpermissionCreateNestedManyWithoutCreateduserInput
    updateduserpermissions?: userpermissionCreateNestedManyWithoutUpdateduserInput
    userpermissions?: userpermissionCreateNestedManyWithoutUserInput
    createduserroles?: userroleCreateNestedManyWithoutCreateduserInput
    updateduserroles?: userroleCreateNestedManyWithoutUpdateduserInput
    userroles?: userroleCreateNestedManyWithoutUserInput
    language?: languagesCreateNestedManyWithoutUserInput
    learningProgress?: learningProgressCreateNestedManyWithoutUserInput
    chats?: chatCreateNestedManyWithoutUserInput
    chatRooms?: chatRoomCreateNestedManyWithoutUserInput
    subscriptions?: subscriptionCreateNestedManyWithoutUserInput
  }

  export type userUncheckedCreateWithoutUpdateduserInput = {
    id?: string
    firstname: string
    lastname: string
    phone?: string | null
    email: string
    password: string
    appLanguage?: string | null
    learningLanguage?: string | null
    learningLevel?: string | null
    theme?: string | null
    avatar?: string | null
    createdby: string
    createdat?: Date | string
    updatedat?: Date | string | null
    status?: number
    lastentranceat?: Date | string | null
    lastexitat?: Date | string | null
    lastloginat?: Date | string | null
    stripeCustomerId?: string | null
    notificationuser?: notificationUncheckedCreateNestedManyWithoutToInput
    createdapiclients?: apiclientUncheckedCreateNestedManyWithoutCreateduserInput
    updatedapiclients?: apiclientUncheckedCreateNestedManyWithoutUpdateduserInput
    createdpermissions?: permissionUncheckedCreateNestedManyWithoutCreateduserInput
    updatedpermissions?: permissionUncheckedCreateNestedManyWithoutUpdateduserInput
    refreshtokens?: refreshtokenUncheckedCreateNestedManyWithoutUserInput
    createdroles?: roleUncheckedCreateNestedManyWithoutCreateduserInput
    updatedroles?: roleUncheckedCreateNestedManyWithoutUpdateduserInput
    createdrolepermissions?: rolepermissionUncheckedCreateNestedManyWithoutCreateduserInput
    updatedrolepermissions?: rolepermissionUncheckedCreateNestedManyWithoutUpdateduserInput
    createdusers?: userUncheckedCreateNestedManyWithoutCreateduserInput
    updatedusers?: userUncheckedCreateNestedManyWithoutUpdateduserInput
    createduserpermissions?: userpermissionUncheckedCreateNestedManyWithoutCreateduserInput
    updateduserpermissions?: userpermissionUncheckedCreateNestedManyWithoutUpdateduserInput
    userpermissions?: userpermissionUncheckedCreateNestedManyWithoutUserInput
    createduserroles?: userroleUncheckedCreateNestedManyWithoutCreateduserInput
    updateduserroles?: userroleUncheckedCreateNestedManyWithoutUpdateduserInput
    userroles?: userroleUncheckedCreateNestedManyWithoutUserInput
    language?: languagesUncheckedCreateNestedManyWithoutUserInput
    learningProgress?: learningProgressUncheckedCreateNestedManyWithoutUserInput
    chats?: chatUncheckedCreateNestedManyWithoutUserInput
    chatRooms?: chatRoomUncheckedCreateNestedManyWithoutUserInput
    subscriptions?: subscriptionUncheckedCreateNestedManyWithoutUserInput
  }

  export type userCreateOrConnectWithoutUpdateduserInput = {
    where: userWhereUniqueInput
    create: XOR<userCreateWithoutUpdateduserInput, userUncheckedCreateWithoutUpdateduserInput>
  }

  export type userCreateManyUpdateduserInputEnvelope = {
    data: userCreateManyUpdateduserInput | userCreateManyUpdateduserInput[]
    skipDuplicates?: boolean
  }

  export type userpermissionCreateWithoutCreateduserInput = {
    id?: string
    createdat?: Date | string
    updatedat?: Date | string | null
    permission: permissionCreateNestedOneWithoutUserpermissionsInput
    updateduser?: userCreateNestedOneWithoutUpdateduserpermissionsInput
    user: userCreateNestedOneWithoutUserpermissionsInput
  }

  export type userpermissionUncheckedCreateWithoutCreateduserInput = {
    id?: string
    userid: string
    permissionid: string
    createdat?: Date | string
    updatedby?: string | null
    updatedat?: Date | string | null
  }

  export type userpermissionCreateOrConnectWithoutCreateduserInput = {
    where: userpermissionWhereUniqueInput
    create: XOR<userpermissionCreateWithoutCreateduserInput, userpermissionUncheckedCreateWithoutCreateduserInput>
  }

  export type userpermissionCreateManyCreateduserInputEnvelope = {
    data: userpermissionCreateManyCreateduserInput | userpermissionCreateManyCreateduserInput[]
    skipDuplicates?: boolean
  }

  export type userpermissionCreateWithoutUpdateduserInput = {
    id?: string
    createdat?: Date | string
    updatedat?: Date | string | null
    createduser: userCreateNestedOneWithoutCreateduserpermissionsInput
    permission: permissionCreateNestedOneWithoutUserpermissionsInput
    user: userCreateNestedOneWithoutUserpermissionsInput
  }

  export type userpermissionUncheckedCreateWithoutUpdateduserInput = {
    id?: string
    userid: string
    permissionid: string
    createdby: string
    createdat?: Date | string
    updatedat?: Date | string | null
  }

  export type userpermissionCreateOrConnectWithoutUpdateduserInput = {
    where: userpermissionWhereUniqueInput
    create: XOR<userpermissionCreateWithoutUpdateduserInput, userpermissionUncheckedCreateWithoutUpdateduserInput>
  }

  export type userpermissionCreateManyUpdateduserInputEnvelope = {
    data: userpermissionCreateManyUpdateduserInput | userpermissionCreateManyUpdateduserInput[]
    skipDuplicates?: boolean
  }

  export type userpermissionCreateWithoutUserInput = {
    id?: string
    createdat?: Date | string
    updatedat?: Date | string | null
    createduser: userCreateNestedOneWithoutCreateduserpermissionsInput
    permission: permissionCreateNestedOneWithoutUserpermissionsInput
    updateduser?: userCreateNestedOneWithoutUpdateduserpermissionsInput
  }

  export type userpermissionUncheckedCreateWithoutUserInput = {
    id?: string
    permissionid: string
    createdby: string
    createdat?: Date | string
    updatedby?: string | null
    updatedat?: Date | string | null
  }

  export type userpermissionCreateOrConnectWithoutUserInput = {
    where: userpermissionWhereUniqueInput
    create: XOR<userpermissionCreateWithoutUserInput, userpermissionUncheckedCreateWithoutUserInput>
  }

  export type userpermissionCreateManyUserInputEnvelope = {
    data: userpermissionCreateManyUserInput | userpermissionCreateManyUserInput[]
    skipDuplicates?: boolean
  }

  export type userroleCreateWithoutCreateduserInput = {
    id?: string
    createdat?: Date | string
    updatedat?: Date | string | null
    role: roleCreateNestedOneWithoutUserrolesInput
    updateduser?: userCreateNestedOneWithoutUpdateduserrolesInput
    user: userCreateNestedOneWithoutUserrolesInput
  }

  export type userroleUncheckedCreateWithoutCreateduserInput = {
    id?: string
    userid: string
    roleid: string
    createdat?: Date | string
    updatedby?: string | null
    updatedat?: Date | string | null
  }

  export type userroleCreateOrConnectWithoutCreateduserInput = {
    where: userroleWhereUniqueInput
    create: XOR<userroleCreateWithoutCreateduserInput, userroleUncheckedCreateWithoutCreateduserInput>
  }

  export type userroleCreateManyCreateduserInputEnvelope = {
    data: userroleCreateManyCreateduserInput | userroleCreateManyCreateduserInput[]
    skipDuplicates?: boolean
  }

  export type userroleCreateWithoutUpdateduserInput = {
    id?: string
    createdat?: Date | string
    updatedat?: Date | string | null
    createduser: userCreateNestedOneWithoutCreateduserrolesInput
    role: roleCreateNestedOneWithoutUserrolesInput
    user: userCreateNestedOneWithoutUserrolesInput
  }

  export type userroleUncheckedCreateWithoutUpdateduserInput = {
    id?: string
    userid: string
    roleid: string
    createdby: string
    createdat?: Date | string
    updatedat?: Date | string | null
  }

  export type userroleCreateOrConnectWithoutUpdateduserInput = {
    where: userroleWhereUniqueInput
    create: XOR<userroleCreateWithoutUpdateduserInput, userroleUncheckedCreateWithoutUpdateduserInput>
  }

  export type userroleCreateManyUpdateduserInputEnvelope = {
    data: userroleCreateManyUpdateduserInput | userroleCreateManyUpdateduserInput[]
    skipDuplicates?: boolean
  }

  export type userroleCreateWithoutUserInput = {
    id?: string
    createdat?: Date | string
    updatedat?: Date | string | null
    createduser: userCreateNestedOneWithoutCreateduserrolesInput
    role: roleCreateNestedOneWithoutUserrolesInput
    updateduser?: userCreateNestedOneWithoutUpdateduserrolesInput
  }

  export type userroleUncheckedCreateWithoutUserInput = {
    id?: string
    roleid: string
    createdby: string
    createdat?: Date | string
    updatedby?: string | null
    updatedat?: Date | string | null
  }

  export type userroleCreateOrConnectWithoutUserInput = {
    where: userroleWhereUniqueInput
    create: XOR<userroleCreateWithoutUserInput, userroleUncheckedCreateWithoutUserInput>
  }

  export type userroleCreateManyUserInputEnvelope = {
    data: userroleCreateManyUserInput | userroleCreateManyUserInput[]
    skipDuplicates?: boolean
  }

  export type languagesCreateWithoutUserInput = {
    id?: string
    flag: string
    name: string
    code: string
    learningProgress?: learningProgressCreateNestedManyWithoutLanguageInput
  }

  export type languagesUncheckedCreateWithoutUserInput = {
    id?: string
    flag: string
    name: string
    code: string
    learningProgress?: learningProgressUncheckedCreateNestedManyWithoutLanguageInput
  }

  export type languagesCreateOrConnectWithoutUserInput = {
    where: languagesWhereUniqueInput
    create: XOR<languagesCreateWithoutUserInput, languagesUncheckedCreateWithoutUserInput>
  }

  export type learningProgressCreateWithoutUserInput = {
    id?: string
    progress?: number
    createdat?: Date | string
    updatedat?: Date | string | null
    language: languagesCreateNestedOneWithoutLearningProgressInput
  }

  export type learningProgressUncheckedCreateWithoutUserInput = {
    id?: string
    languageID: string
    progress?: number
    createdat?: Date | string
    updatedat?: Date | string | null
  }

  export type learningProgressCreateOrConnectWithoutUserInput = {
    where: learningProgressWhereUniqueInput
    create: XOR<learningProgressCreateWithoutUserInput, learningProgressUncheckedCreateWithoutUserInput>
  }

  export type learningProgressCreateManyUserInputEnvelope = {
    data: learningProgressCreateManyUserInput | learningProgressCreateManyUserInput[]
    skipDuplicates?: boolean
  }

  export type chatCreateWithoutUserInput = {
    id?: string
    message: string
    role?: string
    createdAt?: Date | string
    updatedAt?: Date | string | null
    room: chatRoomCreateNestedOneWithoutMessagesInput
  }

  export type chatUncheckedCreateWithoutUserInput = {
    id?: string
    roomId: string
    message: string
    role?: string
    createdAt?: Date | string
    updatedAt?: Date | string | null
  }

  export type chatCreateOrConnectWithoutUserInput = {
    where: chatWhereUniqueInput
    create: XOR<chatCreateWithoutUserInput, chatUncheckedCreateWithoutUserInput>
  }

  export type chatCreateManyUserInputEnvelope = {
    data: chatCreateManyUserInput | chatCreateManyUserInput[]
    skipDuplicates?: boolean
  }

  export type chatRoomCreateWithoutUserInput = {
    id?: string
    title?: string
    language: string
    createdAt?: Date | string
    updatedAt?: Date | string | null
    messages?: chatCreateNestedManyWithoutRoomInput
  }

  export type chatRoomUncheckedCreateWithoutUserInput = {
    id?: string
    title?: string
    language: string
    createdAt?: Date | string
    updatedAt?: Date | string | null
    messages?: chatUncheckedCreateNestedManyWithoutRoomInput
  }

  export type chatRoomCreateOrConnectWithoutUserInput = {
    where: chatRoomWhereUniqueInput
    create: XOR<chatRoomCreateWithoutUserInput, chatRoomUncheckedCreateWithoutUserInput>
  }

  export type chatRoomCreateManyUserInputEnvelope = {
    data: chatRoomCreateManyUserInput | chatRoomCreateManyUserInput[]
    skipDuplicates?: boolean
  }

  export type subscriptionCreateWithoutUserInput = {
    id?: string
    startDate?: Date | string
    endDate: Date | string
    status?: $Enums.SubscriptionStatus
    lastPaymentStatus?: string | null
    stripeCustomerId?: string | null
    stripePaymentId?: string | null
    stripePriceId?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    package: packagesCreateNestedOneWithoutSubscriptionsInput
  }

  export type subscriptionUncheckedCreateWithoutUserInput = {
    id?: string
    packageId: string
    startDate?: Date | string
    endDate: Date | string
    status?: $Enums.SubscriptionStatus
    lastPaymentStatus?: string | null
    stripeCustomerId?: string | null
    stripePaymentId?: string | null
    stripePriceId?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type subscriptionCreateOrConnectWithoutUserInput = {
    where: subscriptionWhereUniqueInput
    create: XOR<subscriptionCreateWithoutUserInput, subscriptionUncheckedCreateWithoutUserInput>
  }

  export type subscriptionCreateManyUserInputEnvelope = {
    data: subscriptionCreateManyUserInput | subscriptionCreateManyUserInput[]
    skipDuplicates?: boolean
  }

  export type notificationUpsertWithWhereUniqueWithoutToInput = {
    where: notificationWhereUniqueInput
    update: XOR<notificationUpdateWithoutToInput, notificationUncheckedUpdateWithoutToInput>
    create: XOR<notificationCreateWithoutToInput, notificationUncheckedCreateWithoutToInput>
  }

  export type notificationUpdateWithWhereUniqueWithoutToInput = {
    where: notificationWhereUniqueInput
    data: XOR<notificationUpdateWithoutToInput, notificationUncheckedUpdateWithoutToInput>
  }

  export type notificationUpdateManyWithWhereWithoutToInput = {
    where: notificationScalarWhereInput
    data: XOR<notificationUpdateManyMutationInput, notificationUncheckedUpdateManyWithoutToInput>
  }

  export type notificationScalarWhereInput = {
    AND?: notificationScalarWhereInput | notificationScalarWhereInput[]
    OR?: notificationScalarWhereInput[]
    NOT?: notificationScalarWhereInput | notificationScalarWhereInput[]
    id?: StringFilter<"notification"> | string
    touserid?: StringFilter<"notification"> | string
    message?: StringFilter<"notification"> | string
    url?: StringFilter<"notification"> | string
    createdby?: IntFilter<"notification"> | number
    createdat?: DateTimeFilter<"notification"> | Date | string
    readedat?: DateTimeNullableFilter<"notification"> | Date | string | null
  }

  export type apiclientUpsertWithWhereUniqueWithoutCreateduserInput = {
    where: apiclientWhereUniqueInput
    update: XOR<apiclientUpdateWithoutCreateduserInput, apiclientUncheckedUpdateWithoutCreateduserInput>
    create: XOR<apiclientCreateWithoutCreateduserInput, apiclientUncheckedCreateWithoutCreateduserInput>
  }

  export type apiclientUpdateWithWhereUniqueWithoutCreateduserInput = {
    where: apiclientWhereUniqueInput
    data: XOR<apiclientUpdateWithoutCreateduserInput, apiclientUncheckedUpdateWithoutCreateduserInput>
  }

  export type apiclientUpdateManyWithWhereWithoutCreateduserInput = {
    where: apiclientScalarWhereInput
    data: XOR<apiclientUpdateManyMutationInput, apiclientUncheckedUpdateManyWithoutCreateduserInput>
  }

  export type apiclientScalarWhereInput = {
    AND?: apiclientScalarWhereInput | apiclientScalarWhereInput[]
    OR?: apiclientScalarWhereInput[]
    NOT?: apiclientScalarWhereInput | apiclientScalarWhereInput[]
    id?: StringFilter<"apiclient"> | string
    name?: StringFilter<"apiclient"> | string
    key?: StringFilter<"apiclient"> | string
    secret?: StringFilter<"apiclient"> | string
    type?: IntFilter<"apiclient"> | number
    createdat?: DateTimeFilter<"apiclient"> | Date | string
    createdby?: StringFilter<"apiclient"> | string
    updatedat?: DateTimeNullableFilter<"apiclient"> | Date | string | null
    updatedby?: StringNullableFilter<"apiclient"> | string | null
    isactive?: BoolFilter<"apiclient"> | boolean
  }

  export type apiclientUpsertWithWhereUniqueWithoutUpdateduserInput = {
    where: apiclientWhereUniqueInput
    update: XOR<apiclientUpdateWithoutUpdateduserInput, apiclientUncheckedUpdateWithoutUpdateduserInput>
    create: XOR<apiclientCreateWithoutUpdateduserInput, apiclientUncheckedCreateWithoutUpdateduserInput>
  }

  export type apiclientUpdateWithWhereUniqueWithoutUpdateduserInput = {
    where: apiclientWhereUniqueInput
    data: XOR<apiclientUpdateWithoutUpdateduserInput, apiclientUncheckedUpdateWithoutUpdateduserInput>
  }

  export type apiclientUpdateManyWithWhereWithoutUpdateduserInput = {
    where: apiclientScalarWhereInput
    data: XOR<apiclientUpdateManyMutationInput, apiclientUncheckedUpdateManyWithoutUpdateduserInput>
  }

  export type permissionUpsertWithWhereUniqueWithoutCreateduserInput = {
    where: permissionWhereUniqueInput
    update: XOR<permissionUpdateWithoutCreateduserInput, permissionUncheckedUpdateWithoutCreateduserInput>
    create: XOR<permissionCreateWithoutCreateduserInput, permissionUncheckedCreateWithoutCreateduserInput>
  }

  export type permissionUpdateWithWhereUniqueWithoutCreateduserInput = {
    where: permissionWhereUniqueInput
    data: XOR<permissionUpdateWithoutCreateduserInput, permissionUncheckedUpdateWithoutCreateduserInput>
  }

  export type permissionUpdateManyWithWhereWithoutCreateduserInput = {
    where: permissionScalarWhereInput
    data: XOR<permissionUpdateManyMutationInput, permissionUncheckedUpdateManyWithoutCreateduserInput>
  }

  export type permissionScalarWhereInput = {
    AND?: permissionScalarWhereInput | permissionScalarWhereInput[]
    OR?: permissionScalarWhereInput[]
    NOT?: permissionScalarWhereInput | permissionScalarWhereInput[]
    id?: StringFilter<"permission"> | string
    name?: StringFilter<"permission"> | string
    value?: StringFilter<"permission"> | string
    group?: StringFilter<"permission"> | string
    description?: StringFilter<"permission"> | string
    createdby?: StringFilter<"permission"> | string
    createdat?: DateTimeFilter<"permission"> | Date | string
    updatedby?: StringNullableFilter<"permission"> | string | null
    updatedat?: DateTimeNullableFilter<"permission"> | Date | string | null
  }

  export type permissionUpsertWithWhereUniqueWithoutUpdateduserInput = {
    where: permissionWhereUniqueInput
    update: XOR<permissionUpdateWithoutUpdateduserInput, permissionUncheckedUpdateWithoutUpdateduserInput>
    create: XOR<permissionCreateWithoutUpdateduserInput, permissionUncheckedCreateWithoutUpdateduserInput>
  }

  export type permissionUpdateWithWhereUniqueWithoutUpdateduserInput = {
    where: permissionWhereUniqueInput
    data: XOR<permissionUpdateWithoutUpdateduserInput, permissionUncheckedUpdateWithoutUpdateduserInput>
  }

  export type permissionUpdateManyWithWhereWithoutUpdateduserInput = {
    where: permissionScalarWhereInput
    data: XOR<permissionUpdateManyMutationInput, permissionUncheckedUpdateManyWithoutUpdateduserInput>
  }

  export type refreshtokenUpsertWithWhereUniqueWithoutUserInput = {
    where: refreshtokenWhereUniqueInput
    update: XOR<refreshtokenUpdateWithoutUserInput, refreshtokenUncheckedUpdateWithoutUserInput>
    create: XOR<refreshtokenCreateWithoutUserInput, refreshtokenUncheckedCreateWithoutUserInput>
  }

  export type refreshtokenUpdateWithWhereUniqueWithoutUserInput = {
    where: refreshtokenWhereUniqueInput
    data: XOR<refreshtokenUpdateWithoutUserInput, refreshtokenUncheckedUpdateWithoutUserInput>
  }

  export type refreshtokenUpdateManyWithWhereWithoutUserInput = {
    where: refreshtokenScalarWhereInput
    data: XOR<refreshtokenUpdateManyMutationInput, refreshtokenUncheckedUpdateManyWithoutUserInput>
  }

  export type refreshtokenScalarWhereInput = {
    AND?: refreshtokenScalarWhereInput | refreshtokenScalarWhereInput[]
    OR?: refreshtokenScalarWhereInput[]
    NOT?: refreshtokenScalarWhereInput | refreshtokenScalarWhereInput[]
    id?: StringFilter<"refreshtoken"> | string
    userid?: StringFilter<"refreshtoken"> | string
    token?: StringFilter<"refreshtoken"> | string
    createdat?: DateTimeFilter<"refreshtoken"> | Date | string
    updatedat?: DateTimeNullableFilter<"refreshtoken"> | Date | string | null
    expiresat?: DateTimeNullableFilter<"refreshtoken"> | Date | string | null
  }

  export type roleUpsertWithWhereUniqueWithoutCreateduserInput = {
    where: roleWhereUniqueInput
    update: XOR<roleUpdateWithoutCreateduserInput, roleUncheckedUpdateWithoutCreateduserInput>
    create: XOR<roleCreateWithoutCreateduserInput, roleUncheckedCreateWithoutCreateduserInput>
  }

  export type roleUpdateWithWhereUniqueWithoutCreateduserInput = {
    where: roleWhereUniqueInput
    data: XOR<roleUpdateWithoutCreateduserInput, roleUncheckedUpdateWithoutCreateduserInput>
  }

  export type roleUpdateManyWithWhereWithoutCreateduserInput = {
    where: roleScalarWhereInput
    data: XOR<roleUpdateManyMutationInput, roleUncheckedUpdateManyWithoutCreateduserInput>
  }

  export type roleScalarWhereInput = {
    AND?: roleScalarWhereInput | roleScalarWhereInput[]
    OR?: roleScalarWhereInput[]
    NOT?: roleScalarWhereInput | roleScalarWhereInput[]
    id?: StringFilter<"role"> | string
    name?: StringFilter<"role"> | string
    createdby?: StringFilter<"role"> | string
    createdat?: DateTimeFilter<"role"> | Date | string
    updatedby?: StringNullableFilter<"role"> | string | null
    updatedat?: DateTimeNullableFilter<"role"> | Date | string | null
    issystemrole?: BoolFilter<"role"> | boolean
  }

  export type roleUpsertWithWhereUniqueWithoutUpdateduserInput = {
    where: roleWhereUniqueInput
    update: XOR<roleUpdateWithoutUpdateduserInput, roleUncheckedUpdateWithoutUpdateduserInput>
    create: XOR<roleCreateWithoutUpdateduserInput, roleUncheckedCreateWithoutUpdateduserInput>
  }

  export type roleUpdateWithWhereUniqueWithoutUpdateduserInput = {
    where: roleWhereUniqueInput
    data: XOR<roleUpdateWithoutUpdateduserInput, roleUncheckedUpdateWithoutUpdateduserInput>
  }

  export type roleUpdateManyWithWhereWithoutUpdateduserInput = {
    where: roleScalarWhereInput
    data: XOR<roleUpdateManyMutationInput, roleUncheckedUpdateManyWithoutUpdateduserInput>
  }

  export type rolepermissionUpsertWithWhereUniqueWithoutCreateduserInput = {
    where: rolepermissionWhereUniqueInput
    update: XOR<rolepermissionUpdateWithoutCreateduserInput, rolepermissionUncheckedUpdateWithoutCreateduserInput>
    create: XOR<rolepermissionCreateWithoutCreateduserInput, rolepermissionUncheckedCreateWithoutCreateduserInput>
  }

  export type rolepermissionUpdateWithWhereUniqueWithoutCreateduserInput = {
    where: rolepermissionWhereUniqueInput
    data: XOR<rolepermissionUpdateWithoutCreateduserInput, rolepermissionUncheckedUpdateWithoutCreateduserInput>
  }

  export type rolepermissionUpdateManyWithWhereWithoutCreateduserInput = {
    where: rolepermissionScalarWhereInput
    data: XOR<rolepermissionUpdateManyMutationInput, rolepermissionUncheckedUpdateManyWithoutCreateduserInput>
  }

  export type rolepermissionUpsertWithWhereUniqueWithoutUpdateduserInput = {
    where: rolepermissionWhereUniqueInput
    update: XOR<rolepermissionUpdateWithoutUpdateduserInput, rolepermissionUncheckedUpdateWithoutUpdateduserInput>
    create: XOR<rolepermissionCreateWithoutUpdateduserInput, rolepermissionUncheckedCreateWithoutUpdateduserInput>
  }

  export type rolepermissionUpdateWithWhereUniqueWithoutUpdateduserInput = {
    where: rolepermissionWhereUniqueInput
    data: XOR<rolepermissionUpdateWithoutUpdateduserInput, rolepermissionUncheckedUpdateWithoutUpdateduserInput>
  }

  export type rolepermissionUpdateManyWithWhereWithoutUpdateduserInput = {
    where: rolepermissionScalarWhereInput
    data: XOR<rolepermissionUpdateManyMutationInput, rolepermissionUncheckedUpdateManyWithoutUpdateduserInput>
  }

  export type userUpsertWithoutCreatedusersInput = {
    update: XOR<userUpdateWithoutCreatedusersInput, userUncheckedUpdateWithoutCreatedusersInput>
    create: XOR<userCreateWithoutCreatedusersInput, userUncheckedCreateWithoutCreatedusersInput>
    where?: userWhereInput
  }

  export type userUpdateToOneWithWhereWithoutCreatedusersInput = {
    where?: userWhereInput
    data: XOR<userUpdateWithoutCreatedusersInput, userUncheckedUpdateWithoutCreatedusersInput>
  }

  export type userUpdateWithoutCreatedusersInput = {
    id?: StringFieldUpdateOperationsInput | string
    firstname?: StringFieldUpdateOperationsInput | string
    lastname?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    appLanguage?: NullableStringFieldUpdateOperationsInput | string | null
    learningLanguage?: NullableStringFieldUpdateOperationsInput | string | null
    learningLevel?: NullableStringFieldUpdateOperationsInput | string | null
    theme?: NullableStringFieldUpdateOperationsInput | string | null
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    createdat?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: IntFieldUpdateOperationsInput | number
    lastentranceat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastexitat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastloginat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    stripeCustomerId?: NullableStringFieldUpdateOperationsInput | string | null
    notificationuser?: notificationUpdateManyWithoutToNestedInput
    createdapiclients?: apiclientUpdateManyWithoutCreateduserNestedInput
    updatedapiclients?: apiclientUpdateManyWithoutUpdateduserNestedInput
    createdpermissions?: permissionUpdateManyWithoutCreateduserNestedInput
    updatedpermissions?: permissionUpdateManyWithoutUpdateduserNestedInput
    refreshtokens?: refreshtokenUpdateManyWithoutUserNestedInput
    createdroles?: roleUpdateManyWithoutCreateduserNestedInput
    updatedroles?: roleUpdateManyWithoutUpdateduserNestedInput
    createdrolepermissions?: rolepermissionUpdateManyWithoutCreateduserNestedInput
    updatedrolepermissions?: rolepermissionUpdateManyWithoutUpdateduserNestedInput
    createduser?: userUpdateOneRequiredWithoutCreatedusersNestedInput
    updateduser?: userUpdateOneWithoutUpdatedusersNestedInput
    updatedusers?: userUpdateManyWithoutUpdateduserNestedInput
    createduserpermissions?: userpermissionUpdateManyWithoutCreateduserNestedInput
    updateduserpermissions?: userpermissionUpdateManyWithoutUpdateduserNestedInput
    userpermissions?: userpermissionUpdateManyWithoutUserNestedInput
    createduserroles?: userroleUpdateManyWithoutCreateduserNestedInput
    updateduserroles?: userroleUpdateManyWithoutUpdateduserNestedInput
    userroles?: userroleUpdateManyWithoutUserNestedInput
    language?: languagesUpdateManyWithoutUserNestedInput
    learningProgress?: learningProgressUpdateManyWithoutUserNestedInput
    chats?: chatUpdateManyWithoutUserNestedInput
    chatRooms?: chatRoomUpdateManyWithoutUserNestedInput
    subscriptions?: subscriptionUpdateManyWithoutUserNestedInput
  }

  export type userUncheckedUpdateWithoutCreatedusersInput = {
    id?: StringFieldUpdateOperationsInput | string
    firstname?: StringFieldUpdateOperationsInput | string
    lastname?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    appLanguage?: NullableStringFieldUpdateOperationsInput | string | null
    learningLanguage?: NullableStringFieldUpdateOperationsInput | string | null
    learningLevel?: NullableStringFieldUpdateOperationsInput | string | null
    theme?: NullableStringFieldUpdateOperationsInput | string | null
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    createdby?: StringFieldUpdateOperationsInput | string
    createdat?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedby?: NullableStringFieldUpdateOperationsInput | string | null
    updatedat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: IntFieldUpdateOperationsInput | number
    lastentranceat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastexitat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastloginat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    stripeCustomerId?: NullableStringFieldUpdateOperationsInput | string | null
    notificationuser?: notificationUncheckedUpdateManyWithoutToNestedInput
    createdapiclients?: apiclientUncheckedUpdateManyWithoutCreateduserNestedInput
    updatedapiclients?: apiclientUncheckedUpdateManyWithoutUpdateduserNestedInput
    createdpermissions?: permissionUncheckedUpdateManyWithoutCreateduserNestedInput
    updatedpermissions?: permissionUncheckedUpdateManyWithoutUpdateduserNestedInput
    refreshtokens?: refreshtokenUncheckedUpdateManyWithoutUserNestedInput
    createdroles?: roleUncheckedUpdateManyWithoutCreateduserNestedInput
    updatedroles?: roleUncheckedUpdateManyWithoutUpdateduserNestedInput
    createdrolepermissions?: rolepermissionUncheckedUpdateManyWithoutCreateduserNestedInput
    updatedrolepermissions?: rolepermissionUncheckedUpdateManyWithoutUpdateduserNestedInput
    updatedusers?: userUncheckedUpdateManyWithoutUpdateduserNestedInput
    createduserpermissions?: userpermissionUncheckedUpdateManyWithoutCreateduserNestedInput
    updateduserpermissions?: userpermissionUncheckedUpdateManyWithoutUpdateduserNestedInput
    userpermissions?: userpermissionUncheckedUpdateManyWithoutUserNestedInput
    createduserroles?: userroleUncheckedUpdateManyWithoutCreateduserNestedInput
    updateduserroles?: userroleUncheckedUpdateManyWithoutUpdateduserNestedInput
    userroles?: userroleUncheckedUpdateManyWithoutUserNestedInput
    language?: languagesUncheckedUpdateManyWithoutUserNestedInput
    learningProgress?: learningProgressUncheckedUpdateManyWithoutUserNestedInput
    chats?: chatUncheckedUpdateManyWithoutUserNestedInput
    chatRooms?: chatRoomUncheckedUpdateManyWithoutUserNestedInput
    subscriptions?: subscriptionUncheckedUpdateManyWithoutUserNestedInput
  }

  export type userUpsertWithWhereUniqueWithoutCreateduserInput = {
    where: userWhereUniqueInput
    update: XOR<userUpdateWithoutCreateduserInput, userUncheckedUpdateWithoutCreateduserInput>
    create: XOR<userCreateWithoutCreateduserInput, userUncheckedCreateWithoutCreateduserInput>
  }

  export type userUpdateWithWhereUniqueWithoutCreateduserInput = {
    where: userWhereUniqueInput
    data: XOR<userUpdateWithoutCreateduserInput, userUncheckedUpdateWithoutCreateduserInput>
  }

  export type userUpdateManyWithWhereWithoutCreateduserInput = {
    where: userScalarWhereInput
    data: XOR<userUpdateManyMutationInput, userUncheckedUpdateManyWithoutCreateduserInput>
  }

  export type userUpsertWithoutUpdatedusersInput = {
    update: XOR<userUpdateWithoutUpdatedusersInput, userUncheckedUpdateWithoutUpdatedusersInput>
    create: XOR<userCreateWithoutUpdatedusersInput, userUncheckedCreateWithoutUpdatedusersInput>
    where?: userWhereInput
  }

  export type userUpdateToOneWithWhereWithoutUpdatedusersInput = {
    where?: userWhereInput
    data: XOR<userUpdateWithoutUpdatedusersInput, userUncheckedUpdateWithoutUpdatedusersInput>
  }

  export type userUpdateWithoutUpdatedusersInput = {
    id?: StringFieldUpdateOperationsInput | string
    firstname?: StringFieldUpdateOperationsInput | string
    lastname?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    appLanguage?: NullableStringFieldUpdateOperationsInput | string | null
    learningLanguage?: NullableStringFieldUpdateOperationsInput | string | null
    learningLevel?: NullableStringFieldUpdateOperationsInput | string | null
    theme?: NullableStringFieldUpdateOperationsInput | string | null
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    createdat?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: IntFieldUpdateOperationsInput | number
    lastentranceat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastexitat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastloginat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    stripeCustomerId?: NullableStringFieldUpdateOperationsInput | string | null
    notificationuser?: notificationUpdateManyWithoutToNestedInput
    createdapiclients?: apiclientUpdateManyWithoutCreateduserNestedInput
    updatedapiclients?: apiclientUpdateManyWithoutUpdateduserNestedInput
    createdpermissions?: permissionUpdateManyWithoutCreateduserNestedInput
    updatedpermissions?: permissionUpdateManyWithoutUpdateduserNestedInput
    refreshtokens?: refreshtokenUpdateManyWithoutUserNestedInput
    createdroles?: roleUpdateManyWithoutCreateduserNestedInput
    updatedroles?: roleUpdateManyWithoutUpdateduserNestedInput
    createdrolepermissions?: rolepermissionUpdateManyWithoutCreateduserNestedInput
    updatedrolepermissions?: rolepermissionUpdateManyWithoutUpdateduserNestedInput
    createduser?: userUpdateOneRequiredWithoutCreatedusersNestedInput
    createdusers?: userUpdateManyWithoutCreateduserNestedInput
    updateduser?: userUpdateOneWithoutUpdatedusersNestedInput
    createduserpermissions?: userpermissionUpdateManyWithoutCreateduserNestedInput
    updateduserpermissions?: userpermissionUpdateManyWithoutUpdateduserNestedInput
    userpermissions?: userpermissionUpdateManyWithoutUserNestedInput
    createduserroles?: userroleUpdateManyWithoutCreateduserNestedInput
    updateduserroles?: userroleUpdateManyWithoutUpdateduserNestedInput
    userroles?: userroleUpdateManyWithoutUserNestedInput
    language?: languagesUpdateManyWithoutUserNestedInput
    learningProgress?: learningProgressUpdateManyWithoutUserNestedInput
    chats?: chatUpdateManyWithoutUserNestedInput
    chatRooms?: chatRoomUpdateManyWithoutUserNestedInput
    subscriptions?: subscriptionUpdateManyWithoutUserNestedInput
  }

  export type userUncheckedUpdateWithoutUpdatedusersInput = {
    id?: StringFieldUpdateOperationsInput | string
    firstname?: StringFieldUpdateOperationsInput | string
    lastname?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    appLanguage?: NullableStringFieldUpdateOperationsInput | string | null
    learningLanguage?: NullableStringFieldUpdateOperationsInput | string | null
    learningLevel?: NullableStringFieldUpdateOperationsInput | string | null
    theme?: NullableStringFieldUpdateOperationsInput | string | null
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    createdby?: StringFieldUpdateOperationsInput | string
    createdat?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedby?: NullableStringFieldUpdateOperationsInput | string | null
    updatedat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: IntFieldUpdateOperationsInput | number
    lastentranceat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastexitat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastloginat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    stripeCustomerId?: NullableStringFieldUpdateOperationsInput | string | null
    notificationuser?: notificationUncheckedUpdateManyWithoutToNestedInput
    createdapiclients?: apiclientUncheckedUpdateManyWithoutCreateduserNestedInput
    updatedapiclients?: apiclientUncheckedUpdateManyWithoutUpdateduserNestedInput
    createdpermissions?: permissionUncheckedUpdateManyWithoutCreateduserNestedInput
    updatedpermissions?: permissionUncheckedUpdateManyWithoutUpdateduserNestedInput
    refreshtokens?: refreshtokenUncheckedUpdateManyWithoutUserNestedInput
    createdroles?: roleUncheckedUpdateManyWithoutCreateduserNestedInput
    updatedroles?: roleUncheckedUpdateManyWithoutUpdateduserNestedInput
    createdrolepermissions?: rolepermissionUncheckedUpdateManyWithoutCreateduserNestedInput
    updatedrolepermissions?: rolepermissionUncheckedUpdateManyWithoutUpdateduserNestedInput
    createdusers?: userUncheckedUpdateManyWithoutCreateduserNestedInput
    createduserpermissions?: userpermissionUncheckedUpdateManyWithoutCreateduserNestedInput
    updateduserpermissions?: userpermissionUncheckedUpdateManyWithoutUpdateduserNestedInput
    userpermissions?: userpermissionUncheckedUpdateManyWithoutUserNestedInput
    createduserroles?: userroleUncheckedUpdateManyWithoutCreateduserNestedInput
    updateduserroles?: userroleUncheckedUpdateManyWithoutUpdateduserNestedInput
    userroles?: userroleUncheckedUpdateManyWithoutUserNestedInput
    language?: languagesUncheckedUpdateManyWithoutUserNestedInput
    learningProgress?: learningProgressUncheckedUpdateManyWithoutUserNestedInput
    chats?: chatUncheckedUpdateManyWithoutUserNestedInput
    chatRooms?: chatRoomUncheckedUpdateManyWithoutUserNestedInput
    subscriptions?: subscriptionUncheckedUpdateManyWithoutUserNestedInput
  }

  export type userUpsertWithWhereUniqueWithoutUpdateduserInput = {
    where: userWhereUniqueInput
    update: XOR<userUpdateWithoutUpdateduserInput, userUncheckedUpdateWithoutUpdateduserInput>
    create: XOR<userCreateWithoutUpdateduserInput, userUncheckedCreateWithoutUpdateduserInput>
  }

  export type userUpdateWithWhereUniqueWithoutUpdateduserInput = {
    where: userWhereUniqueInput
    data: XOR<userUpdateWithoutUpdateduserInput, userUncheckedUpdateWithoutUpdateduserInput>
  }

  export type userUpdateManyWithWhereWithoutUpdateduserInput = {
    where: userScalarWhereInput
    data: XOR<userUpdateManyMutationInput, userUncheckedUpdateManyWithoutUpdateduserInput>
  }

  export type userpermissionUpsertWithWhereUniqueWithoutCreateduserInput = {
    where: userpermissionWhereUniqueInput
    update: XOR<userpermissionUpdateWithoutCreateduserInput, userpermissionUncheckedUpdateWithoutCreateduserInput>
    create: XOR<userpermissionCreateWithoutCreateduserInput, userpermissionUncheckedCreateWithoutCreateduserInput>
  }

  export type userpermissionUpdateWithWhereUniqueWithoutCreateduserInput = {
    where: userpermissionWhereUniqueInput
    data: XOR<userpermissionUpdateWithoutCreateduserInput, userpermissionUncheckedUpdateWithoutCreateduserInput>
  }

  export type userpermissionUpdateManyWithWhereWithoutCreateduserInput = {
    where: userpermissionScalarWhereInput
    data: XOR<userpermissionUpdateManyMutationInput, userpermissionUncheckedUpdateManyWithoutCreateduserInput>
  }

  export type userpermissionUpsertWithWhereUniqueWithoutUpdateduserInput = {
    where: userpermissionWhereUniqueInput
    update: XOR<userpermissionUpdateWithoutUpdateduserInput, userpermissionUncheckedUpdateWithoutUpdateduserInput>
    create: XOR<userpermissionCreateWithoutUpdateduserInput, userpermissionUncheckedCreateWithoutUpdateduserInput>
  }

  export type userpermissionUpdateWithWhereUniqueWithoutUpdateduserInput = {
    where: userpermissionWhereUniqueInput
    data: XOR<userpermissionUpdateWithoutUpdateduserInput, userpermissionUncheckedUpdateWithoutUpdateduserInput>
  }

  export type userpermissionUpdateManyWithWhereWithoutUpdateduserInput = {
    where: userpermissionScalarWhereInput
    data: XOR<userpermissionUpdateManyMutationInput, userpermissionUncheckedUpdateManyWithoutUpdateduserInput>
  }

  export type userpermissionUpsertWithWhereUniqueWithoutUserInput = {
    where: userpermissionWhereUniqueInput
    update: XOR<userpermissionUpdateWithoutUserInput, userpermissionUncheckedUpdateWithoutUserInput>
    create: XOR<userpermissionCreateWithoutUserInput, userpermissionUncheckedCreateWithoutUserInput>
  }

  export type userpermissionUpdateWithWhereUniqueWithoutUserInput = {
    where: userpermissionWhereUniqueInput
    data: XOR<userpermissionUpdateWithoutUserInput, userpermissionUncheckedUpdateWithoutUserInput>
  }

  export type userpermissionUpdateManyWithWhereWithoutUserInput = {
    where: userpermissionScalarWhereInput
    data: XOR<userpermissionUpdateManyMutationInput, userpermissionUncheckedUpdateManyWithoutUserInput>
  }

  export type userroleUpsertWithWhereUniqueWithoutCreateduserInput = {
    where: userroleWhereUniqueInput
    update: XOR<userroleUpdateWithoutCreateduserInput, userroleUncheckedUpdateWithoutCreateduserInput>
    create: XOR<userroleCreateWithoutCreateduserInput, userroleUncheckedCreateWithoutCreateduserInput>
  }

  export type userroleUpdateWithWhereUniqueWithoutCreateduserInput = {
    where: userroleWhereUniqueInput
    data: XOR<userroleUpdateWithoutCreateduserInput, userroleUncheckedUpdateWithoutCreateduserInput>
  }

  export type userroleUpdateManyWithWhereWithoutCreateduserInput = {
    where: userroleScalarWhereInput
    data: XOR<userroleUpdateManyMutationInput, userroleUncheckedUpdateManyWithoutCreateduserInput>
  }

  export type userroleUpsertWithWhereUniqueWithoutUpdateduserInput = {
    where: userroleWhereUniqueInput
    update: XOR<userroleUpdateWithoutUpdateduserInput, userroleUncheckedUpdateWithoutUpdateduserInput>
    create: XOR<userroleCreateWithoutUpdateduserInput, userroleUncheckedCreateWithoutUpdateduserInput>
  }

  export type userroleUpdateWithWhereUniqueWithoutUpdateduserInput = {
    where: userroleWhereUniqueInput
    data: XOR<userroleUpdateWithoutUpdateduserInput, userroleUncheckedUpdateWithoutUpdateduserInput>
  }

  export type userroleUpdateManyWithWhereWithoutUpdateduserInput = {
    where: userroleScalarWhereInput
    data: XOR<userroleUpdateManyMutationInput, userroleUncheckedUpdateManyWithoutUpdateduserInput>
  }

  export type userroleUpsertWithWhereUniqueWithoutUserInput = {
    where: userroleWhereUniqueInput
    update: XOR<userroleUpdateWithoutUserInput, userroleUncheckedUpdateWithoutUserInput>
    create: XOR<userroleCreateWithoutUserInput, userroleUncheckedCreateWithoutUserInput>
  }

  export type userroleUpdateWithWhereUniqueWithoutUserInput = {
    where: userroleWhereUniqueInput
    data: XOR<userroleUpdateWithoutUserInput, userroleUncheckedUpdateWithoutUserInput>
  }

  export type userroleUpdateManyWithWhereWithoutUserInput = {
    where: userroleScalarWhereInput
    data: XOR<userroleUpdateManyMutationInput, userroleUncheckedUpdateManyWithoutUserInput>
  }

  export type languagesUpsertWithWhereUniqueWithoutUserInput = {
    where: languagesWhereUniqueInput
    update: XOR<languagesUpdateWithoutUserInput, languagesUncheckedUpdateWithoutUserInput>
    create: XOR<languagesCreateWithoutUserInput, languagesUncheckedCreateWithoutUserInput>
  }

  export type languagesUpdateWithWhereUniqueWithoutUserInput = {
    where: languagesWhereUniqueInput
    data: XOR<languagesUpdateWithoutUserInput, languagesUncheckedUpdateWithoutUserInput>
  }

  export type languagesUpdateManyWithWhereWithoutUserInput = {
    where: languagesScalarWhereInput
    data: XOR<languagesUpdateManyMutationInput, languagesUncheckedUpdateManyWithoutUserInput>
  }

  export type languagesScalarWhereInput = {
    AND?: languagesScalarWhereInput | languagesScalarWhereInput[]
    OR?: languagesScalarWhereInput[]
    NOT?: languagesScalarWhereInput | languagesScalarWhereInput[]
    id?: StringFilter<"languages"> | string
    flag?: StringFilter<"languages"> | string
    name?: StringFilter<"languages"> | string
    code?: StringFilter<"languages"> | string
  }

  export type learningProgressUpsertWithWhereUniqueWithoutUserInput = {
    where: learningProgressWhereUniqueInput
    update: XOR<learningProgressUpdateWithoutUserInput, learningProgressUncheckedUpdateWithoutUserInput>
    create: XOR<learningProgressCreateWithoutUserInput, learningProgressUncheckedCreateWithoutUserInput>
  }

  export type learningProgressUpdateWithWhereUniqueWithoutUserInput = {
    where: learningProgressWhereUniqueInput
    data: XOR<learningProgressUpdateWithoutUserInput, learningProgressUncheckedUpdateWithoutUserInput>
  }

  export type learningProgressUpdateManyWithWhereWithoutUserInput = {
    where: learningProgressScalarWhereInput
    data: XOR<learningProgressUpdateManyMutationInput, learningProgressUncheckedUpdateManyWithoutUserInput>
  }

  export type chatUpsertWithWhereUniqueWithoutUserInput = {
    where: chatWhereUniqueInput
    update: XOR<chatUpdateWithoutUserInput, chatUncheckedUpdateWithoutUserInput>
    create: XOR<chatCreateWithoutUserInput, chatUncheckedCreateWithoutUserInput>
  }

  export type chatUpdateWithWhereUniqueWithoutUserInput = {
    where: chatWhereUniqueInput
    data: XOR<chatUpdateWithoutUserInput, chatUncheckedUpdateWithoutUserInput>
  }

  export type chatUpdateManyWithWhereWithoutUserInput = {
    where: chatScalarWhereInput
    data: XOR<chatUpdateManyMutationInput, chatUncheckedUpdateManyWithoutUserInput>
  }

  export type chatRoomUpsertWithWhereUniqueWithoutUserInput = {
    where: chatRoomWhereUniqueInput
    update: XOR<chatRoomUpdateWithoutUserInput, chatRoomUncheckedUpdateWithoutUserInput>
    create: XOR<chatRoomCreateWithoutUserInput, chatRoomUncheckedCreateWithoutUserInput>
  }

  export type chatRoomUpdateWithWhereUniqueWithoutUserInput = {
    where: chatRoomWhereUniqueInput
    data: XOR<chatRoomUpdateWithoutUserInput, chatRoomUncheckedUpdateWithoutUserInput>
  }

  export type chatRoomUpdateManyWithWhereWithoutUserInput = {
    where: chatRoomScalarWhereInput
    data: XOR<chatRoomUpdateManyMutationInput, chatRoomUncheckedUpdateManyWithoutUserInput>
  }

  export type chatRoomScalarWhereInput = {
    AND?: chatRoomScalarWhereInput | chatRoomScalarWhereInput[]
    OR?: chatRoomScalarWhereInput[]
    NOT?: chatRoomScalarWhereInput | chatRoomScalarWhereInput[]
    id?: StringFilter<"chatRoom"> | string
    userId?: StringFilter<"chatRoom"> | string
    title?: StringFilter<"chatRoom"> | string
    language?: StringFilter<"chatRoom"> | string
    createdAt?: DateTimeFilter<"chatRoom"> | Date | string
    updatedAt?: DateTimeNullableFilter<"chatRoom"> | Date | string | null
  }

  export type subscriptionUpsertWithWhereUniqueWithoutUserInput = {
    where: subscriptionWhereUniqueInput
    update: XOR<subscriptionUpdateWithoutUserInput, subscriptionUncheckedUpdateWithoutUserInput>
    create: XOR<subscriptionCreateWithoutUserInput, subscriptionUncheckedCreateWithoutUserInput>
  }

  export type subscriptionUpdateWithWhereUniqueWithoutUserInput = {
    where: subscriptionWhereUniqueInput
    data: XOR<subscriptionUpdateWithoutUserInput, subscriptionUncheckedUpdateWithoutUserInput>
  }

  export type subscriptionUpdateManyWithWhereWithoutUserInput = {
    where: subscriptionScalarWhereInput
    data: XOR<subscriptionUpdateManyMutationInput, subscriptionUncheckedUpdateManyWithoutUserInput>
  }

  export type userCreateWithoutCreateduserpermissionsInput = {
    id?: string
    firstname: string
    lastname: string
    phone?: string | null
    email: string
    password: string
    appLanguage?: string | null
    learningLanguage?: string | null
    learningLevel?: string | null
    theme?: string | null
    avatar?: string | null
    createdat?: Date | string
    updatedat?: Date | string | null
    status?: number
    lastentranceat?: Date | string | null
    lastexitat?: Date | string | null
    lastloginat?: Date | string | null
    stripeCustomerId?: string | null
    notificationuser?: notificationCreateNestedManyWithoutToInput
    createdapiclients?: apiclientCreateNestedManyWithoutCreateduserInput
    updatedapiclients?: apiclientCreateNestedManyWithoutUpdateduserInput
    createdpermissions?: permissionCreateNestedManyWithoutCreateduserInput
    updatedpermissions?: permissionCreateNestedManyWithoutUpdateduserInput
    refreshtokens?: refreshtokenCreateNestedManyWithoutUserInput
    createdroles?: roleCreateNestedManyWithoutCreateduserInput
    updatedroles?: roleCreateNestedManyWithoutUpdateduserInput
    createdrolepermissions?: rolepermissionCreateNestedManyWithoutCreateduserInput
    updatedrolepermissions?: rolepermissionCreateNestedManyWithoutUpdateduserInput
    createduser: userCreateNestedOneWithoutCreatedusersInput
    createdusers?: userCreateNestedManyWithoutCreateduserInput
    updateduser?: userCreateNestedOneWithoutUpdatedusersInput
    updatedusers?: userCreateNestedManyWithoutUpdateduserInput
    updateduserpermissions?: userpermissionCreateNestedManyWithoutUpdateduserInput
    userpermissions?: userpermissionCreateNestedManyWithoutUserInput
    createduserroles?: userroleCreateNestedManyWithoutCreateduserInput
    updateduserroles?: userroleCreateNestedManyWithoutUpdateduserInput
    userroles?: userroleCreateNestedManyWithoutUserInput
    language?: languagesCreateNestedManyWithoutUserInput
    learningProgress?: learningProgressCreateNestedManyWithoutUserInput
    chats?: chatCreateNestedManyWithoutUserInput
    chatRooms?: chatRoomCreateNestedManyWithoutUserInput
    subscriptions?: subscriptionCreateNestedManyWithoutUserInput
  }

  export type userUncheckedCreateWithoutCreateduserpermissionsInput = {
    id?: string
    firstname: string
    lastname: string
    phone?: string | null
    email: string
    password: string
    appLanguage?: string | null
    learningLanguage?: string | null
    learningLevel?: string | null
    theme?: string | null
    avatar?: string | null
    createdby: string
    createdat?: Date | string
    updatedby?: string | null
    updatedat?: Date | string | null
    status?: number
    lastentranceat?: Date | string | null
    lastexitat?: Date | string | null
    lastloginat?: Date | string | null
    stripeCustomerId?: string | null
    notificationuser?: notificationUncheckedCreateNestedManyWithoutToInput
    createdapiclients?: apiclientUncheckedCreateNestedManyWithoutCreateduserInput
    updatedapiclients?: apiclientUncheckedCreateNestedManyWithoutUpdateduserInput
    createdpermissions?: permissionUncheckedCreateNestedManyWithoutCreateduserInput
    updatedpermissions?: permissionUncheckedCreateNestedManyWithoutUpdateduserInput
    refreshtokens?: refreshtokenUncheckedCreateNestedManyWithoutUserInput
    createdroles?: roleUncheckedCreateNestedManyWithoutCreateduserInput
    updatedroles?: roleUncheckedCreateNestedManyWithoutUpdateduserInput
    createdrolepermissions?: rolepermissionUncheckedCreateNestedManyWithoutCreateduserInput
    updatedrolepermissions?: rolepermissionUncheckedCreateNestedManyWithoutUpdateduserInput
    createdusers?: userUncheckedCreateNestedManyWithoutCreateduserInput
    updatedusers?: userUncheckedCreateNestedManyWithoutUpdateduserInput
    updateduserpermissions?: userpermissionUncheckedCreateNestedManyWithoutUpdateduserInput
    userpermissions?: userpermissionUncheckedCreateNestedManyWithoutUserInput
    createduserroles?: userroleUncheckedCreateNestedManyWithoutCreateduserInput
    updateduserroles?: userroleUncheckedCreateNestedManyWithoutUpdateduserInput
    userroles?: userroleUncheckedCreateNestedManyWithoutUserInput
    language?: languagesUncheckedCreateNestedManyWithoutUserInput
    learningProgress?: learningProgressUncheckedCreateNestedManyWithoutUserInput
    chats?: chatUncheckedCreateNestedManyWithoutUserInput
    chatRooms?: chatRoomUncheckedCreateNestedManyWithoutUserInput
    subscriptions?: subscriptionUncheckedCreateNestedManyWithoutUserInput
  }

  export type userCreateOrConnectWithoutCreateduserpermissionsInput = {
    where: userWhereUniqueInput
    create: XOR<userCreateWithoutCreateduserpermissionsInput, userUncheckedCreateWithoutCreateduserpermissionsInput>
  }

  export type permissionCreateWithoutUserpermissionsInput = {
    id?: string
    name: string
    value: string
    group: string
    description: string
    createdat?: Date | string
    updatedat?: Date | string | null
    createduser: userCreateNestedOneWithoutCreatedpermissionsInput
    updateduser?: userCreateNestedOneWithoutUpdatedpermissionsInput
    rolepermissions?: rolepermissionCreateNestedManyWithoutPermissionInput
  }

  export type permissionUncheckedCreateWithoutUserpermissionsInput = {
    id?: string
    name: string
    value: string
    group: string
    description: string
    createdby: string
    createdat?: Date | string
    updatedby?: string | null
    updatedat?: Date | string | null
    rolepermissions?: rolepermissionUncheckedCreateNestedManyWithoutPermissionInput
  }

  export type permissionCreateOrConnectWithoutUserpermissionsInput = {
    where: permissionWhereUniqueInput
    create: XOR<permissionCreateWithoutUserpermissionsInput, permissionUncheckedCreateWithoutUserpermissionsInput>
  }

  export type userCreateWithoutUpdateduserpermissionsInput = {
    id?: string
    firstname: string
    lastname: string
    phone?: string | null
    email: string
    password: string
    appLanguage?: string | null
    learningLanguage?: string | null
    learningLevel?: string | null
    theme?: string | null
    avatar?: string | null
    createdat?: Date | string
    updatedat?: Date | string | null
    status?: number
    lastentranceat?: Date | string | null
    lastexitat?: Date | string | null
    lastloginat?: Date | string | null
    stripeCustomerId?: string | null
    notificationuser?: notificationCreateNestedManyWithoutToInput
    createdapiclients?: apiclientCreateNestedManyWithoutCreateduserInput
    updatedapiclients?: apiclientCreateNestedManyWithoutUpdateduserInput
    createdpermissions?: permissionCreateNestedManyWithoutCreateduserInput
    updatedpermissions?: permissionCreateNestedManyWithoutUpdateduserInput
    refreshtokens?: refreshtokenCreateNestedManyWithoutUserInput
    createdroles?: roleCreateNestedManyWithoutCreateduserInput
    updatedroles?: roleCreateNestedManyWithoutUpdateduserInput
    createdrolepermissions?: rolepermissionCreateNestedManyWithoutCreateduserInput
    updatedrolepermissions?: rolepermissionCreateNestedManyWithoutUpdateduserInput
    createduser: userCreateNestedOneWithoutCreatedusersInput
    createdusers?: userCreateNestedManyWithoutCreateduserInput
    updateduser?: userCreateNestedOneWithoutUpdatedusersInput
    updatedusers?: userCreateNestedManyWithoutUpdateduserInput
    createduserpermissions?: userpermissionCreateNestedManyWithoutCreateduserInput
    userpermissions?: userpermissionCreateNestedManyWithoutUserInput
    createduserroles?: userroleCreateNestedManyWithoutCreateduserInput
    updateduserroles?: userroleCreateNestedManyWithoutUpdateduserInput
    userroles?: userroleCreateNestedManyWithoutUserInput
    language?: languagesCreateNestedManyWithoutUserInput
    learningProgress?: learningProgressCreateNestedManyWithoutUserInput
    chats?: chatCreateNestedManyWithoutUserInput
    chatRooms?: chatRoomCreateNestedManyWithoutUserInput
    subscriptions?: subscriptionCreateNestedManyWithoutUserInput
  }

  export type userUncheckedCreateWithoutUpdateduserpermissionsInput = {
    id?: string
    firstname: string
    lastname: string
    phone?: string | null
    email: string
    password: string
    appLanguage?: string | null
    learningLanguage?: string | null
    learningLevel?: string | null
    theme?: string | null
    avatar?: string | null
    createdby: string
    createdat?: Date | string
    updatedby?: string | null
    updatedat?: Date | string | null
    status?: number
    lastentranceat?: Date | string | null
    lastexitat?: Date | string | null
    lastloginat?: Date | string | null
    stripeCustomerId?: string | null
    notificationuser?: notificationUncheckedCreateNestedManyWithoutToInput
    createdapiclients?: apiclientUncheckedCreateNestedManyWithoutCreateduserInput
    updatedapiclients?: apiclientUncheckedCreateNestedManyWithoutUpdateduserInput
    createdpermissions?: permissionUncheckedCreateNestedManyWithoutCreateduserInput
    updatedpermissions?: permissionUncheckedCreateNestedManyWithoutUpdateduserInput
    refreshtokens?: refreshtokenUncheckedCreateNestedManyWithoutUserInput
    createdroles?: roleUncheckedCreateNestedManyWithoutCreateduserInput
    updatedroles?: roleUncheckedCreateNestedManyWithoutUpdateduserInput
    createdrolepermissions?: rolepermissionUncheckedCreateNestedManyWithoutCreateduserInput
    updatedrolepermissions?: rolepermissionUncheckedCreateNestedManyWithoutUpdateduserInput
    createdusers?: userUncheckedCreateNestedManyWithoutCreateduserInput
    updatedusers?: userUncheckedCreateNestedManyWithoutUpdateduserInput
    createduserpermissions?: userpermissionUncheckedCreateNestedManyWithoutCreateduserInput
    userpermissions?: userpermissionUncheckedCreateNestedManyWithoutUserInput
    createduserroles?: userroleUncheckedCreateNestedManyWithoutCreateduserInput
    updateduserroles?: userroleUncheckedCreateNestedManyWithoutUpdateduserInput
    userroles?: userroleUncheckedCreateNestedManyWithoutUserInput
    language?: languagesUncheckedCreateNestedManyWithoutUserInput
    learningProgress?: learningProgressUncheckedCreateNestedManyWithoutUserInput
    chats?: chatUncheckedCreateNestedManyWithoutUserInput
    chatRooms?: chatRoomUncheckedCreateNestedManyWithoutUserInput
    subscriptions?: subscriptionUncheckedCreateNestedManyWithoutUserInput
  }

  export type userCreateOrConnectWithoutUpdateduserpermissionsInput = {
    where: userWhereUniqueInput
    create: XOR<userCreateWithoutUpdateduserpermissionsInput, userUncheckedCreateWithoutUpdateduserpermissionsInput>
  }

  export type userCreateWithoutUserpermissionsInput = {
    id?: string
    firstname: string
    lastname: string
    phone?: string | null
    email: string
    password: string
    appLanguage?: string | null
    learningLanguage?: string | null
    learningLevel?: string | null
    theme?: string | null
    avatar?: string | null
    createdat?: Date | string
    updatedat?: Date | string | null
    status?: number
    lastentranceat?: Date | string | null
    lastexitat?: Date | string | null
    lastloginat?: Date | string | null
    stripeCustomerId?: string | null
    notificationuser?: notificationCreateNestedManyWithoutToInput
    createdapiclients?: apiclientCreateNestedManyWithoutCreateduserInput
    updatedapiclients?: apiclientCreateNestedManyWithoutUpdateduserInput
    createdpermissions?: permissionCreateNestedManyWithoutCreateduserInput
    updatedpermissions?: permissionCreateNestedManyWithoutUpdateduserInput
    refreshtokens?: refreshtokenCreateNestedManyWithoutUserInput
    createdroles?: roleCreateNestedManyWithoutCreateduserInput
    updatedroles?: roleCreateNestedManyWithoutUpdateduserInput
    createdrolepermissions?: rolepermissionCreateNestedManyWithoutCreateduserInput
    updatedrolepermissions?: rolepermissionCreateNestedManyWithoutUpdateduserInput
    createduser: userCreateNestedOneWithoutCreatedusersInput
    createdusers?: userCreateNestedManyWithoutCreateduserInput
    updateduser?: userCreateNestedOneWithoutUpdatedusersInput
    updatedusers?: userCreateNestedManyWithoutUpdateduserInput
    createduserpermissions?: userpermissionCreateNestedManyWithoutCreateduserInput
    updateduserpermissions?: userpermissionCreateNestedManyWithoutUpdateduserInput
    createduserroles?: userroleCreateNestedManyWithoutCreateduserInput
    updateduserroles?: userroleCreateNestedManyWithoutUpdateduserInput
    userroles?: userroleCreateNestedManyWithoutUserInput
    language?: languagesCreateNestedManyWithoutUserInput
    learningProgress?: learningProgressCreateNestedManyWithoutUserInput
    chats?: chatCreateNestedManyWithoutUserInput
    chatRooms?: chatRoomCreateNestedManyWithoutUserInput
    subscriptions?: subscriptionCreateNestedManyWithoutUserInput
  }

  export type userUncheckedCreateWithoutUserpermissionsInput = {
    id?: string
    firstname: string
    lastname: string
    phone?: string | null
    email: string
    password: string
    appLanguage?: string | null
    learningLanguage?: string | null
    learningLevel?: string | null
    theme?: string | null
    avatar?: string | null
    createdby: string
    createdat?: Date | string
    updatedby?: string | null
    updatedat?: Date | string | null
    status?: number
    lastentranceat?: Date | string | null
    lastexitat?: Date | string | null
    lastloginat?: Date | string | null
    stripeCustomerId?: string | null
    notificationuser?: notificationUncheckedCreateNestedManyWithoutToInput
    createdapiclients?: apiclientUncheckedCreateNestedManyWithoutCreateduserInput
    updatedapiclients?: apiclientUncheckedCreateNestedManyWithoutUpdateduserInput
    createdpermissions?: permissionUncheckedCreateNestedManyWithoutCreateduserInput
    updatedpermissions?: permissionUncheckedCreateNestedManyWithoutUpdateduserInput
    refreshtokens?: refreshtokenUncheckedCreateNestedManyWithoutUserInput
    createdroles?: roleUncheckedCreateNestedManyWithoutCreateduserInput
    updatedroles?: roleUncheckedCreateNestedManyWithoutUpdateduserInput
    createdrolepermissions?: rolepermissionUncheckedCreateNestedManyWithoutCreateduserInput
    updatedrolepermissions?: rolepermissionUncheckedCreateNestedManyWithoutUpdateduserInput
    createdusers?: userUncheckedCreateNestedManyWithoutCreateduserInput
    updatedusers?: userUncheckedCreateNestedManyWithoutUpdateduserInput
    createduserpermissions?: userpermissionUncheckedCreateNestedManyWithoutCreateduserInput
    updateduserpermissions?: userpermissionUncheckedCreateNestedManyWithoutUpdateduserInput
    createduserroles?: userroleUncheckedCreateNestedManyWithoutCreateduserInput
    updateduserroles?: userroleUncheckedCreateNestedManyWithoutUpdateduserInput
    userroles?: userroleUncheckedCreateNestedManyWithoutUserInput
    language?: languagesUncheckedCreateNestedManyWithoutUserInput
    learningProgress?: learningProgressUncheckedCreateNestedManyWithoutUserInput
    chats?: chatUncheckedCreateNestedManyWithoutUserInput
    chatRooms?: chatRoomUncheckedCreateNestedManyWithoutUserInput
    subscriptions?: subscriptionUncheckedCreateNestedManyWithoutUserInput
  }

  export type userCreateOrConnectWithoutUserpermissionsInput = {
    where: userWhereUniqueInput
    create: XOR<userCreateWithoutUserpermissionsInput, userUncheckedCreateWithoutUserpermissionsInput>
  }

  export type userUpsertWithoutCreateduserpermissionsInput = {
    update: XOR<userUpdateWithoutCreateduserpermissionsInput, userUncheckedUpdateWithoutCreateduserpermissionsInput>
    create: XOR<userCreateWithoutCreateduserpermissionsInput, userUncheckedCreateWithoutCreateduserpermissionsInput>
    where?: userWhereInput
  }

  export type userUpdateToOneWithWhereWithoutCreateduserpermissionsInput = {
    where?: userWhereInput
    data: XOR<userUpdateWithoutCreateduserpermissionsInput, userUncheckedUpdateWithoutCreateduserpermissionsInput>
  }

  export type userUpdateWithoutCreateduserpermissionsInput = {
    id?: StringFieldUpdateOperationsInput | string
    firstname?: StringFieldUpdateOperationsInput | string
    lastname?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    appLanguage?: NullableStringFieldUpdateOperationsInput | string | null
    learningLanguage?: NullableStringFieldUpdateOperationsInput | string | null
    learningLevel?: NullableStringFieldUpdateOperationsInput | string | null
    theme?: NullableStringFieldUpdateOperationsInput | string | null
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    createdat?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: IntFieldUpdateOperationsInput | number
    lastentranceat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastexitat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastloginat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    stripeCustomerId?: NullableStringFieldUpdateOperationsInput | string | null
    notificationuser?: notificationUpdateManyWithoutToNestedInput
    createdapiclients?: apiclientUpdateManyWithoutCreateduserNestedInput
    updatedapiclients?: apiclientUpdateManyWithoutUpdateduserNestedInput
    createdpermissions?: permissionUpdateManyWithoutCreateduserNestedInput
    updatedpermissions?: permissionUpdateManyWithoutUpdateduserNestedInput
    refreshtokens?: refreshtokenUpdateManyWithoutUserNestedInput
    createdroles?: roleUpdateManyWithoutCreateduserNestedInput
    updatedroles?: roleUpdateManyWithoutUpdateduserNestedInput
    createdrolepermissions?: rolepermissionUpdateManyWithoutCreateduserNestedInput
    updatedrolepermissions?: rolepermissionUpdateManyWithoutUpdateduserNestedInput
    createduser?: userUpdateOneRequiredWithoutCreatedusersNestedInput
    createdusers?: userUpdateManyWithoutCreateduserNestedInput
    updateduser?: userUpdateOneWithoutUpdatedusersNestedInput
    updatedusers?: userUpdateManyWithoutUpdateduserNestedInput
    updateduserpermissions?: userpermissionUpdateManyWithoutUpdateduserNestedInput
    userpermissions?: userpermissionUpdateManyWithoutUserNestedInput
    createduserroles?: userroleUpdateManyWithoutCreateduserNestedInput
    updateduserroles?: userroleUpdateManyWithoutUpdateduserNestedInput
    userroles?: userroleUpdateManyWithoutUserNestedInput
    language?: languagesUpdateManyWithoutUserNestedInput
    learningProgress?: learningProgressUpdateManyWithoutUserNestedInput
    chats?: chatUpdateManyWithoutUserNestedInput
    chatRooms?: chatRoomUpdateManyWithoutUserNestedInput
    subscriptions?: subscriptionUpdateManyWithoutUserNestedInput
  }

  export type userUncheckedUpdateWithoutCreateduserpermissionsInput = {
    id?: StringFieldUpdateOperationsInput | string
    firstname?: StringFieldUpdateOperationsInput | string
    lastname?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    appLanguage?: NullableStringFieldUpdateOperationsInput | string | null
    learningLanguage?: NullableStringFieldUpdateOperationsInput | string | null
    learningLevel?: NullableStringFieldUpdateOperationsInput | string | null
    theme?: NullableStringFieldUpdateOperationsInput | string | null
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    createdby?: StringFieldUpdateOperationsInput | string
    createdat?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedby?: NullableStringFieldUpdateOperationsInput | string | null
    updatedat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: IntFieldUpdateOperationsInput | number
    lastentranceat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastexitat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastloginat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    stripeCustomerId?: NullableStringFieldUpdateOperationsInput | string | null
    notificationuser?: notificationUncheckedUpdateManyWithoutToNestedInput
    createdapiclients?: apiclientUncheckedUpdateManyWithoutCreateduserNestedInput
    updatedapiclients?: apiclientUncheckedUpdateManyWithoutUpdateduserNestedInput
    createdpermissions?: permissionUncheckedUpdateManyWithoutCreateduserNestedInput
    updatedpermissions?: permissionUncheckedUpdateManyWithoutUpdateduserNestedInput
    refreshtokens?: refreshtokenUncheckedUpdateManyWithoutUserNestedInput
    createdroles?: roleUncheckedUpdateManyWithoutCreateduserNestedInput
    updatedroles?: roleUncheckedUpdateManyWithoutUpdateduserNestedInput
    createdrolepermissions?: rolepermissionUncheckedUpdateManyWithoutCreateduserNestedInput
    updatedrolepermissions?: rolepermissionUncheckedUpdateManyWithoutUpdateduserNestedInput
    createdusers?: userUncheckedUpdateManyWithoutCreateduserNestedInput
    updatedusers?: userUncheckedUpdateManyWithoutUpdateduserNestedInput
    updateduserpermissions?: userpermissionUncheckedUpdateManyWithoutUpdateduserNestedInput
    userpermissions?: userpermissionUncheckedUpdateManyWithoutUserNestedInput
    createduserroles?: userroleUncheckedUpdateManyWithoutCreateduserNestedInput
    updateduserroles?: userroleUncheckedUpdateManyWithoutUpdateduserNestedInput
    userroles?: userroleUncheckedUpdateManyWithoutUserNestedInput
    language?: languagesUncheckedUpdateManyWithoutUserNestedInput
    learningProgress?: learningProgressUncheckedUpdateManyWithoutUserNestedInput
    chats?: chatUncheckedUpdateManyWithoutUserNestedInput
    chatRooms?: chatRoomUncheckedUpdateManyWithoutUserNestedInput
    subscriptions?: subscriptionUncheckedUpdateManyWithoutUserNestedInput
  }

  export type permissionUpsertWithoutUserpermissionsInput = {
    update: XOR<permissionUpdateWithoutUserpermissionsInput, permissionUncheckedUpdateWithoutUserpermissionsInput>
    create: XOR<permissionCreateWithoutUserpermissionsInput, permissionUncheckedCreateWithoutUserpermissionsInput>
    where?: permissionWhereInput
  }

  export type permissionUpdateToOneWithWhereWithoutUserpermissionsInput = {
    where?: permissionWhereInput
    data: XOR<permissionUpdateWithoutUserpermissionsInput, permissionUncheckedUpdateWithoutUserpermissionsInput>
  }

  export type permissionUpdateWithoutUserpermissionsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    value?: StringFieldUpdateOperationsInput | string
    group?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    createdat?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createduser?: userUpdateOneRequiredWithoutCreatedpermissionsNestedInput
    updateduser?: userUpdateOneWithoutUpdatedpermissionsNestedInput
    rolepermissions?: rolepermissionUpdateManyWithoutPermissionNestedInput
  }

  export type permissionUncheckedUpdateWithoutUserpermissionsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    value?: StringFieldUpdateOperationsInput | string
    group?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    createdby?: StringFieldUpdateOperationsInput | string
    createdat?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedby?: NullableStringFieldUpdateOperationsInput | string | null
    updatedat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    rolepermissions?: rolepermissionUncheckedUpdateManyWithoutPermissionNestedInput
  }

  export type userUpsertWithoutUpdateduserpermissionsInput = {
    update: XOR<userUpdateWithoutUpdateduserpermissionsInput, userUncheckedUpdateWithoutUpdateduserpermissionsInput>
    create: XOR<userCreateWithoutUpdateduserpermissionsInput, userUncheckedCreateWithoutUpdateduserpermissionsInput>
    where?: userWhereInput
  }

  export type userUpdateToOneWithWhereWithoutUpdateduserpermissionsInput = {
    where?: userWhereInput
    data: XOR<userUpdateWithoutUpdateduserpermissionsInput, userUncheckedUpdateWithoutUpdateduserpermissionsInput>
  }

  export type userUpdateWithoutUpdateduserpermissionsInput = {
    id?: StringFieldUpdateOperationsInput | string
    firstname?: StringFieldUpdateOperationsInput | string
    lastname?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    appLanguage?: NullableStringFieldUpdateOperationsInput | string | null
    learningLanguage?: NullableStringFieldUpdateOperationsInput | string | null
    learningLevel?: NullableStringFieldUpdateOperationsInput | string | null
    theme?: NullableStringFieldUpdateOperationsInput | string | null
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    createdat?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: IntFieldUpdateOperationsInput | number
    lastentranceat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastexitat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastloginat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    stripeCustomerId?: NullableStringFieldUpdateOperationsInput | string | null
    notificationuser?: notificationUpdateManyWithoutToNestedInput
    createdapiclients?: apiclientUpdateManyWithoutCreateduserNestedInput
    updatedapiclients?: apiclientUpdateManyWithoutUpdateduserNestedInput
    createdpermissions?: permissionUpdateManyWithoutCreateduserNestedInput
    updatedpermissions?: permissionUpdateManyWithoutUpdateduserNestedInput
    refreshtokens?: refreshtokenUpdateManyWithoutUserNestedInput
    createdroles?: roleUpdateManyWithoutCreateduserNestedInput
    updatedroles?: roleUpdateManyWithoutUpdateduserNestedInput
    createdrolepermissions?: rolepermissionUpdateManyWithoutCreateduserNestedInput
    updatedrolepermissions?: rolepermissionUpdateManyWithoutUpdateduserNestedInput
    createduser?: userUpdateOneRequiredWithoutCreatedusersNestedInput
    createdusers?: userUpdateManyWithoutCreateduserNestedInput
    updateduser?: userUpdateOneWithoutUpdatedusersNestedInput
    updatedusers?: userUpdateManyWithoutUpdateduserNestedInput
    createduserpermissions?: userpermissionUpdateManyWithoutCreateduserNestedInput
    userpermissions?: userpermissionUpdateManyWithoutUserNestedInput
    createduserroles?: userroleUpdateManyWithoutCreateduserNestedInput
    updateduserroles?: userroleUpdateManyWithoutUpdateduserNestedInput
    userroles?: userroleUpdateManyWithoutUserNestedInput
    language?: languagesUpdateManyWithoutUserNestedInput
    learningProgress?: learningProgressUpdateManyWithoutUserNestedInput
    chats?: chatUpdateManyWithoutUserNestedInput
    chatRooms?: chatRoomUpdateManyWithoutUserNestedInput
    subscriptions?: subscriptionUpdateManyWithoutUserNestedInput
  }

  export type userUncheckedUpdateWithoutUpdateduserpermissionsInput = {
    id?: StringFieldUpdateOperationsInput | string
    firstname?: StringFieldUpdateOperationsInput | string
    lastname?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    appLanguage?: NullableStringFieldUpdateOperationsInput | string | null
    learningLanguage?: NullableStringFieldUpdateOperationsInput | string | null
    learningLevel?: NullableStringFieldUpdateOperationsInput | string | null
    theme?: NullableStringFieldUpdateOperationsInput | string | null
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    createdby?: StringFieldUpdateOperationsInput | string
    createdat?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedby?: NullableStringFieldUpdateOperationsInput | string | null
    updatedat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: IntFieldUpdateOperationsInput | number
    lastentranceat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastexitat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastloginat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    stripeCustomerId?: NullableStringFieldUpdateOperationsInput | string | null
    notificationuser?: notificationUncheckedUpdateManyWithoutToNestedInput
    createdapiclients?: apiclientUncheckedUpdateManyWithoutCreateduserNestedInput
    updatedapiclients?: apiclientUncheckedUpdateManyWithoutUpdateduserNestedInput
    createdpermissions?: permissionUncheckedUpdateManyWithoutCreateduserNestedInput
    updatedpermissions?: permissionUncheckedUpdateManyWithoutUpdateduserNestedInput
    refreshtokens?: refreshtokenUncheckedUpdateManyWithoutUserNestedInput
    createdroles?: roleUncheckedUpdateManyWithoutCreateduserNestedInput
    updatedroles?: roleUncheckedUpdateManyWithoutUpdateduserNestedInput
    createdrolepermissions?: rolepermissionUncheckedUpdateManyWithoutCreateduserNestedInput
    updatedrolepermissions?: rolepermissionUncheckedUpdateManyWithoutUpdateduserNestedInput
    createdusers?: userUncheckedUpdateManyWithoutCreateduserNestedInput
    updatedusers?: userUncheckedUpdateManyWithoutUpdateduserNestedInput
    createduserpermissions?: userpermissionUncheckedUpdateManyWithoutCreateduserNestedInput
    userpermissions?: userpermissionUncheckedUpdateManyWithoutUserNestedInput
    createduserroles?: userroleUncheckedUpdateManyWithoutCreateduserNestedInput
    updateduserroles?: userroleUncheckedUpdateManyWithoutUpdateduserNestedInput
    userroles?: userroleUncheckedUpdateManyWithoutUserNestedInput
    language?: languagesUncheckedUpdateManyWithoutUserNestedInput
    learningProgress?: learningProgressUncheckedUpdateManyWithoutUserNestedInput
    chats?: chatUncheckedUpdateManyWithoutUserNestedInput
    chatRooms?: chatRoomUncheckedUpdateManyWithoutUserNestedInput
    subscriptions?: subscriptionUncheckedUpdateManyWithoutUserNestedInput
  }

  export type userUpsertWithoutUserpermissionsInput = {
    update: XOR<userUpdateWithoutUserpermissionsInput, userUncheckedUpdateWithoutUserpermissionsInput>
    create: XOR<userCreateWithoutUserpermissionsInput, userUncheckedCreateWithoutUserpermissionsInput>
    where?: userWhereInput
  }

  export type userUpdateToOneWithWhereWithoutUserpermissionsInput = {
    where?: userWhereInput
    data: XOR<userUpdateWithoutUserpermissionsInput, userUncheckedUpdateWithoutUserpermissionsInput>
  }

  export type userUpdateWithoutUserpermissionsInput = {
    id?: StringFieldUpdateOperationsInput | string
    firstname?: StringFieldUpdateOperationsInput | string
    lastname?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    appLanguage?: NullableStringFieldUpdateOperationsInput | string | null
    learningLanguage?: NullableStringFieldUpdateOperationsInput | string | null
    learningLevel?: NullableStringFieldUpdateOperationsInput | string | null
    theme?: NullableStringFieldUpdateOperationsInput | string | null
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    createdat?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: IntFieldUpdateOperationsInput | number
    lastentranceat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastexitat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastloginat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    stripeCustomerId?: NullableStringFieldUpdateOperationsInput | string | null
    notificationuser?: notificationUpdateManyWithoutToNestedInput
    createdapiclients?: apiclientUpdateManyWithoutCreateduserNestedInput
    updatedapiclients?: apiclientUpdateManyWithoutUpdateduserNestedInput
    createdpermissions?: permissionUpdateManyWithoutCreateduserNestedInput
    updatedpermissions?: permissionUpdateManyWithoutUpdateduserNestedInput
    refreshtokens?: refreshtokenUpdateManyWithoutUserNestedInput
    createdroles?: roleUpdateManyWithoutCreateduserNestedInput
    updatedroles?: roleUpdateManyWithoutUpdateduserNestedInput
    createdrolepermissions?: rolepermissionUpdateManyWithoutCreateduserNestedInput
    updatedrolepermissions?: rolepermissionUpdateManyWithoutUpdateduserNestedInput
    createduser?: userUpdateOneRequiredWithoutCreatedusersNestedInput
    createdusers?: userUpdateManyWithoutCreateduserNestedInput
    updateduser?: userUpdateOneWithoutUpdatedusersNestedInput
    updatedusers?: userUpdateManyWithoutUpdateduserNestedInput
    createduserpermissions?: userpermissionUpdateManyWithoutCreateduserNestedInput
    updateduserpermissions?: userpermissionUpdateManyWithoutUpdateduserNestedInput
    createduserroles?: userroleUpdateManyWithoutCreateduserNestedInput
    updateduserroles?: userroleUpdateManyWithoutUpdateduserNestedInput
    userroles?: userroleUpdateManyWithoutUserNestedInput
    language?: languagesUpdateManyWithoutUserNestedInput
    learningProgress?: learningProgressUpdateManyWithoutUserNestedInput
    chats?: chatUpdateManyWithoutUserNestedInput
    chatRooms?: chatRoomUpdateManyWithoutUserNestedInput
    subscriptions?: subscriptionUpdateManyWithoutUserNestedInput
  }

  export type userUncheckedUpdateWithoutUserpermissionsInput = {
    id?: StringFieldUpdateOperationsInput | string
    firstname?: StringFieldUpdateOperationsInput | string
    lastname?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    appLanguage?: NullableStringFieldUpdateOperationsInput | string | null
    learningLanguage?: NullableStringFieldUpdateOperationsInput | string | null
    learningLevel?: NullableStringFieldUpdateOperationsInput | string | null
    theme?: NullableStringFieldUpdateOperationsInput | string | null
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    createdby?: StringFieldUpdateOperationsInput | string
    createdat?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedby?: NullableStringFieldUpdateOperationsInput | string | null
    updatedat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: IntFieldUpdateOperationsInput | number
    lastentranceat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastexitat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastloginat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    stripeCustomerId?: NullableStringFieldUpdateOperationsInput | string | null
    notificationuser?: notificationUncheckedUpdateManyWithoutToNestedInput
    createdapiclients?: apiclientUncheckedUpdateManyWithoutCreateduserNestedInput
    updatedapiclients?: apiclientUncheckedUpdateManyWithoutUpdateduserNestedInput
    createdpermissions?: permissionUncheckedUpdateManyWithoutCreateduserNestedInput
    updatedpermissions?: permissionUncheckedUpdateManyWithoutUpdateduserNestedInput
    refreshtokens?: refreshtokenUncheckedUpdateManyWithoutUserNestedInput
    createdroles?: roleUncheckedUpdateManyWithoutCreateduserNestedInput
    updatedroles?: roleUncheckedUpdateManyWithoutUpdateduserNestedInput
    createdrolepermissions?: rolepermissionUncheckedUpdateManyWithoutCreateduserNestedInput
    updatedrolepermissions?: rolepermissionUncheckedUpdateManyWithoutUpdateduserNestedInput
    createdusers?: userUncheckedUpdateManyWithoutCreateduserNestedInput
    updatedusers?: userUncheckedUpdateManyWithoutUpdateduserNestedInput
    createduserpermissions?: userpermissionUncheckedUpdateManyWithoutCreateduserNestedInput
    updateduserpermissions?: userpermissionUncheckedUpdateManyWithoutUpdateduserNestedInput
    createduserroles?: userroleUncheckedUpdateManyWithoutCreateduserNestedInput
    updateduserroles?: userroleUncheckedUpdateManyWithoutUpdateduserNestedInput
    userroles?: userroleUncheckedUpdateManyWithoutUserNestedInput
    language?: languagesUncheckedUpdateManyWithoutUserNestedInput
    learningProgress?: learningProgressUncheckedUpdateManyWithoutUserNestedInput
    chats?: chatUncheckedUpdateManyWithoutUserNestedInput
    chatRooms?: chatRoomUncheckedUpdateManyWithoutUserNestedInput
    subscriptions?: subscriptionUncheckedUpdateManyWithoutUserNestedInput
  }

  export type userCreateWithoutCreateduserrolesInput = {
    id?: string
    firstname: string
    lastname: string
    phone?: string | null
    email: string
    password: string
    appLanguage?: string | null
    learningLanguage?: string | null
    learningLevel?: string | null
    theme?: string | null
    avatar?: string | null
    createdat?: Date | string
    updatedat?: Date | string | null
    status?: number
    lastentranceat?: Date | string | null
    lastexitat?: Date | string | null
    lastloginat?: Date | string | null
    stripeCustomerId?: string | null
    notificationuser?: notificationCreateNestedManyWithoutToInput
    createdapiclients?: apiclientCreateNestedManyWithoutCreateduserInput
    updatedapiclients?: apiclientCreateNestedManyWithoutUpdateduserInput
    createdpermissions?: permissionCreateNestedManyWithoutCreateduserInput
    updatedpermissions?: permissionCreateNestedManyWithoutUpdateduserInput
    refreshtokens?: refreshtokenCreateNestedManyWithoutUserInput
    createdroles?: roleCreateNestedManyWithoutCreateduserInput
    updatedroles?: roleCreateNestedManyWithoutUpdateduserInput
    createdrolepermissions?: rolepermissionCreateNestedManyWithoutCreateduserInput
    updatedrolepermissions?: rolepermissionCreateNestedManyWithoutUpdateduserInput
    createduser: userCreateNestedOneWithoutCreatedusersInput
    createdusers?: userCreateNestedManyWithoutCreateduserInput
    updateduser?: userCreateNestedOneWithoutUpdatedusersInput
    updatedusers?: userCreateNestedManyWithoutUpdateduserInput
    createduserpermissions?: userpermissionCreateNestedManyWithoutCreateduserInput
    updateduserpermissions?: userpermissionCreateNestedManyWithoutUpdateduserInput
    userpermissions?: userpermissionCreateNestedManyWithoutUserInput
    updateduserroles?: userroleCreateNestedManyWithoutUpdateduserInput
    userroles?: userroleCreateNestedManyWithoutUserInput
    language?: languagesCreateNestedManyWithoutUserInput
    learningProgress?: learningProgressCreateNestedManyWithoutUserInput
    chats?: chatCreateNestedManyWithoutUserInput
    chatRooms?: chatRoomCreateNestedManyWithoutUserInput
    subscriptions?: subscriptionCreateNestedManyWithoutUserInput
  }

  export type userUncheckedCreateWithoutCreateduserrolesInput = {
    id?: string
    firstname: string
    lastname: string
    phone?: string | null
    email: string
    password: string
    appLanguage?: string | null
    learningLanguage?: string | null
    learningLevel?: string | null
    theme?: string | null
    avatar?: string | null
    createdby: string
    createdat?: Date | string
    updatedby?: string | null
    updatedat?: Date | string | null
    status?: number
    lastentranceat?: Date | string | null
    lastexitat?: Date | string | null
    lastloginat?: Date | string | null
    stripeCustomerId?: string | null
    notificationuser?: notificationUncheckedCreateNestedManyWithoutToInput
    createdapiclients?: apiclientUncheckedCreateNestedManyWithoutCreateduserInput
    updatedapiclients?: apiclientUncheckedCreateNestedManyWithoutUpdateduserInput
    createdpermissions?: permissionUncheckedCreateNestedManyWithoutCreateduserInput
    updatedpermissions?: permissionUncheckedCreateNestedManyWithoutUpdateduserInput
    refreshtokens?: refreshtokenUncheckedCreateNestedManyWithoutUserInput
    createdroles?: roleUncheckedCreateNestedManyWithoutCreateduserInput
    updatedroles?: roleUncheckedCreateNestedManyWithoutUpdateduserInput
    createdrolepermissions?: rolepermissionUncheckedCreateNestedManyWithoutCreateduserInput
    updatedrolepermissions?: rolepermissionUncheckedCreateNestedManyWithoutUpdateduserInput
    createdusers?: userUncheckedCreateNestedManyWithoutCreateduserInput
    updatedusers?: userUncheckedCreateNestedManyWithoutUpdateduserInput
    createduserpermissions?: userpermissionUncheckedCreateNestedManyWithoutCreateduserInput
    updateduserpermissions?: userpermissionUncheckedCreateNestedManyWithoutUpdateduserInput
    userpermissions?: userpermissionUncheckedCreateNestedManyWithoutUserInput
    updateduserroles?: userroleUncheckedCreateNestedManyWithoutUpdateduserInput
    userroles?: userroleUncheckedCreateNestedManyWithoutUserInput
    language?: languagesUncheckedCreateNestedManyWithoutUserInput
    learningProgress?: learningProgressUncheckedCreateNestedManyWithoutUserInput
    chats?: chatUncheckedCreateNestedManyWithoutUserInput
    chatRooms?: chatRoomUncheckedCreateNestedManyWithoutUserInput
    subscriptions?: subscriptionUncheckedCreateNestedManyWithoutUserInput
  }

  export type userCreateOrConnectWithoutCreateduserrolesInput = {
    where: userWhereUniqueInput
    create: XOR<userCreateWithoutCreateduserrolesInput, userUncheckedCreateWithoutCreateduserrolesInput>
  }

  export type roleCreateWithoutUserrolesInput = {
    id?: string
    name: string
    createdat?: Date | string
    updatedat?: Date | string | null
    issystemrole?: boolean
    createduser: userCreateNestedOneWithoutCreatedrolesInput
    updateduser?: userCreateNestedOneWithoutUpdatedrolesInput
    rolepermissions?: rolepermissionCreateNestedManyWithoutRoleInput
  }

  export type roleUncheckedCreateWithoutUserrolesInput = {
    id?: string
    name: string
    createdby: string
    createdat?: Date | string
    updatedby?: string | null
    updatedat?: Date | string | null
    issystemrole?: boolean
    rolepermissions?: rolepermissionUncheckedCreateNestedManyWithoutRoleInput
  }

  export type roleCreateOrConnectWithoutUserrolesInput = {
    where: roleWhereUniqueInput
    create: XOR<roleCreateWithoutUserrolesInput, roleUncheckedCreateWithoutUserrolesInput>
  }

  export type userCreateWithoutUpdateduserrolesInput = {
    id?: string
    firstname: string
    lastname: string
    phone?: string | null
    email: string
    password: string
    appLanguage?: string | null
    learningLanguage?: string | null
    learningLevel?: string | null
    theme?: string | null
    avatar?: string | null
    createdat?: Date | string
    updatedat?: Date | string | null
    status?: number
    lastentranceat?: Date | string | null
    lastexitat?: Date | string | null
    lastloginat?: Date | string | null
    stripeCustomerId?: string | null
    notificationuser?: notificationCreateNestedManyWithoutToInput
    createdapiclients?: apiclientCreateNestedManyWithoutCreateduserInput
    updatedapiclients?: apiclientCreateNestedManyWithoutUpdateduserInput
    createdpermissions?: permissionCreateNestedManyWithoutCreateduserInput
    updatedpermissions?: permissionCreateNestedManyWithoutUpdateduserInput
    refreshtokens?: refreshtokenCreateNestedManyWithoutUserInput
    createdroles?: roleCreateNestedManyWithoutCreateduserInput
    updatedroles?: roleCreateNestedManyWithoutUpdateduserInput
    createdrolepermissions?: rolepermissionCreateNestedManyWithoutCreateduserInput
    updatedrolepermissions?: rolepermissionCreateNestedManyWithoutUpdateduserInput
    createduser: userCreateNestedOneWithoutCreatedusersInput
    createdusers?: userCreateNestedManyWithoutCreateduserInput
    updateduser?: userCreateNestedOneWithoutUpdatedusersInput
    updatedusers?: userCreateNestedManyWithoutUpdateduserInput
    createduserpermissions?: userpermissionCreateNestedManyWithoutCreateduserInput
    updateduserpermissions?: userpermissionCreateNestedManyWithoutUpdateduserInput
    userpermissions?: userpermissionCreateNestedManyWithoutUserInput
    createduserroles?: userroleCreateNestedManyWithoutCreateduserInput
    userroles?: userroleCreateNestedManyWithoutUserInput
    language?: languagesCreateNestedManyWithoutUserInput
    learningProgress?: learningProgressCreateNestedManyWithoutUserInput
    chats?: chatCreateNestedManyWithoutUserInput
    chatRooms?: chatRoomCreateNestedManyWithoutUserInput
    subscriptions?: subscriptionCreateNestedManyWithoutUserInput
  }

  export type userUncheckedCreateWithoutUpdateduserrolesInput = {
    id?: string
    firstname: string
    lastname: string
    phone?: string | null
    email: string
    password: string
    appLanguage?: string | null
    learningLanguage?: string | null
    learningLevel?: string | null
    theme?: string | null
    avatar?: string | null
    createdby: string
    createdat?: Date | string
    updatedby?: string | null
    updatedat?: Date | string | null
    status?: number
    lastentranceat?: Date | string | null
    lastexitat?: Date | string | null
    lastloginat?: Date | string | null
    stripeCustomerId?: string | null
    notificationuser?: notificationUncheckedCreateNestedManyWithoutToInput
    createdapiclients?: apiclientUncheckedCreateNestedManyWithoutCreateduserInput
    updatedapiclients?: apiclientUncheckedCreateNestedManyWithoutUpdateduserInput
    createdpermissions?: permissionUncheckedCreateNestedManyWithoutCreateduserInput
    updatedpermissions?: permissionUncheckedCreateNestedManyWithoutUpdateduserInput
    refreshtokens?: refreshtokenUncheckedCreateNestedManyWithoutUserInput
    createdroles?: roleUncheckedCreateNestedManyWithoutCreateduserInput
    updatedroles?: roleUncheckedCreateNestedManyWithoutUpdateduserInput
    createdrolepermissions?: rolepermissionUncheckedCreateNestedManyWithoutCreateduserInput
    updatedrolepermissions?: rolepermissionUncheckedCreateNestedManyWithoutUpdateduserInput
    createdusers?: userUncheckedCreateNestedManyWithoutCreateduserInput
    updatedusers?: userUncheckedCreateNestedManyWithoutUpdateduserInput
    createduserpermissions?: userpermissionUncheckedCreateNestedManyWithoutCreateduserInput
    updateduserpermissions?: userpermissionUncheckedCreateNestedManyWithoutUpdateduserInput
    userpermissions?: userpermissionUncheckedCreateNestedManyWithoutUserInput
    createduserroles?: userroleUncheckedCreateNestedManyWithoutCreateduserInput
    userroles?: userroleUncheckedCreateNestedManyWithoutUserInput
    language?: languagesUncheckedCreateNestedManyWithoutUserInput
    learningProgress?: learningProgressUncheckedCreateNestedManyWithoutUserInput
    chats?: chatUncheckedCreateNestedManyWithoutUserInput
    chatRooms?: chatRoomUncheckedCreateNestedManyWithoutUserInput
    subscriptions?: subscriptionUncheckedCreateNestedManyWithoutUserInput
  }

  export type userCreateOrConnectWithoutUpdateduserrolesInput = {
    where: userWhereUniqueInput
    create: XOR<userCreateWithoutUpdateduserrolesInput, userUncheckedCreateWithoutUpdateduserrolesInput>
  }

  export type userCreateWithoutUserrolesInput = {
    id?: string
    firstname: string
    lastname: string
    phone?: string | null
    email: string
    password: string
    appLanguage?: string | null
    learningLanguage?: string | null
    learningLevel?: string | null
    theme?: string | null
    avatar?: string | null
    createdat?: Date | string
    updatedat?: Date | string | null
    status?: number
    lastentranceat?: Date | string | null
    lastexitat?: Date | string | null
    lastloginat?: Date | string | null
    stripeCustomerId?: string | null
    notificationuser?: notificationCreateNestedManyWithoutToInput
    createdapiclients?: apiclientCreateNestedManyWithoutCreateduserInput
    updatedapiclients?: apiclientCreateNestedManyWithoutUpdateduserInput
    createdpermissions?: permissionCreateNestedManyWithoutCreateduserInput
    updatedpermissions?: permissionCreateNestedManyWithoutUpdateduserInput
    refreshtokens?: refreshtokenCreateNestedManyWithoutUserInput
    createdroles?: roleCreateNestedManyWithoutCreateduserInput
    updatedroles?: roleCreateNestedManyWithoutUpdateduserInput
    createdrolepermissions?: rolepermissionCreateNestedManyWithoutCreateduserInput
    updatedrolepermissions?: rolepermissionCreateNestedManyWithoutUpdateduserInput
    createduser: userCreateNestedOneWithoutCreatedusersInput
    createdusers?: userCreateNestedManyWithoutCreateduserInput
    updateduser?: userCreateNestedOneWithoutUpdatedusersInput
    updatedusers?: userCreateNestedManyWithoutUpdateduserInput
    createduserpermissions?: userpermissionCreateNestedManyWithoutCreateduserInput
    updateduserpermissions?: userpermissionCreateNestedManyWithoutUpdateduserInput
    userpermissions?: userpermissionCreateNestedManyWithoutUserInput
    createduserroles?: userroleCreateNestedManyWithoutCreateduserInput
    updateduserroles?: userroleCreateNestedManyWithoutUpdateduserInput
    language?: languagesCreateNestedManyWithoutUserInput
    learningProgress?: learningProgressCreateNestedManyWithoutUserInput
    chats?: chatCreateNestedManyWithoutUserInput
    chatRooms?: chatRoomCreateNestedManyWithoutUserInput
    subscriptions?: subscriptionCreateNestedManyWithoutUserInput
  }

  export type userUncheckedCreateWithoutUserrolesInput = {
    id?: string
    firstname: string
    lastname: string
    phone?: string | null
    email: string
    password: string
    appLanguage?: string | null
    learningLanguage?: string | null
    learningLevel?: string | null
    theme?: string | null
    avatar?: string | null
    createdby: string
    createdat?: Date | string
    updatedby?: string | null
    updatedat?: Date | string | null
    status?: number
    lastentranceat?: Date | string | null
    lastexitat?: Date | string | null
    lastloginat?: Date | string | null
    stripeCustomerId?: string | null
    notificationuser?: notificationUncheckedCreateNestedManyWithoutToInput
    createdapiclients?: apiclientUncheckedCreateNestedManyWithoutCreateduserInput
    updatedapiclients?: apiclientUncheckedCreateNestedManyWithoutUpdateduserInput
    createdpermissions?: permissionUncheckedCreateNestedManyWithoutCreateduserInput
    updatedpermissions?: permissionUncheckedCreateNestedManyWithoutUpdateduserInput
    refreshtokens?: refreshtokenUncheckedCreateNestedManyWithoutUserInput
    createdroles?: roleUncheckedCreateNestedManyWithoutCreateduserInput
    updatedroles?: roleUncheckedCreateNestedManyWithoutUpdateduserInput
    createdrolepermissions?: rolepermissionUncheckedCreateNestedManyWithoutCreateduserInput
    updatedrolepermissions?: rolepermissionUncheckedCreateNestedManyWithoutUpdateduserInput
    createdusers?: userUncheckedCreateNestedManyWithoutCreateduserInput
    updatedusers?: userUncheckedCreateNestedManyWithoutUpdateduserInput
    createduserpermissions?: userpermissionUncheckedCreateNestedManyWithoutCreateduserInput
    updateduserpermissions?: userpermissionUncheckedCreateNestedManyWithoutUpdateduserInput
    userpermissions?: userpermissionUncheckedCreateNestedManyWithoutUserInput
    createduserroles?: userroleUncheckedCreateNestedManyWithoutCreateduserInput
    updateduserroles?: userroleUncheckedCreateNestedManyWithoutUpdateduserInput
    language?: languagesUncheckedCreateNestedManyWithoutUserInput
    learningProgress?: learningProgressUncheckedCreateNestedManyWithoutUserInput
    chats?: chatUncheckedCreateNestedManyWithoutUserInput
    chatRooms?: chatRoomUncheckedCreateNestedManyWithoutUserInput
    subscriptions?: subscriptionUncheckedCreateNestedManyWithoutUserInput
  }

  export type userCreateOrConnectWithoutUserrolesInput = {
    where: userWhereUniqueInput
    create: XOR<userCreateWithoutUserrolesInput, userUncheckedCreateWithoutUserrolesInput>
  }

  export type userUpsertWithoutCreateduserrolesInput = {
    update: XOR<userUpdateWithoutCreateduserrolesInput, userUncheckedUpdateWithoutCreateduserrolesInput>
    create: XOR<userCreateWithoutCreateduserrolesInput, userUncheckedCreateWithoutCreateduserrolesInput>
    where?: userWhereInput
  }

  export type userUpdateToOneWithWhereWithoutCreateduserrolesInput = {
    where?: userWhereInput
    data: XOR<userUpdateWithoutCreateduserrolesInput, userUncheckedUpdateWithoutCreateduserrolesInput>
  }

  export type userUpdateWithoutCreateduserrolesInput = {
    id?: StringFieldUpdateOperationsInput | string
    firstname?: StringFieldUpdateOperationsInput | string
    lastname?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    appLanguage?: NullableStringFieldUpdateOperationsInput | string | null
    learningLanguage?: NullableStringFieldUpdateOperationsInput | string | null
    learningLevel?: NullableStringFieldUpdateOperationsInput | string | null
    theme?: NullableStringFieldUpdateOperationsInput | string | null
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    createdat?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: IntFieldUpdateOperationsInput | number
    lastentranceat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastexitat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastloginat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    stripeCustomerId?: NullableStringFieldUpdateOperationsInput | string | null
    notificationuser?: notificationUpdateManyWithoutToNestedInput
    createdapiclients?: apiclientUpdateManyWithoutCreateduserNestedInput
    updatedapiclients?: apiclientUpdateManyWithoutUpdateduserNestedInput
    createdpermissions?: permissionUpdateManyWithoutCreateduserNestedInput
    updatedpermissions?: permissionUpdateManyWithoutUpdateduserNestedInput
    refreshtokens?: refreshtokenUpdateManyWithoutUserNestedInput
    createdroles?: roleUpdateManyWithoutCreateduserNestedInput
    updatedroles?: roleUpdateManyWithoutUpdateduserNestedInput
    createdrolepermissions?: rolepermissionUpdateManyWithoutCreateduserNestedInput
    updatedrolepermissions?: rolepermissionUpdateManyWithoutUpdateduserNestedInput
    createduser?: userUpdateOneRequiredWithoutCreatedusersNestedInput
    createdusers?: userUpdateManyWithoutCreateduserNestedInput
    updateduser?: userUpdateOneWithoutUpdatedusersNestedInput
    updatedusers?: userUpdateManyWithoutUpdateduserNestedInput
    createduserpermissions?: userpermissionUpdateManyWithoutCreateduserNestedInput
    updateduserpermissions?: userpermissionUpdateManyWithoutUpdateduserNestedInput
    userpermissions?: userpermissionUpdateManyWithoutUserNestedInput
    updateduserroles?: userroleUpdateManyWithoutUpdateduserNestedInput
    userroles?: userroleUpdateManyWithoutUserNestedInput
    language?: languagesUpdateManyWithoutUserNestedInput
    learningProgress?: learningProgressUpdateManyWithoutUserNestedInput
    chats?: chatUpdateManyWithoutUserNestedInput
    chatRooms?: chatRoomUpdateManyWithoutUserNestedInput
    subscriptions?: subscriptionUpdateManyWithoutUserNestedInput
  }

  export type userUncheckedUpdateWithoutCreateduserrolesInput = {
    id?: StringFieldUpdateOperationsInput | string
    firstname?: StringFieldUpdateOperationsInput | string
    lastname?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    appLanguage?: NullableStringFieldUpdateOperationsInput | string | null
    learningLanguage?: NullableStringFieldUpdateOperationsInput | string | null
    learningLevel?: NullableStringFieldUpdateOperationsInput | string | null
    theme?: NullableStringFieldUpdateOperationsInput | string | null
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    createdby?: StringFieldUpdateOperationsInput | string
    createdat?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedby?: NullableStringFieldUpdateOperationsInput | string | null
    updatedat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: IntFieldUpdateOperationsInput | number
    lastentranceat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastexitat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastloginat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    stripeCustomerId?: NullableStringFieldUpdateOperationsInput | string | null
    notificationuser?: notificationUncheckedUpdateManyWithoutToNestedInput
    createdapiclients?: apiclientUncheckedUpdateManyWithoutCreateduserNestedInput
    updatedapiclients?: apiclientUncheckedUpdateManyWithoutUpdateduserNestedInput
    createdpermissions?: permissionUncheckedUpdateManyWithoutCreateduserNestedInput
    updatedpermissions?: permissionUncheckedUpdateManyWithoutUpdateduserNestedInput
    refreshtokens?: refreshtokenUncheckedUpdateManyWithoutUserNestedInput
    createdroles?: roleUncheckedUpdateManyWithoutCreateduserNestedInput
    updatedroles?: roleUncheckedUpdateManyWithoutUpdateduserNestedInput
    createdrolepermissions?: rolepermissionUncheckedUpdateManyWithoutCreateduserNestedInput
    updatedrolepermissions?: rolepermissionUncheckedUpdateManyWithoutUpdateduserNestedInput
    createdusers?: userUncheckedUpdateManyWithoutCreateduserNestedInput
    updatedusers?: userUncheckedUpdateManyWithoutUpdateduserNestedInput
    createduserpermissions?: userpermissionUncheckedUpdateManyWithoutCreateduserNestedInput
    updateduserpermissions?: userpermissionUncheckedUpdateManyWithoutUpdateduserNestedInput
    userpermissions?: userpermissionUncheckedUpdateManyWithoutUserNestedInput
    updateduserroles?: userroleUncheckedUpdateManyWithoutUpdateduserNestedInput
    userroles?: userroleUncheckedUpdateManyWithoutUserNestedInput
    language?: languagesUncheckedUpdateManyWithoutUserNestedInput
    learningProgress?: learningProgressUncheckedUpdateManyWithoutUserNestedInput
    chats?: chatUncheckedUpdateManyWithoutUserNestedInput
    chatRooms?: chatRoomUncheckedUpdateManyWithoutUserNestedInput
    subscriptions?: subscriptionUncheckedUpdateManyWithoutUserNestedInput
  }

  export type roleUpsertWithoutUserrolesInput = {
    update: XOR<roleUpdateWithoutUserrolesInput, roleUncheckedUpdateWithoutUserrolesInput>
    create: XOR<roleCreateWithoutUserrolesInput, roleUncheckedCreateWithoutUserrolesInput>
    where?: roleWhereInput
  }

  export type roleUpdateToOneWithWhereWithoutUserrolesInput = {
    where?: roleWhereInput
    data: XOR<roleUpdateWithoutUserrolesInput, roleUncheckedUpdateWithoutUserrolesInput>
  }

  export type roleUpdateWithoutUserrolesInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    createdat?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    issystemrole?: BoolFieldUpdateOperationsInput | boolean
    createduser?: userUpdateOneRequiredWithoutCreatedrolesNestedInput
    updateduser?: userUpdateOneWithoutUpdatedrolesNestedInput
    rolepermissions?: rolepermissionUpdateManyWithoutRoleNestedInput
  }

  export type roleUncheckedUpdateWithoutUserrolesInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    createdby?: StringFieldUpdateOperationsInput | string
    createdat?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedby?: NullableStringFieldUpdateOperationsInput | string | null
    updatedat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    issystemrole?: BoolFieldUpdateOperationsInput | boolean
    rolepermissions?: rolepermissionUncheckedUpdateManyWithoutRoleNestedInput
  }

  export type userUpsertWithoutUpdateduserrolesInput = {
    update: XOR<userUpdateWithoutUpdateduserrolesInput, userUncheckedUpdateWithoutUpdateduserrolesInput>
    create: XOR<userCreateWithoutUpdateduserrolesInput, userUncheckedCreateWithoutUpdateduserrolesInput>
    where?: userWhereInput
  }

  export type userUpdateToOneWithWhereWithoutUpdateduserrolesInput = {
    where?: userWhereInput
    data: XOR<userUpdateWithoutUpdateduserrolesInput, userUncheckedUpdateWithoutUpdateduserrolesInput>
  }

  export type userUpdateWithoutUpdateduserrolesInput = {
    id?: StringFieldUpdateOperationsInput | string
    firstname?: StringFieldUpdateOperationsInput | string
    lastname?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    appLanguage?: NullableStringFieldUpdateOperationsInput | string | null
    learningLanguage?: NullableStringFieldUpdateOperationsInput | string | null
    learningLevel?: NullableStringFieldUpdateOperationsInput | string | null
    theme?: NullableStringFieldUpdateOperationsInput | string | null
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    createdat?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: IntFieldUpdateOperationsInput | number
    lastentranceat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastexitat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastloginat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    stripeCustomerId?: NullableStringFieldUpdateOperationsInput | string | null
    notificationuser?: notificationUpdateManyWithoutToNestedInput
    createdapiclients?: apiclientUpdateManyWithoutCreateduserNestedInput
    updatedapiclients?: apiclientUpdateManyWithoutUpdateduserNestedInput
    createdpermissions?: permissionUpdateManyWithoutCreateduserNestedInput
    updatedpermissions?: permissionUpdateManyWithoutUpdateduserNestedInput
    refreshtokens?: refreshtokenUpdateManyWithoutUserNestedInput
    createdroles?: roleUpdateManyWithoutCreateduserNestedInput
    updatedroles?: roleUpdateManyWithoutUpdateduserNestedInput
    createdrolepermissions?: rolepermissionUpdateManyWithoutCreateduserNestedInput
    updatedrolepermissions?: rolepermissionUpdateManyWithoutUpdateduserNestedInput
    createduser?: userUpdateOneRequiredWithoutCreatedusersNestedInput
    createdusers?: userUpdateManyWithoutCreateduserNestedInput
    updateduser?: userUpdateOneWithoutUpdatedusersNestedInput
    updatedusers?: userUpdateManyWithoutUpdateduserNestedInput
    createduserpermissions?: userpermissionUpdateManyWithoutCreateduserNestedInput
    updateduserpermissions?: userpermissionUpdateManyWithoutUpdateduserNestedInput
    userpermissions?: userpermissionUpdateManyWithoutUserNestedInput
    createduserroles?: userroleUpdateManyWithoutCreateduserNestedInput
    userroles?: userroleUpdateManyWithoutUserNestedInput
    language?: languagesUpdateManyWithoutUserNestedInput
    learningProgress?: learningProgressUpdateManyWithoutUserNestedInput
    chats?: chatUpdateManyWithoutUserNestedInput
    chatRooms?: chatRoomUpdateManyWithoutUserNestedInput
    subscriptions?: subscriptionUpdateManyWithoutUserNestedInput
  }

  export type userUncheckedUpdateWithoutUpdateduserrolesInput = {
    id?: StringFieldUpdateOperationsInput | string
    firstname?: StringFieldUpdateOperationsInput | string
    lastname?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    appLanguage?: NullableStringFieldUpdateOperationsInput | string | null
    learningLanguage?: NullableStringFieldUpdateOperationsInput | string | null
    learningLevel?: NullableStringFieldUpdateOperationsInput | string | null
    theme?: NullableStringFieldUpdateOperationsInput | string | null
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    createdby?: StringFieldUpdateOperationsInput | string
    createdat?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedby?: NullableStringFieldUpdateOperationsInput | string | null
    updatedat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: IntFieldUpdateOperationsInput | number
    lastentranceat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastexitat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastloginat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    stripeCustomerId?: NullableStringFieldUpdateOperationsInput | string | null
    notificationuser?: notificationUncheckedUpdateManyWithoutToNestedInput
    createdapiclients?: apiclientUncheckedUpdateManyWithoutCreateduserNestedInput
    updatedapiclients?: apiclientUncheckedUpdateManyWithoutUpdateduserNestedInput
    createdpermissions?: permissionUncheckedUpdateManyWithoutCreateduserNestedInput
    updatedpermissions?: permissionUncheckedUpdateManyWithoutUpdateduserNestedInput
    refreshtokens?: refreshtokenUncheckedUpdateManyWithoutUserNestedInput
    createdroles?: roleUncheckedUpdateManyWithoutCreateduserNestedInput
    updatedroles?: roleUncheckedUpdateManyWithoutUpdateduserNestedInput
    createdrolepermissions?: rolepermissionUncheckedUpdateManyWithoutCreateduserNestedInput
    updatedrolepermissions?: rolepermissionUncheckedUpdateManyWithoutUpdateduserNestedInput
    createdusers?: userUncheckedUpdateManyWithoutCreateduserNestedInput
    updatedusers?: userUncheckedUpdateManyWithoutUpdateduserNestedInput
    createduserpermissions?: userpermissionUncheckedUpdateManyWithoutCreateduserNestedInput
    updateduserpermissions?: userpermissionUncheckedUpdateManyWithoutUpdateduserNestedInput
    userpermissions?: userpermissionUncheckedUpdateManyWithoutUserNestedInput
    createduserroles?: userroleUncheckedUpdateManyWithoutCreateduserNestedInput
    userroles?: userroleUncheckedUpdateManyWithoutUserNestedInput
    language?: languagesUncheckedUpdateManyWithoutUserNestedInput
    learningProgress?: learningProgressUncheckedUpdateManyWithoutUserNestedInput
    chats?: chatUncheckedUpdateManyWithoutUserNestedInput
    chatRooms?: chatRoomUncheckedUpdateManyWithoutUserNestedInput
    subscriptions?: subscriptionUncheckedUpdateManyWithoutUserNestedInput
  }

  export type userUpsertWithoutUserrolesInput = {
    update: XOR<userUpdateWithoutUserrolesInput, userUncheckedUpdateWithoutUserrolesInput>
    create: XOR<userCreateWithoutUserrolesInput, userUncheckedCreateWithoutUserrolesInput>
    where?: userWhereInput
  }

  export type userUpdateToOneWithWhereWithoutUserrolesInput = {
    where?: userWhereInput
    data: XOR<userUpdateWithoutUserrolesInput, userUncheckedUpdateWithoutUserrolesInput>
  }

  export type userUpdateWithoutUserrolesInput = {
    id?: StringFieldUpdateOperationsInput | string
    firstname?: StringFieldUpdateOperationsInput | string
    lastname?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    appLanguage?: NullableStringFieldUpdateOperationsInput | string | null
    learningLanguage?: NullableStringFieldUpdateOperationsInput | string | null
    learningLevel?: NullableStringFieldUpdateOperationsInput | string | null
    theme?: NullableStringFieldUpdateOperationsInput | string | null
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    createdat?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: IntFieldUpdateOperationsInput | number
    lastentranceat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastexitat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastloginat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    stripeCustomerId?: NullableStringFieldUpdateOperationsInput | string | null
    notificationuser?: notificationUpdateManyWithoutToNestedInput
    createdapiclients?: apiclientUpdateManyWithoutCreateduserNestedInput
    updatedapiclients?: apiclientUpdateManyWithoutUpdateduserNestedInput
    createdpermissions?: permissionUpdateManyWithoutCreateduserNestedInput
    updatedpermissions?: permissionUpdateManyWithoutUpdateduserNestedInput
    refreshtokens?: refreshtokenUpdateManyWithoutUserNestedInput
    createdroles?: roleUpdateManyWithoutCreateduserNestedInput
    updatedroles?: roleUpdateManyWithoutUpdateduserNestedInput
    createdrolepermissions?: rolepermissionUpdateManyWithoutCreateduserNestedInput
    updatedrolepermissions?: rolepermissionUpdateManyWithoutUpdateduserNestedInput
    createduser?: userUpdateOneRequiredWithoutCreatedusersNestedInput
    createdusers?: userUpdateManyWithoutCreateduserNestedInput
    updateduser?: userUpdateOneWithoutUpdatedusersNestedInput
    updatedusers?: userUpdateManyWithoutUpdateduserNestedInput
    createduserpermissions?: userpermissionUpdateManyWithoutCreateduserNestedInput
    updateduserpermissions?: userpermissionUpdateManyWithoutUpdateduserNestedInput
    userpermissions?: userpermissionUpdateManyWithoutUserNestedInput
    createduserroles?: userroleUpdateManyWithoutCreateduserNestedInput
    updateduserroles?: userroleUpdateManyWithoutUpdateduserNestedInput
    language?: languagesUpdateManyWithoutUserNestedInput
    learningProgress?: learningProgressUpdateManyWithoutUserNestedInput
    chats?: chatUpdateManyWithoutUserNestedInput
    chatRooms?: chatRoomUpdateManyWithoutUserNestedInput
    subscriptions?: subscriptionUpdateManyWithoutUserNestedInput
  }

  export type userUncheckedUpdateWithoutUserrolesInput = {
    id?: StringFieldUpdateOperationsInput | string
    firstname?: StringFieldUpdateOperationsInput | string
    lastname?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    appLanguage?: NullableStringFieldUpdateOperationsInput | string | null
    learningLanguage?: NullableStringFieldUpdateOperationsInput | string | null
    learningLevel?: NullableStringFieldUpdateOperationsInput | string | null
    theme?: NullableStringFieldUpdateOperationsInput | string | null
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    createdby?: StringFieldUpdateOperationsInput | string
    createdat?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedby?: NullableStringFieldUpdateOperationsInput | string | null
    updatedat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: IntFieldUpdateOperationsInput | number
    lastentranceat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastexitat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastloginat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    stripeCustomerId?: NullableStringFieldUpdateOperationsInput | string | null
    notificationuser?: notificationUncheckedUpdateManyWithoutToNestedInput
    createdapiclients?: apiclientUncheckedUpdateManyWithoutCreateduserNestedInput
    updatedapiclients?: apiclientUncheckedUpdateManyWithoutUpdateduserNestedInput
    createdpermissions?: permissionUncheckedUpdateManyWithoutCreateduserNestedInput
    updatedpermissions?: permissionUncheckedUpdateManyWithoutUpdateduserNestedInput
    refreshtokens?: refreshtokenUncheckedUpdateManyWithoutUserNestedInput
    createdroles?: roleUncheckedUpdateManyWithoutCreateduserNestedInput
    updatedroles?: roleUncheckedUpdateManyWithoutUpdateduserNestedInput
    createdrolepermissions?: rolepermissionUncheckedUpdateManyWithoutCreateduserNestedInput
    updatedrolepermissions?: rolepermissionUncheckedUpdateManyWithoutUpdateduserNestedInput
    createdusers?: userUncheckedUpdateManyWithoutCreateduserNestedInput
    updatedusers?: userUncheckedUpdateManyWithoutUpdateduserNestedInput
    createduserpermissions?: userpermissionUncheckedUpdateManyWithoutCreateduserNestedInput
    updateduserpermissions?: userpermissionUncheckedUpdateManyWithoutUpdateduserNestedInput
    userpermissions?: userpermissionUncheckedUpdateManyWithoutUserNestedInput
    createduserroles?: userroleUncheckedUpdateManyWithoutCreateduserNestedInput
    updateduserroles?: userroleUncheckedUpdateManyWithoutUpdateduserNestedInput
    language?: languagesUncheckedUpdateManyWithoutUserNestedInput
    learningProgress?: learningProgressUncheckedUpdateManyWithoutUserNestedInput
    chats?: chatUncheckedUpdateManyWithoutUserNestedInput
    chatRooms?: chatRoomUncheckedUpdateManyWithoutUserNestedInput
    subscriptions?: subscriptionUncheckedUpdateManyWithoutUserNestedInput
  }

  export type packageFeatureCreateManyPackageInput = {
    id?: string
    feature: string
    available?: boolean
  }

  export type priceCreateManyPackageInput = {
    id?: string
    currency?: $Enums.Currency
    amount: Decimal | DecimalJsLike | number | string
  }

  export type subscriptionCreateManyPackageInput = {
    id?: string
    userId: string
    startDate?: Date | string
    endDate: Date | string
    status?: $Enums.SubscriptionStatus
    lastPaymentStatus?: string | null
    stripeCustomerId?: string | null
    stripePaymentId?: string | null
    stripePriceId?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type packageFeatureUpdateWithoutPackageInput = {
    id?: StringFieldUpdateOperationsInput | string
    feature?: StringFieldUpdateOperationsInput | string
    available?: BoolFieldUpdateOperationsInput | boolean
  }

  export type packageFeatureUncheckedUpdateWithoutPackageInput = {
    id?: StringFieldUpdateOperationsInput | string
    feature?: StringFieldUpdateOperationsInput | string
    available?: BoolFieldUpdateOperationsInput | boolean
  }

  export type packageFeatureUncheckedUpdateManyWithoutPackageInput = {
    id?: StringFieldUpdateOperationsInput | string
    feature?: StringFieldUpdateOperationsInput | string
    available?: BoolFieldUpdateOperationsInput | boolean
  }

  export type priceUpdateWithoutPackageInput = {
    id?: StringFieldUpdateOperationsInput | string
    currency?: EnumCurrencyFieldUpdateOperationsInput | $Enums.Currency
    amount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
  }

  export type priceUncheckedUpdateWithoutPackageInput = {
    id?: StringFieldUpdateOperationsInput | string
    currency?: EnumCurrencyFieldUpdateOperationsInput | $Enums.Currency
    amount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
  }

  export type priceUncheckedUpdateManyWithoutPackageInput = {
    id?: StringFieldUpdateOperationsInput | string
    currency?: EnumCurrencyFieldUpdateOperationsInput | $Enums.Currency
    amount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
  }

  export type subscriptionUpdateWithoutPackageInput = {
    id?: StringFieldUpdateOperationsInput | string
    startDate?: DateTimeFieldUpdateOperationsInput | Date | string
    endDate?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: EnumSubscriptionStatusFieldUpdateOperationsInput | $Enums.SubscriptionStatus
    lastPaymentStatus?: NullableStringFieldUpdateOperationsInput | string | null
    stripeCustomerId?: NullableStringFieldUpdateOperationsInput | string | null
    stripePaymentId?: NullableStringFieldUpdateOperationsInput | string | null
    stripePriceId?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    user?: userUpdateOneRequiredWithoutSubscriptionsNestedInput
  }

  export type subscriptionUncheckedUpdateWithoutPackageInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    startDate?: DateTimeFieldUpdateOperationsInput | Date | string
    endDate?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: EnumSubscriptionStatusFieldUpdateOperationsInput | $Enums.SubscriptionStatus
    lastPaymentStatus?: NullableStringFieldUpdateOperationsInput | string | null
    stripeCustomerId?: NullableStringFieldUpdateOperationsInput | string | null
    stripePaymentId?: NullableStringFieldUpdateOperationsInput | string | null
    stripePriceId?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type subscriptionUncheckedUpdateManyWithoutPackageInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    startDate?: DateTimeFieldUpdateOperationsInput | Date | string
    endDate?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: EnumSubscriptionStatusFieldUpdateOperationsInput | $Enums.SubscriptionStatus
    lastPaymentStatus?: NullableStringFieldUpdateOperationsInput | string | null
    stripeCustomerId?: NullableStringFieldUpdateOperationsInput | string | null
    stripePaymentId?: NullableStringFieldUpdateOperationsInput | string | null
    stripePriceId?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type chatCreateManyRoomInput = {
    id?: string
    userId: string
    message: string
    role?: string
    createdAt?: Date | string
    updatedAt?: Date | string | null
  }

  export type chatUpdateWithoutRoomInput = {
    id?: StringFieldUpdateOperationsInput | string
    message?: StringFieldUpdateOperationsInput | string
    role?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    user?: userUpdateOneRequiredWithoutChatsNestedInput
  }

  export type chatUncheckedUpdateWithoutRoomInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    message?: StringFieldUpdateOperationsInput | string
    role?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type chatUncheckedUpdateManyWithoutRoomInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    message?: StringFieldUpdateOperationsInput | string
    role?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type learningProgressCreateManyLanguageInput = {
    id?: string
    userid: string
    progress?: number
    createdat?: Date | string
    updatedat?: Date | string | null
  }

  export type learningProgressUpdateWithoutLanguageInput = {
    id?: StringFieldUpdateOperationsInput | string
    progress?: IntFieldUpdateOperationsInput | number
    createdat?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    user?: userUpdateOneRequiredWithoutLearningProgressNestedInput
  }

  export type learningProgressUncheckedUpdateWithoutLanguageInput = {
    id?: StringFieldUpdateOperationsInput | string
    userid?: StringFieldUpdateOperationsInput | string
    progress?: IntFieldUpdateOperationsInput | number
    createdat?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type learningProgressUncheckedUpdateManyWithoutLanguageInput = {
    id?: StringFieldUpdateOperationsInput | string
    userid?: StringFieldUpdateOperationsInput | string
    progress?: IntFieldUpdateOperationsInput | number
    createdat?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type userUpdateWithoutLanguageInput = {
    id?: StringFieldUpdateOperationsInput | string
    firstname?: StringFieldUpdateOperationsInput | string
    lastname?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    appLanguage?: NullableStringFieldUpdateOperationsInput | string | null
    learningLanguage?: NullableStringFieldUpdateOperationsInput | string | null
    learningLevel?: NullableStringFieldUpdateOperationsInput | string | null
    theme?: NullableStringFieldUpdateOperationsInput | string | null
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    createdat?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: IntFieldUpdateOperationsInput | number
    lastentranceat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastexitat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastloginat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    stripeCustomerId?: NullableStringFieldUpdateOperationsInput | string | null
    notificationuser?: notificationUpdateManyWithoutToNestedInput
    createdapiclients?: apiclientUpdateManyWithoutCreateduserNestedInput
    updatedapiclients?: apiclientUpdateManyWithoutUpdateduserNestedInput
    createdpermissions?: permissionUpdateManyWithoutCreateduserNestedInput
    updatedpermissions?: permissionUpdateManyWithoutUpdateduserNestedInput
    refreshtokens?: refreshtokenUpdateManyWithoutUserNestedInput
    createdroles?: roleUpdateManyWithoutCreateduserNestedInput
    updatedroles?: roleUpdateManyWithoutUpdateduserNestedInput
    createdrolepermissions?: rolepermissionUpdateManyWithoutCreateduserNestedInput
    updatedrolepermissions?: rolepermissionUpdateManyWithoutUpdateduserNestedInput
    createduser?: userUpdateOneRequiredWithoutCreatedusersNestedInput
    createdusers?: userUpdateManyWithoutCreateduserNestedInput
    updateduser?: userUpdateOneWithoutUpdatedusersNestedInput
    updatedusers?: userUpdateManyWithoutUpdateduserNestedInput
    createduserpermissions?: userpermissionUpdateManyWithoutCreateduserNestedInput
    updateduserpermissions?: userpermissionUpdateManyWithoutUpdateduserNestedInput
    userpermissions?: userpermissionUpdateManyWithoutUserNestedInput
    createduserroles?: userroleUpdateManyWithoutCreateduserNestedInput
    updateduserroles?: userroleUpdateManyWithoutUpdateduserNestedInput
    userroles?: userroleUpdateManyWithoutUserNestedInput
    learningProgress?: learningProgressUpdateManyWithoutUserNestedInput
    chats?: chatUpdateManyWithoutUserNestedInput
    chatRooms?: chatRoomUpdateManyWithoutUserNestedInput
    subscriptions?: subscriptionUpdateManyWithoutUserNestedInput
  }

  export type userUncheckedUpdateWithoutLanguageInput = {
    id?: StringFieldUpdateOperationsInput | string
    firstname?: StringFieldUpdateOperationsInput | string
    lastname?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    appLanguage?: NullableStringFieldUpdateOperationsInput | string | null
    learningLanguage?: NullableStringFieldUpdateOperationsInput | string | null
    learningLevel?: NullableStringFieldUpdateOperationsInput | string | null
    theme?: NullableStringFieldUpdateOperationsInput | string | null
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    createdby?: StringFieldUpdateOperationsInput | string
    createdat?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedby?: NullableStringFieldUpdateOperationsInput | string | null
    updatedat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: IntFieldUpdateOperationsInput | number
    lastentranceat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastexitat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastloginat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    stripeCustomerId?: NullableStringFieldUpdateOperationsInput | string | null
    notificationuser?: notificationUncheckedUpdateManyWithoutToNestedInput
    createdapiclients?: apiclientUncheckedUpdateManyWithoutCreateduserNestedInput
    updatedapiclients?: apiclientUncheckedUpdateManyWithoutUpdateduserNestedInput
    createdpermissions?: permissionUncheckedUpdateManyWithoutCreateduserNestedInput
    updatedpermissions?: permissionUncheckedUpdateManyWithoutUpdateduserNestedInput
    refreshtokens?: refreshtokenUncheckedUpdateManyWithoutUserNestedInput
    createdroles?: roleUncheckedUpdateManyWithoutCreateduserNestedInput
    updatedroles?: roleUncheckedUpdateManyWithoutUpdateduserNestedInput
    createdrolepermissions?: rolepermissionUncheckedUpdateManyWithoutCreateduserNestedInput
    updatedrolepermissions?: rolepermissionUncheckedUpdateManyWithoutUpdateduserNestedInput
    createdusers?: userUncheckedUpdateManyWithoutCreateduserNestedInput
    updatedusers?: userUncheckedUpdateManyWithoutUpdateduserNestedInput
    createduserpermissions?: userpermissionUncheckedUpdateManyWithoutCreateduserNestedInput
    updateduserpermissions?: userpermissionUncheckedUpdateManyWithoutUpdateduserNestedInput
    userpermissions?: userpermissionUncheckedUpdateManyWithoutUserNestedInput
    createduserroles?: userroleUncheckedUpdateManyWithoutCreateduserNestedInput
    updateduserroles?: userroleUncheckedUpdateManyWithoutUpdateduserNestedInput
    userroles?: userroleUncheckedUpdateManyWithoutUserNestedInput
    learningProgress?: learningProgressUncheckedUpdateManyWithoutUserNestedInput
    chats?: chatUncheckedUpdateManyWithoutUserNestedInput
    chatRooms?: chatRoomUncheckedUpdateManyWithoutUserNestedInput
    subscriptions?: subscriptionUncheckedUpdateManyWithoutUserNestedInput
  }

  export type userUncheckedUpdateManyWithoutLanguageInput = {
    id?: StringFieldUpdateOperationsInput | string
    firstname?: StringFieldUpdateOperationsInput | string
    lastname?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    appLanguage?: NullableStringFieldUpdateOperationsInput | string | null
    learningLanguage?: NullableStringFieldUpdateOperationsInput | string | null
    learningLevel?: NullableStringFieldUpdateOperationsInput | string | null
    theme?: NullableStringFieldUpdateOperationsInput | string | null
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    createdby?: StringFieldUpdateOperationsInput | string
    createdat?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedby?: NullableStringFieldUpdateOperationsInput | string | null
    updatedat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: IntFieldUpdateOperationsInput | number
    lastentranceat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastexitat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastloginat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    stripeCustomerId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type rolepermissionCreateManyRoleInput = {
    id?: string
    permissionid: string
    createdat?: Date | string
    createdby: string
    updatedby?: string | null
    updatedat?: Date | string | null
  }

  export type userroleCreateManyRoleInput = {
    id?: string
    userid: string
    createdby: string
    createdat?: Date | string
    updatedby?: string | null
    updatedat?: Date | string | null
  }

  export type rolepermissionUpdateWithoutRoleInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdat?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createduser?: userUpdateOneRequiredWithoutCreatedrolepermissionsNestedInput
    permission?: permissionUpdateOneRequiredWithoutRolepermissionsNestedInput
    updateduser?: userUpdateOneWithoutUpdatedrolepermissionsNestedInput
  }

  export type rolepermissionUncheckedUpdateWithoutRoleInput = {
    id?: StringFieldUpdateOperationsInput | string
    permissionid?: StringFieldUpdateOperationsInput | string
    createdat?: DateTimeFieldUpdateOperationsInput | Date | string
    createdby?: StringFieldUpdateOperationsInput | string
    updatedby?: NullableStringFieldUpdateOperationsInput | string | null
    updatedat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type rolepermissionUncheckedUpdateManyWithoutRoleInput = {
    id?: StringFieldUpdateOperationsInput | string
    permissionid?: StringFieldUpdateOperationsInput | string
    createdat?: DateTimeFieldUpdateOperationsInput | Date | string
    createdby?: StringFieldUpdateOperationsInput | string
    updatedby?: NullableStringFieldUpdateOperationsInput | string | null
    updatedat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type userroleUpdateWithoutRoleInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdat?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createduser?: userUpdateOneRequiredWithoutCreateduserrolesNestedInput
    updateduser?: userUpdateOneWithoutUpdateduserrolesNestedInput
    user?: userUpdateOneRequiredWithoutUserrolesNestedInput
  }

  export type userroleUncheckedUpdateWithoutRoleInput = {
    id?: StringFieldUpdateOperationsInput | string
    userid?: StringFieldUpdateOperationsInput | string
    createdby?: StringFieldUpdateOperationsInput | string
    createdat?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedby?: NullableStringFieldUpdateOperationsInput | string | null
    updatedat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type userroleUncheckedUpdateManyWithoutRoleInput = {
    id?: StringFieldUpdateOperationsInput | string
    userid?: StringFieldUpdateOperationsInput | string
    createdby?: StringFieldUpdateOperationsInput | string
    createdat?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedby?: NullableStringFieldUpdateOperationsInput | string | null
    updatedat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type rolepermissionCreateManyPermissionInput = {
    id?: string
    roleid: string
    createdat?: Date | string
    createdby: string
    updatedby?: string | null
    updatedat?: Date | string | null
  }

  export type userpermissionCreateManyPermissionInput = {
    id?: string
    userid: string
    createdby: string
    createdat?: Date | string
    updatedby?: string | null
    updatedat?: Date | string | null
  }

  export type rolepermissionUpdateWithoutPermissionInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdat?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createduser?: userUpdateOneRequiredWithoutCreatedrolepermissionsNestedInput
    role?: roleUpdateOneRequiredWithoutRolepermissionsNestedInput
    updateduser?: userUpdateOneWithoutUpdatedrolepermissionsNestedInput
  }

  export type rolepermissionUncheckedUpdateWithoutPermissionInput = {
    id?: StringFieldUpdateOperationsInput | string
    roleid?: StringFieldUpdateOperationsInput | string
    createdat?: DateTimeFieldUpdateOperationsInput | Date | string
    createdby?: StringFieldUpdateOperationsInput | string
    updatedby?: NullableStringFieldUpdateOperationsInput | string | null
    updatedat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type rolepermissionUncheckedUpdateManyWithoutPermissionInput = {
    id?: StringFieldUpdateOperationsInput | string
    roleid?: StringFieldUpdateOperationsInput | string
    createdat?: DateTimeFieldUpdateOperationsInput | Date | string
    createdby?: StringFieldUpdateOperationsInput | string
    updatedby?: NullableStringFieldUpdateOperationsInput | string | null
    updatedat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type userpermissionUpdateWithoutPermissionInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdat?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createduser?: userUpdateOneRequiredWithoutCreateduserpermissionsNestedInput
    updateduser?: userUpdateOneWithoutUpdateduserpermissionsNestedInput
    user?: userUpdateOneRequiredWithoutUserpermissionsNestedInput
  }

  export type userpermissionUncheckedUpdateWithoutPermissionInput = {
    id?: StringFieldUpdateOperationsInput | string
    userid?: StringFieldUpdateOperationsInput | string
    createdby?: StringFieldUpdateOperationsInput | string
    createdat?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedby?: NullableStringFieldUpdateOperationsInput | string | null
    updatedat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type userpermissionUncheckedUpdateManyWithoutPermissionInput = {
    id?: StringFieldUpdateOperationsInput | string
    userid?: StringFieldUpdateOperationsInput | string
    createdby?: StringFieldUpdateOperationsInput | string
    createdat?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedby?: NullableStringFieldUpdateOperationsInput | string | null
    updatedat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type notificationCreateManyToInput = {
    id?: string
    message: string
    url: string
    createdby: number
    createdat?: Date | string
    readedat?: Date | string | null
  }

  export type apiclientCreateManyCreateduserInput = {
    id?: string
    name: string
    key: string
    secret: string
    type: number
    createdat?: Date | string
    updatedat?: Date | string | null
    updatedby?: string | null
    isactive: boolean
  }

  export type apiclientCreateManyUpdateduserInput = {
    id?: string
    name: string
    key: string
    secret: string
    type: number
    createdat?: Date | string
    createdby: string
    updatedat?: Date | string | null
    isactive: boolean
  }

  export type permissionCreateManyCreateduserInput = {
    id?: string
    name: string
    value: string
    group: string
    description: string
    createdat?: Date | string
    updatedby?: string | null
    updatedat?: Date | string | null
  }

  export type permissionCreateManyUpdateduserInput = {
    id?: string
    name: string
    value: string
    group: string
    description: string
    createdby: string
    createdat?: Date | string
    updatedat?: Date | string | null
  }

  export type refreshtokenCreateManyUserInput = {
    id?: string
    token: string
    createdat?: Date | string
    updatedat?: Date | string | null
    expiresat?: Date | string | null
  }

  export type roleCreateManyCreateduserInput = {
    id?: string
    name: string
    createdat?: Date | string
    updatedby?: string | null
    updatedat?: Date | string | null
    issystemrole?: boolean
  }

  export type roleCreateManyUpdateduserInput = {
    id?: string
    name: string
    createdby: string
    createdat?: Date | string
    updatedat?: Date | string | null
    issystemrole?: boolean
  }

  export type rolepermissionCreateManyCreateduserInput = {
    id?: string
    roleid: string
    permissionid: string
    createdat?: Date | string
    updatedby?: string | null
    updatedat?: Date | string | null
  }

  export type rolepermissionCreateManyUpdateduserInput = {
    id?: string
    roleid: string
    permissionid: string
    createdat?: Date | string
    createdby: string
    updatedat?: Date | string | null
  }

  export type userCreateManyCreateduserInput = {
    id?: string
    firstname: string
    lastname: string
    phone?: string | null
    email: string
    password: string
    appLanguage?: string | null
    learningLanguage?: string | null
    learningLevel?: string | null
    theme?: string | null
    avatar?: string | null
    createdat?: Date | string
    updatedby?: string | null
    updatedat?: Date | string | null
    status?: number
    lastentranceat?: Date | string | null
    lastexitat?: Date | string | null
    lastloginat?: Date | string | null
    stripeCustomerId?: string | null
  }

  export type userCreateManyUpdateduserInput = {
    id?: string
    firstname: string
    lastname: string
    phone?: string | null
    email: string
    password: string
    appLanguage?: string | null
    learningLanguage?: string | null
    learningLevel?: string | null
    theme?: string | null
    avatar?: string | null
    createdby: string
    createdat?: Date | string
    updatedat?: Date | string | null
    status?: number
    lastentranceat?: Date | string | null
    lastexitat?: Date | string | null
    lastloginat?: Date | string | null
    stripeCustomerId?: string | null
  }

  export type userpermissionCreateManyCreateduserInput = {
    id?: string
    userid: string
    permissionid: string
    createdat?: Date | string
    updatedby?: string | null
    updatedat?: Date | string | null
  }

  export type userpermissionCreateManyUpdateduserInput = {
    id?: string
    userid: string
    permissionid: string
    createdby: string
    createdat?: Date | string
    updatedat?: Date | string | null
  }

  export type userpermissionCreateManyUserInput = {
    id?: string
    permissionid: string
    createdby: string
    createdat?: Date | string
    updatedby?: string | null
    updatedat?: Date | string | null
  }

  export type userroleCreateManyCreateduserInput = {
    id?: string
    userid: string
    roleid: string
    createdat?: Date | string
    updatedby?: string | null
    updatedat?: Date | string | null
  }

  export type userroleCreateManyUpdateduserInput = {
    id?: string
    userid: string
    roleid: string
    createdby: string
    createdat?: Date | string
    updatedat?: Date | string | null
  }

  export type userroleCreateManyUserInput = {
    id?: string
    roleid: string
    createdby: string
    createdat?: Date | string
    updatedby?: string | null
    updatedat?: Date | string | null
  }

  export type learningProgressCreateManyUserInput = {
    id?: string
    languageID: string
    progress?: number
    createdat?: Date | string
    updatedat?: Date | string | null
  }

  export type chatCreateManyUserInput = {
    id?: string
    roomId: string
    message: string
    role?: string
    createdAt?: Date | string
    updatedAt?: Date | string | null
  }

  export type chatRoomCreateManyUserInput = {
    id?: string
    title?: string
    language: string
    createdAt?: Date | string
    updatedAt?: Date | string | null
  }

  export type subscriptionCreateManyUserInput = {
    id?: string
    packageId: string
    startDate?: Date | string
    endDate: Date | string
    status?: $Enums.SubscriptionStatus
    lastPaymentStatus?: string | null
    stripeCustomerId?: string | null
    stripePaymentId?: string | null
    stripePriceId?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type notificationUpdateWithoutToInput = {
    id?: StringFieldUpdateOperationsInput | string
    message?: StringFieldUpdateOperationsInput | string
    url?: StringFieldUpdateOperationsInput | string
    createdby?: IntFieldUpdateOperationsInput | number
    createdat?: DateTimeFieldUpdateOperationsInput | Date | string
    readedat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type notificationUncheckedUpdateWithoutToInput = {
    id?: StringFieldUpdateOperationsInput | string
    message?: StringFieldUpdateOperationsInput | string
    url?: StringFieldUpdateOperationsInput | string
    createdby?: IntFieldUpdateOperationsInput | number
    createdat?: DateTimeFieldUpdateOperationsInput | Date | string
    readedat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type notificationUncheckedUpdateManyWithoutToInput = {
    id?: StringFieldUpdateOperationsInput | string
    message?: StringFieldUpdateOperationsInput | string
    url?: StringFieldUpdateOperationsInput | string
    createdby?: IntFieldUpdateOperationsInput | number
    createdat?: DateTimeFieldUpdateOperationsInput | Date | string
    readedat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type apiclientUpdateWithoutCreateduserInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    key?: StringFieldUpdateOperationsInput | string
    secret?: StringFieldUpdateOperationsInput | string
    type?: IntFieldUpdateOperationsInput | number
    createdat?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    isactive?: BoolFieldUpdateOperationsInput | boolean
    updateduser?: userUpdateOneWithoutUpdatedapiclientsNestedInput
  }

  export type apiclientUncheckedUpdateWithoutCreateduserInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    key?: StringFieldUpdateOperationsInput | string
    secret?: StringFieldUpdateOperationsInput | string
    type?: IntFieldUpdateOperationsInput | number
    createdat?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedby?: NullableStringFieldUpdateOperationsInput | string | null
    isactive?: BoolFieldUpdateOperationsInput | boolean
  }

  export type apiclientUncheckedUpdateManyWithoutCreateduserInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    key?: StringFieldUpdateOperationsInput | string
    secret?: StringFieldUpdateOperationsInput | string
    type?: IntFieldUpdateOperationsInput | number
    createdat?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedby?: NullableStringFieldUpdateOperationsInput | string | null
    isactive?: BoolFieldUpdateOperationsInput | boolean
  }

  export type apiclientUpdateWithoutUpdateduserInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    key?: StringFieldUpdateOperationsInput | string
    secret?: StringFieldUpdateOperationsInput | string
    type?: IntFieldUpdateOperationsInput | number
    createdat?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    isactive?: BoolFieldUpdateOperationsInput | boolean
    createduser?: userUpdateOneRequiredWithoutCreatedapiclientsNestedInput
  }

  export type apiclientUncheckedUpdateWithoutUpdateduserInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    key?: StringFieldUpdateOperationsInput | string
    secret?: StringFieldUpdateOperationsInput | string
    type?: IntFieldUpdateOperationsInput | number
    createdat?: DateTimeFieldUpdateOperationsInput | Date | string
    createdby?: StringFieldUpdateOperationsInput | string
    updatedat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    isactive?: BoolFieldUpdateOperationsInput | boolean
  }

  export type apiclientUncheckedUpdateManyWithoutUpdateduserInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    key?: StringFieldUpdateOperationsInput | string
    secret?: StringFieldUpdateOperationsInput | string
    type?: IntFieldUpdateOperationsInput | number
    createdat?: DateTimeFieldUpdateOperationsInput | Date | string
    createdby?: StringFieldUpdateOperationsInput | string
    updatedat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    isactive?: BoolFieldUpdateOperationsInput | boolean
  }

  export type permissionUpdateWithoutCreateduserInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    value?: StringFieldUpdateOperationsInput | string
    group?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    createdat?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updateduser?: userUpdateOneWithoutUpdatedpermissionsNestedInput
    rolepermissions?: rolepermissionUpdateManyWithoutPermissionNestedInput
    userpermissions?: userpermissionUpdateManyWithoutPermissionNestedInput
  }

  export type permissionUncheckedUpdateWithoutCreateduserInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    value?: StringFieldUpdateOperationsInput | string
    group?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    createdat?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedby?: NullableStringFieldUpdateOperationsInput | string | null
    updatedat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    rolepermissions?: rolepermissionUncheckedUpdateManyWithoutPermissionNestedInput
    userpermissions?: userpermissionUncheckedUpdateManyWithoutPermissionNestedInput
  }

  export type permissionUncheckedUpdateManyWithoutCreateduserInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    value?: StringFieldUpdateOperationsInput | string
    group?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    createdat?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedby?: NullableStringFieldUpdateOperationsInput | string | null
    updatedat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type permissionUpdateWithoutUpdateduserInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    value?: StringFieldUpdateOperationsInput | string
    group?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    createdat?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createduser?: userUpdateOneRequiredWithoutCreatedpermissionsNestedInput
    rolepermissions?: rolepermissionUpdateManyWithoutPermissionNestedInput
    userpermissions?: userpermissionUpdateManyWithoutPermissionNestedInput
  }

  export type permissionUncheckedUpdateWithoutUpdateduserInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    value?: StringFieldUpdateOperationsInput | string
    group?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    createdby?: StringFieldUpdateOperationsInput | string
    createdat?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    rolepermissions?: rolepermissionUncheckedUpdateManyWithoutPermissionNestedInput
    userpermissions?: userpermissionUncheckedUpdateManyWithoutPermissionNestedInput
  }

  export type permissionUncheckedUpdateManyWithoutUpdateduserInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    value?: StringFieldUpdateOperationsInput | string
    group?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    createdby?: StringFieldUpdateOperationsInput | string
    createdat?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type refreshtokenUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    token?: StringFieldUpdateOperationsInput | string
    createdat?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    expiresat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type refreshtokenUncheckedUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    token?: StringFieldUpdateOperationsInput | string
    createdat?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    expiresat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type refreshtokenUncheckedUpdateManyWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    token?: StringFieldUpdateOperationsInput | string
    createdat?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    expiresat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type roleUpdateWithoutCreateduserInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    createdat?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    issystemrole?: BoolFieldUpdateOperationsInput | boolean
    updateduser?: userUpdateOneWithoutUpdatedrolesNestedInput
    rolepermissions?: rolepermissionUpdateManyWithoutRoleNestedInput
    userroles?: userroleUpdateManyWithoutRoleNestedInput
  }

  export type roleUncheckedUpdateWithoutCreateduserInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    createdat?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedby?: NullableStringFieldUpdateOperationsInput | string | null
    updatedat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    issystemrole?: BoolFieldUpdateOperationsInput | boolean
    rolepermissions?: rolepermissionUncheckedUpdateManyWithoutRoleNestedInput
    userroles?: userroleUncheckedUpdateManyWithoutRoleNestedInput
  }

  export type roleUncheckedUpdateManyWithoutCreateduserInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    createdat?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedby?: NullableStringFieldUpdateOperationsInput | string | null
    updatedat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    issystemrole?: BoolFieldUpdateOperationsInput | boolean
  }

  export type roleUpdateWithoutUpdateduserInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    createdat?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    issystemrole?: BoolFieldUpdateOperationsInput | boolean
    createduser?: userUpdateOneRequiredWithoutCreatedrolesNestedInput
    rolepermissions?: rolepermissionUpdateManyWithoutRoleNestedInput
    userroles?: userroleUpdateManyWithoutRoleNestedInput
  }

  export type roleUncheckedUpdateWithoutUpdateduserInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    createdby?: StringFieldUpdateOperationsInput | string
    createdat?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    issystemrole?: BoolFieldUpdateOperationsInput | boolean
    rolepermissions?: rolepermissionUncheckedUpdateManyWithoutRoleNestedInput
    userroles?: userroleUncheckedUpdateManyWithoutRoleNestedInput
  }

  export type roleUncheckedUpdateManyWithoutUpdateduserInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    createdby?: StringFieldUpdateOperationsInput | string
    createdat?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    issystemrole?: BoolFieldUpdateOperationsInput | boolean
  }

  export type rolepermissionUpdateWithoutCreateduserInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdat?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    permission?: permissionUpdateOneRequiredWithoutRolepermissionsNestedInput
    role?: roleUpdateOneRequiredWithoutRolepermissionsNestedInput
    updateduser?: userUpdateOneWithoutUpdatedrolepermissionsNestedInput
  }

  export type rolepermissionUncheckedUpdateWithoutCreateduserInput = {
    id?: StringFieldUpdateOperationsInput | string
    roleid?: StringFieldUpdateOperationsInput | string
    permissionid?: StringFieldUpdateOperationsInput | string
    createdat?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedby?: NullableStringFieldUpdateOperationsInput | string | null
    updatedat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type rolepermissionUncheckedUpdateManyWithoutCreateduserInput = {
    id?: StringFieldUpdateOperationsInput | string
    roleid?: StringFieldUpdateOperationsInput | string
    permissionid?: StringFieldUpdateOperationsInput | string
    createdat?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedby?: NullableStringFieldUpdateOperationsInput | string | null
    updatedat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type rolepermissionUpdateWithoutUpdateduserInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdat?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createduser?: userUpdateOneRequiredWithoutCreatedrolepermissionsNestedInput
    permission?: permissionUpdateOneRequiredWithoutRolepermissionsNestedInput
    role?: roleUpdateOneRequiredWithoutRolepermissionsNestedInput
  }

  export type rolepermissionUncheckedUpdateWithoutUpdateduserInput = {
    id?: StringFieldUpdateOperationsInput | string
    roleid?: StringFieldUpdateOperationsInput | string
    permissionid?: StringFieldUpdateOperationsInput | string
    createdat?: DateTimeFieldUpdateOperationsInput | Date | string
    createdby?: StringFieldUpdateOperationsInput | string
    updatedat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type rolepermissionUncheckedUpdateManyWithoutUpdateduserInput = {
    id?: StringFieldUpdateOperationsInput | string
    roleid?: StringFieldUpdateOperationsInput | string
    permissionid?: StringFieldUpdateOperationsInput | string
    createdat?: DateTimeFieldUpdateOperationsInput | Date | string
    createdby?: StringFieldUpdateOperationsInput | string
    updatedat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type userUpdateWithoutCreateduserInput = {
    id?: StringFieldUpdateOperationsInput | string
    firstname?: StringFieldUpdateOperationsInput | string
    lastname?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    appLanguage?: NullableStringFieldUpdateOperationsInput | string | null
    learningLanguage?: NullableStringFieldUpdateOperationsInput | string | null
    learningLevel?: NullableStringFieldUpdateOperationsInput | string | null
    theme?: NullableStringFieldUpdateOperationsInput | string | null
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    createdat?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: IntFieldUpdateOperationsInput | number
    lastentranceat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastexitat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastloginat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    stripeCustomerId?: NullableStringFieldUpdateOperationsInput | string | null
    notificationuser?: notificationUpdateManyWithoutToNestedInput
    createdapiclients?: apiclientUpdateManyWithoutCreateduserNestedInput
    updatedapiclients?: apiclientUpdateManyWithoutUpdateduserNestedInput
    createdpermissions?: permissionUpdateManyWithoutCreateduserNestedInput
    updatedpermissions?: permissionUpdateManyWithoutUpdateduserNestedInput
    refreshtokens?: refreshtokenUpdateManyWithoutUserNestedInput
    createdroles?: roleUpdateManyWithoutCreateduserNestedInput
    updatedroles?: roleUpdateManyWithoutUpdateduserNestedInput
    createdrolepermissions?: rolepermissionUpdateManyWithoutCreateduserNestedInput
    updatedrolepermissions?: rolepermissionUpdateManyWithoutUpdateduserNestedInput
    createdusers?: userUpdateManyWithoutCreateduserNestedInput
    updateduser?: userUpdateOneWithoutUpdatedusersNestedInput
    updatedusers?: userUpdateManyWithoutUpdateduserNestedInput
    createduserpermissions?: userpermissionUpdateManyWithoutCreateduserNestedInput
    updateduserpermissions?: userpermissionUpdateManyWithoutUpdateduserNestedInput
    userpermissions?: userpermissionUpdateManyWithoutUserNestedInput
    createduserroles?: userroleUpdateManyWithoutCreateduserNestedInput
    updateduserroles?: userroleUpdateManyWithoutUpdateduserNestedInput
    userroles?: userroleUpdateManyWithoutUserNestedInput
    language?: languagesUpdateManyWithoutUserNestedInput
    learningProgress?: learningProgressUpdateManyWithoutUserNestedInput
    chats?: chatUpdateManyWithoutUserNestedInput
    chatRooms?: chatRoomUpdateManyWithoutUserNestedInput
    subscriptions?: subscriptionUpdateManyWithoutUserNestedInput
  }

  export type userUncheckedUpdateWithoutCreateduserInput = {
    id?: StringFieldUpdateOperationsInput | string
    firstname?: StringFieldUpdateOperationsInput | string
    lastname?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    appLanguage?: NullableStringFieldUpdateOperationsInput | string | null
    learningLanguage?: NullableStringFieldUpdateOperationsInput | string | null
    learningLevel?: NullableStringFieldUpdateOperationsInput | string | null
    theme?: NullableStringFieldUpdateOperationsInput | string | null
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    createdat?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedby?: NullableStringFieldUpdateOperationsInput | string | null
    updatedat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: IntFieldUpdateOperationsInput | number
    lastentranceat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastexitat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastloginat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    stripeCustomerId?: NullableStringFieldUpdateOperationsInput | string | null
    notificationuser?: notificationUncheckedUpdateManyWithoutToNestedInput
    createdapiclients?: apiclientUncheckedUpdateManyWithoutCreateduserNestedInput
    updatedapiclients?: apiclientUncheckedUpdateManyWithoutUpdateduserNestedInput
    createdpermissions?: permissionUncheckedUpdateManyWithoutCreateduserNestedInput
    updatedpermissions?: permissionUncheckedUpdateManyWithoutUpdateduserNestedInput
    refreshtokens?: refreshtokenUncheckedUpdateManyWithoutUserNestedInput
    createdroles?: roleUncheckedUpdateManyWithoutCreateduserNestedInput
    updatedroles?: roleUncheckedUpdateManyWithoutUpdateduserNestedInput
    createdrolepermissions?: rolepermissionUncheckedUpdateManyWithoutCreateduserNestedInput
    updatedrolepermissions?: rolepermissionUncheckedUpdateManyWithoutUpdateduserNestedInput
    createdusers?: userUncheckedUpdateManyWithoutCreateduserNestedInput
    updatedusers?: userUncheckedUpdateManyWithoutUpdateduserNestedInput
    createduserpermissions?: userpermissionUncheckedUpdateManyWithoutCreateduserNestedInput
    updateduserpermissions?: userpermissionUncheckedUpdateManyWithoutUpdateduserNestedInput
    userpermissions?: userpermissionUncheckedUpdateManyWithoutUserNestedInput
    createduserroles?: userroleUncheckedUpdateManyWithoutCreateduserNestedInput
    updateduserroles?: userroleUncheckedUpdateManyWithoutUpdateduserNestedInput
    userroles?: userroleUncheckedUpdateManyWithoutUserNestedInput
    language?: languagesUncheckedUpdateManyWithoutUserNestedInput
    learningProgress?: learningProgressUncheckedUpdateManyWithoutUserNestedInput
    chats?: chatUncheckedUpdateManyWithoutUserNestedInput
    chatRooms?: chatRoomUncheckedUpdateManyWithoutUserNestedInput
    subscriptions?: subscriptionUncheckedUpdateManyWithoutUserNestedInput
  }

  export type userUncheckedUpdateManyWithoutCreateduserInput = {
    id?: StringFieldUpdateOperationsInput | string
    firstname?: StringFieldUpdateOperationsInput | string
    lastname?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    appLanguage?: NullableStringFieldUpdateOperationsInput | string | null
    learningLanguage?: NullableStringFieldUpdateOperationsInput | string | null
    learningLevel?: NullableStringFieldUpdateOperationsInput | string | null
    theme?: NullableStringFieldUpdateOperationsInput | string | null
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    createdat?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedby?: NullableStringFieldUpdateOperationsInput | string | null
    updatedat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: IntFieldUpdateOperationsInput | number
    lastentranceat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastexitat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastloginat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    stripeCustomerId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type userUpdateWithoutUpdateduserInput = {
    id?: StringFieldUpdateOperationsInput | string
    firstname?: StringFieldUpdateOperationsInput | string
    lastname?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    appLanguage?: NullableStringFieldUpdateOperationsInput | string | null
    learningLanguage?: NullableStringFieldUpdateOperationsInput | string | null
    learningLevel?: NullableStringFieldUpdateOperationsInput | string | null
    theme?: NullableStringFieldUpdateOperationsInput | string | null
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    createdat?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: IntFieldUpdateOperationsInput | number
    lastentranceat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastexitat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastloginat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    stripeCustomerId?: NullableStringFieldUpdateOperationsInput | string | null
    notificationuser?: notificationUpdateManyWithoutToNestedInput
    createdapiclients?: apiclientUpdateManyWithoutCreateduserNestedInput
    updatedapiclients?: apiclientUpdateManyWithoutUpdateduserNestedInput
    createdpermissions?: permissionUpdateManyWithoutCreateduserNestedInput
    updatedpermissions?: permissionUpdateManyWithoutUpdateduserNestedInput
    refreshtokens?: refreshtokenUpdateManyWithoutUserNestedInput
    createdroles?: roleUpdateManyWithoutCreateduserNestedInput
    updatedroles?: roleUpdateManyWithoutUpdateduserNestedInput
    createdrolepermissions?: rolepermissionUpdateManyWithoutCreateduserNestedInput
    updatedrolepermissions?: rolepermissionUpdateManyWithoutUpdateduserNestedInput
    createduser?: userUpdateOneRequiredWithoutCreatedusersNestedInput
    createdusers?: userUpdateManyWithoutCreateduserNestedInput
    updatedusers?: userUpdateManyWithoutUpdateduserNestedInput
    createduserpermissions?: userpermissionUpdateManyWithoutCreateduserNestedInput
    updateduserpermissions?: userpermissionUpdateManyWithoutUpdateduserNestedInput
    userpermissions?: userpermissionUpdateManyWithoutUserNestedInput
    createduserroles?: userroleUpdateManyWithoutCreateduserNestedInput
    updateduserroles?: userroleUpdateManyWithoutUpdateduserNestedInput
    userroles?: userroleUpdateManyWithoutUserNestedInput
    language?: languagesUpdateManyWithoutUserNestedInput
    learningProgress?: learningProgressUpdateManyWithoutUserNestedInput
    chats?: chatUpdateManyWithoutUserNestedInput
    chatRooms?: chatRoomUpdateManyWithoutUserNestedInput
    subscriptions?: subscriptionUpdateManyWithoutUserNestedInput
  }

  export type userUncheckedUpdateWithoutUpdateduserInput = {
    id?: StringFieldUpdateOperationsInput | string
    firstname?: StringFieldUpdateOperationsInput | string
    lastname?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    appLanguage?: NullableStringFieldUpdateOperationsInput | string | null
    learningLanguage?: NullableStringFieldUpdateOperationsInput | string | null
    learningLevel?: NullableStringFieldUpdateOperationsInput | string | null
    theme?: NullableStringFieldUpdateOperationsInput | string | null
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    createdby?: StringFieldUpdateOperationsInput | string
    createdat?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: IntFieldUpdateOperationsInput | number
    lastentranceat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastexitat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastloginat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    stripeCustomerId?: NullableStringFieldUpdateOperationsInput | string | null
    notificationuser?: notificationUncheckedUpdateManyWithoutToNestedInput
    createdapiclients?: apiclientUncheckedUpdateManyWithoutCreateduserNestedInput
    updatedapiclients?: apiclientUncheckedUpdateManyWithoutUpdateduserNestedInput
    createdpermissions?: permissionUncheckedUpdateManyWithoutCreateduserNestedInput
    updatedpermissions?: permissionUncheckedUpdateManyWithoutUpdateduserNestedInput
    refreshtokens?: refreshtokenUncheckedUpdateManyWithoutUserNestedInput
    createdroles?: roleUncheckedUpdateManyWithoutCreateduserNestedInput
    updatedroles?: roleUncheckedUpdateManyWithoutUpdateduserNestedInput
    createdrolepermissions?: rolepermissionUncheckedUpdateManyWithoutCreateduserNestedInput
    updatedrolepermissions?: rolepermissionUncheckedUpdateManyWithoutUpdateduserNestedInput
    createdusers?: userUncheckedUpdateManyWithoutCreateduserNestedInput
    updatedusers?: userUncheckedUpdateManyWithoutUpdateduserNestedInput
    createduserpermissions?: userpermissionUncheckedUpdateManyWithoutCreateduserNestedInput
    updateduserpermissions?: userpermissionUncheckedUpdateManyWithoutUpdateduserNestedInput
    userpermissions?: userpermissionUncheckedUpdateManyWithoutUserNestedInput
    createduserroles?: userroleUncheckedUpdateManyWithoutCreateduserNestedInput
    updateduserroles?: userroleUncheckedUpdateManyWithoutUpdateduserNestedInput
    userroles?: userroleUncheckedUpdateManyWithoutUserNestedInput
    language?: languagesUncheckedUpdateManyWithoutUserNestedInput
    learningProgress?: learningProgressUncheckedUpdateManyWithoutUserNestedInput
    chats?: chatUncheckedUpdateManyWithoutUserNestedInput
    chatRooms?: chatRoomUncheckedUpdateManyWithoutUserNestedInput
    subscriptions?: subscriptionUncheckedUpdateManyWithoutUserNestedInput
  }

  export type userUncheckedUpdateManyWithoutUpdateduserInput = {
    id?: StringFieldUpdateOperationsInput | string
    firstname?: StringFieldUpdateOperationsInput | string
    lastname?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    appLanguage?: NullableStringFieldUpdateOperationsInput | string | null
    learningLanguage?: NullableStringFieldUpdateOperationsInput | string | null
    learningLevel?: NullableStringFieldUpdateOperationsInput | string | null
    theme?: NullableStringFieldUpdateOperationsInput | string | null
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    createdby?: StringFieldUpdateOperationsInput | string
    createdat?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: IntFieldUpdateOperationsInput | number
    lastentranceat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastexitat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastloginat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    stripeCustomerId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type userpermissionUpdateWithoutCreateduserInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdat?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    permission?: permissionUpdateOneRequiredWithoutUserpermissionsNestedInput
    updateduser?: userUpdateOneWithoutUpdateduserpermissionsNestedInput
    user?: userUpdateOneRequiredWithoutUserpermissionsNestedInput
  }

  export type userpermissionUncheckedUpdateWithoutCreateduserInput = {
    id?: StringFieldUpdateOperationsInput | string
    userid?: StringFieldUpdateOperationsInput | string
    permissionid?: StringFieldUpdateOperationsInput | string
    createdat?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedby?: NullableStringFieldUpdateOperationsInput | string | null
    updatedat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type userpermissionUncheckedUpdateManyWithoutCreateduserInput = {
    id?: StringFieldUpdateOperationsInput | string
    userid?: StringFieldUpdateOperationsInput | string
    permissionid?: StringFieldUpdateOperationsInput | string
    createdat?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedby?: NullableStringFieldUpdateOperationsInput | string | null
    updatedat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type userpermissionUpdateWithoutUpdateduserInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdat?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createduser?: userUpdateOneRequiredWithoutCreateduserpermissionsNestedInput
    permission?: permissionUpdateOneRequiredWithoutUserpermissionsNestedInput
    user?: userUpdateOneRequiredWithoutUserpermissionsNestedInput
  }

  export type userpermissionUncheckedUpdateWithoutUpdateduserInput = {
    id?: StringFieldUpdateOperationsInput | string
    userid?: StringFieldUpdateOperationsInput | string
    permissionid?: StringFieldUpdateOperationsInput | string
    createdby?: StringFieldUpdateOperationsInput | string
    createdat?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type userpermissionUncheckedUpdateManyWithoutUpdateduserInput = {
    id?: StringFieldUpdateOperationsInput | string
    userid?: StringFieldUpdateOperationsInput | string
    permissionid?: StringFieldUpdateOperationsInput | string
    createdby?: StringFieldUpdateOperationsInput | string
    createdat?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type userpermissionUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdat?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createduser?: userUpdateOneRequiredWithoutCreateduserpermissionsNestedInput
    permission?: permissionUpdateOneRequiredWithoutUserpermissionsNestedInput
    updateduser?: userUpdateOneWithoutUpdateduserpermissionsNestedInput
  }

  export type userpermissionUncheckedUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    permissionid?: StringFieldUpdateOperationsInput | string
    createdby?: StringFieldUpdateOperationsInput | string
    createdat?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedby?: NullableStringFieldUpdateOperationsInput | string | null
    updatedat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type userpermissionUncheckedUpdateManyWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    permissionid?: StringFieldUpdateOperationsInput | string
    createdby?: StringFieldUpdateOperationsInput | string
    createdat?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedby?: NullableStringFieldUpdateOperationsInput | string | null
    updatedat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type userroleUpdateWithoutCreateduserInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdat?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    role?: roleUpdateOneRequiredWithoutUserrolesNestedInput
    updateduser?: userUpdateOneWithoutUpdateduserrolesNestedInput
    user?: userUpdateOneRequiredWithoutUserrolesNestedInput
  }

  export type userroleUncheckedUpdateWithoutCreateduserInput = {
    id?: StringFieldUpdateOperationsInput | string
    userid?: StringFieldUpdateOperationsInput | string
    roleid?: StringFieldUpdateOperationsInput | string
    createdat?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedby?: NullableStringFieldUpdateOperationsInput | string | null
    updatedat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type userroleUncheckedUpdateManyWithoutCreateduserInput = {
    id?: StringFieldUpdateOperationsInput | string
    userid?: StringFieldUpdateOperationsInput | string
    roleid?: StringFieldUpdateOperationsInput | string
    createdat?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedby?: NullableStringFieldUpdateOperationsInput | string | null
    updatedat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type userroleUpdateWithoutUpdateduserInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdat?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createduser?: userUpdateOneRequiredWithoutCreateduserrolesNestedInput
    role?: roleUpdateOneRequiredWithoutUserrolesNestedInput
    user?: userUpdateOneRequiredWithoutUserrolesNestedInput
  }

  export type userroleUncheckedUpdateWithoutUpdateduserInput = {
    id?: StringFieldUpdateOperationsInput | string
    userid?: StringFieldUpdateOperationsInput | string
    roleid?: StringFieldUpdateOperationsInput | string
    createdby?: StringFieldUpdateOperationsInput | string
    createdat?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type userroleUncheckedUpdateManyWithoutUpdateduserInput = {
    id?: StringFieldUpdateOperationsInput | string
    userid?: StringFieldUpdateOperationsInput | string
    roleid?: StringFieldUpdateOperationsInput | string
    createdby?: StringFieldUpdateOperationsInput | string
    createdat?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type userroleUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdat?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createduser?: userUpdateOneRequiredWithoutCreateduserrolesNestedInput
    role?: roleUpdateOneRequiredWithoutUserrolesNestedInput
    updateduser?: userUpdateOneWithoutUpdateduserrolesNestedInput
  }

  export type userroleUncheckedUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    roleid?: StringFieldUpdateOperationsInput | string
    createdby?: StringFieldUpdateOperationsInput | string
    createdat?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedby?: NullableStringFieldUpdateOperationsInput | string | null
    updatedat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type userroleUncheckedUpdateManyWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    roleid?: StringFieldUpdateOperationsInput | string
    createdby?: StringFieldUpdateOperationsInput | string
    createdat?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedby?: NullableStringFieldUpdateOperationsInput | string | null
    updatedat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type languagesUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    flag?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    code?: StringFieldUpdateOperationsInput | string
    learningProgress?: learningProgressUpdateManyWithoutLanguageNestedInput
  }

  export type languagesUncheckedUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    flag?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    code?: StringFieldUpdateOperationsInput | string
    learningProgress?: learningProgressUncheckedUpdateManyWithoutLanguageNestedInput
  }

  export type languagesUncheckedUpdateManyWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    flag?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    code?: StringFieldUpdateOperationsInput | string
  }

  export type learningProgressUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    progress?: IntFieldUpdateOperationsInput | number
    createdat?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    language?: languagesUpdateOneRequiredWithoutLearningProgressNestedInput
  }

  export type learningProgressUncheckedUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    languageID?: StringFieldUpdateOperationsInput | string
    progress?: IntFieldUpdateOperationsInput | number
    createdat?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type learningProgressUncheckedUpdateManyWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    languageID?: StringFieldUpdateOperationsInput | string
    progress?: IntFieldUpdateOperationsInput | number
    createdat?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type chatUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    message?: StringFieldUpdateOperationsInput | string
    role?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    room?: chatRoomUpdateOneRequiredWithoutMessagesNestedInput
  }

  export type chatUncheckedUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    roomId?: StringFieldUpdateOperationsInput | string
    message?: StringFieldUpdateOperationsInput | string
    role?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type chatUncheckedUpdateManyWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    roomId?: StringFieldUpdateOperationsInput | string
    message?: StringFieldUpdateOperationsInput | string
    role?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type chatRoomUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    language?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    messages?: chatUpdateManyWithoutRoomNestedInput
  }

  export type chatRoomUncheckedUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    language?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    messages?: chatUncheckedUpdateManyWithoutRoomNestedInput
  }

  export type chatRoomUncheckedUpdateManyWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    language?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type subscriptionUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    startDate?: DateTimeFieldUpdateOperationsInput | Date | string
    endDate?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: EnumSubscriptionStatusFieldUpdateOperationsInput | $Enums.SubscriptionStatus
    lastPaymentStatus?: NullableStringFieldUpdateOperationsInput | string | null
    stripeCustomerId?: NullableStringFieldUpdateOperationsInput | string | null
    stripePaymentId?: NullableStringFieldUpdateOperationsInput | string | null
    stripePriceId?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    package?: packagesUpdateOneRequiredWithoutSubscriptionsNestedInput
  }

  export type subscriptionUncheckedUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    packageId?: StringFieldUpdateOperationsInput | string
    startDate?: DateTimeFieldUpdateOperationsInput | Date | string
    endDate?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: EnumSubscriptionStatusFieldUpdateOperationsInput | $Enums.SubscriptionStatus
    lastPaymentStatus?: NullableStringFieldUpdateOperationsInput | string | null
    stripeCustomerId?: NullableStringFieldUpdateOperationsInput | string | null
    stripePaymentId?: NullableStringFieldUpdateOperationsInput | string | null
    stripePriceId?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type subscriptionUncheckedUpdateManyWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    packageId?: StringFieldUpdateOperationsInput | string
    startDate?: DateTimeFieldUpdateOperationsInput | Date | string
    endDate?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: EnumSubscriptionStatusFieldUpdateOperationsInput | $Enums.SubscriptionStatus
    lastPaymentStatus?: NullableStringFieldUpdateOperationsInput | string | null
    stripeCustomerId?: NullableStringFieldUpdateOperationsInput | string | null
    stripePaymentId?: NullableStringFieldUpdateOperationsInput | string | null
    stripePriceId?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }



  /**
   * Batch Payload for updateMany & deleteMany & createMany
   */

  export type BatchPayload = {
    count: number
  }

  /**
   * DMMF
   */
  export const dmmf: runtime.BaseDMMF
}